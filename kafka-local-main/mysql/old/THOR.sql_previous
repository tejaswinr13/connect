
CREATE USER IF NOT EXISTS 'super_user_1' IDENTIFIED BY 'super_user_1_password';
GRANT REPLICATION SLAVE, REPLICATION CLIENT ON *.* TO 'super_user_1';

CREATE DATABASE THOR;
GRANT ALL PRIVILEGES ON THOR.* TO 'mysqluser'@'%';
GRANT ALL PRIVILEGES ON THOR.* TO 'super_user_1'@'%';

USE THOR;

-- MySQL dump 10.13  Distrib 8.0.21, for Win64 (x86_64)
--
-- Host: mspldb219    Database: THOR
-- ------------------------------------------------------
-- Server version	8.0.21

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!50503 SET NAMES utf8mb4 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `ASSIGN_DEVICE_PARAM_VAL`
--

DROP TABLE IF EXISTS `ASSIGN_DEVICE_PARAM_VAL`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `ASSIGN_DEVICE_PARAM_VAL` (
  `ASSIGN_DEVICE_PARAM_VAL_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Assigned Device Parameter Value',
  `DEVICE_REGIST_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Device Registration',
  `PARAM_RKEY` binary(16) NOT NULL COMMENT 'The Parameter being set (Reference Value)',
  `SOURCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Source',
  `SOURCE_ID` varchar(250) NOT NULL COMMENT 'The unique identifier for this record from the Source',
  `STAT_RKEY` binary(16) NOT NULL COMMENT 'The Status of the record (Reference Value)',
  `STRING_VAL` varchar(250) DEFAULT NULL COMMENT 'The assigned string value for the Parameter',
  `SOURCE_CREATE_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created this row in the Source',
  `SOURCE_CHG_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created or altered this row in the Source',
  `SOURCE_CHG_PRCS_VAL` varchar(50) DEFAULT NULL COMMENT 'The process that created or altered this row in the Source',
  `SOURCE_CHG_REASN_VAL` varchar(250) DEFAULT NULL COMMENT 'The reason for the change to this row from the perspective of the Source',
  `SOURCE_CREATE_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the creation of the row in the Source',
  `SOURCE_UPD_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the update to the row in the Source',
  `CREATE_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The timestamp of the creation of the row',
  `CREATE_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that created this row e.g. Informatica mapping, Kafka topic, etc',
  `UPD_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The timestamp of the update to the row',
  `UPD_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that updated this row e.g. Informatica mapping, Kafka topic, etc',
  `DEL_FLAG` tinyint(1) NOT NULL COMMENT 'Determines if this row is deleted',
  PRIMARY KEY (`ASSIGN_DEVICE_PARAM_VAL_KEY`),
  UNIQUE KEY `AK_ASSIGN_DEVICE_PARAM_VAL` (`DEVICE_REGIST_KEY`,`PARAM_RKEY`),
  KEY `IX_SOURCE_CREATE_USER_VAL` (`SOURCE_CREATE_USER_VAL`),
  KEY `FK_SOURCE_KEY` (`SOURCE_KEY`),
  KEY `FK_STAT_RKEY` (`STAT_RKEY`),
  KEY `IX_STRING_VAL` (`STRING_VAL`),
  KEY `FK_DEVICE_REGIST_KEY` (`DEVICE_REGIST_KEY`),
  KEY `FK_PARAM_RKEY` (`PARAM_RKEY`),
  KEY `IX_SOURCE_ID` (`SOURCE_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='Links Parameter Value assignments to Devices.';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `CUST_ACCT`
--

DROP TABLE IF EXISTS `CUST_ACCT`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `CUST_ACCT` (
  `CUST_ACCT_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Customer Account',
  `ENT_KEY` binary(16) DEFAULT NULL COMMENT 'The EDS Enterprise Key pointer',
  `SOURCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Source',
  `SOURCE_ID` varchar(250) NOT NULL COMMENT 'The unique identifier for this record from the Source',
  `REC_TYP_RKEY` binary(16) NOT NULL COMMENT 'The EDS Record Type (Reference Value)',
  `REC_SUBTYP_RKEY` binary(16) DEFAULT NULL COMMENT 'The EDS Record Subtype (Reference Value)',
  `STAT_RKEY` binary(16) NOT NULL COMMENT 'The Status of the record (Reference Value)',
  `CUST_ACCT_NUM` varchar(50) NOT NULL COMMENT 'Medtronic Customer Account Number',
  `CUST_SHORT_NM` varchar(40) NOT NULL COMMENT 'The Customer''s short name',
  `CUST_LONG_NM` varchar(100) NOT NULL COMMENT 'The Customer''s long name',
  `CUST_ALT_NM` varchar(300) DEFAULT NULL COMMENT 'The Customer''s alternate name (in English)',
  `CUST_PREF_NM` varchar(300) DEFAULT NULL COMMENT 'The Customer''s preferred name',
  `LANG_RKEY` binary(16) NOT NULL COMMENT 'The language associated with this record (Reference Value) ',
  `SOURCE_CREATE_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created this row in the Source',
  `SOURCE_CHG_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created or altered this row in the Source',
  `SOURCE_CHG_PRCS_VAL` varchar(50) DEFAULT NULL COMMENT 'The process that created or altered this row in the Source',
  `SOURCE_CHG_REASN_VAL` varchar(250) DEFAULT NULL COMMENT 'The reason for the change to this row from the perspective of the Source',
  `SOURCE_CREATE_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the creation of the row in the Source',
  `SOURCE_UPD_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the update to the row in the Source',
  `CREATE_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The timestamp of the creation of the row',
  `CREATE_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that created this row e.g. Informatica mapping, Kafka topic, etc',
  `UPD_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The timestamp of the update to the row',
  `UPD_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that updated this row e.g. Informatica mapping, Kafka topic, etc',
  `DEL_FLAG` tinyint(1) NOT NULL COMMENT 'Determines if this row is deleted',
  `MDM_GOV_STAT_RKEY` binary(16) DEFAULT NULL COMMENT 'The Master Data Management and Data Governance Status for this record',
  PRIMARY KEY (`CUST_ACCT_KEY`),
  KEY `IX_SOURCE_CREATE_USER_VAL` (`SOURCE_CREATE_USER_VAL`),
  KEY `IX_SOURCE_ID` (`SOURCE_ID`),
  KEY `FK_SOURCE_KEY` (`SOURCE_KEY`),
  KEY `FK_ENT_KEY` (`ENT_KEY`),
  KEY `FK_REC_TYP_RKEY` (`REC_TYP_RKEY`),
  KEY `FK_REC_SUBTYP_RKEY` (`REC_SUBTYP_RKEY`),
  KEY `FK_STAT_RKEY` (`STAT_RKEY`),
  KEY `IX_CUST_ACCT_NUM` (`CUST_ACCT_NUM`),
  KEY `FK_LANG_RKEY` (`LANG_RKEY`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='A Medtronic customer account.';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `CUST_ACCT_POSTAL_ADDR`
--

DROP TABLE IF EXISTS `CUST_ACCT_POSTAL_ADDR`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `CUST_ACCT_POSTAL_ADDR` (
  `CUST_ACCT_POSTAL_ADDR_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Customer Account Postal Address',
  `CUST_ACCT_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Customer Account',
  `POSTAL_ADDR_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Postal Address',
  `SOURCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Source',
  `SOURCE_ID` varchar(250) NOT NULL COMMENT 'The unique identifier for this record from the Source',
  `STAT_RKEY` binary(16) NOT NULL COMMENT 'The Status of the record (Reference Value)',
  `ADDR_USAGE_TYP_RKEY` binary(16) NOT NULL COMMENT 'The manner by which this address is used (Reference Value)',
  `PRIORITY_VAL` tinyint DEFAULT NULL COMMENT 'The relative priority or rank of this item amongst other like items',
  `PREF_IND_RKEY` binary(16) NOT NULL COMMENT 'Indicates the preferred record',
  `ADDR_VALID_OVRD_IND_RKEY` binary(16) NOT NULL COMMENT 'Indicates that this validated address has been overridden',
  `ADDR_VALID_OVRD_REASN_RKEY` binary(16) DEFAULT NULL COMMENT 'The reason for the override of the validated address (Reference Value)',
  `EFF_START_TS` timestamp NOT NULL COMMENT 'The effectivity start date/time for this record',
  `EFF_END_TS` timestamp NULL DEFAULT NULL COMMENT 'The effectivity end date/time for this record',
  `SOURCE_CREATE_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created this row in the Source',
  `SOURCE_CHG_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created or altered this row in the Source',
  `SOURCE_CHG_PRCS_VAL` varchar(50) DEFAULT NULL COMMENT 'The process that created or altered this row in the Source',
  `SOURCE_CHG_REASN_VAL` varchar(250) DEFAULT NULL COMMENT 'The reason for the change to this row from the perspective of the Source',
  `SOURCE_CREATE_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the creation of the row in the Source',
  `SOURCE_UPD_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the update to the row in the Source',
  `CREATE_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The timestamp of the creation of the row',
  `CREATE_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that created this row e.g. Informatica mapping, Kafka topic, etc',
  `UPD_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The timestamp of the update to the row',
  `UPD_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that updated this row e.g. Informatica mapping, Kafka topic, etc',
  `DEL_FLAG` tinyint(1) NOT NULL COMMENT 'Determines if this row is deleted',
  PRIMARY KEY (`CUST_ACCT_POSTAL_ADDR_KEY`),
  KEY `IX_SOURCE_CREATE_USER_VAL` (`SOURCE_CREATE_USER_VAL`),
  KEY `FK_CUST_ACCT_KEY` (`CUST_ACCT_KEY`),
  KEY `FK_POSTAL_ADDR_KEY` (`POSTAL_ADDR_KEY`),
  KEY `FK_SOURCE_KEY` (`SOURCE_KEY`),
  KEY `FK_STAT_RKEY` (`STAT_RKEY`),
  KEY `FK_ADDR_USAGE_TYP_RKEY` (`ADDR_USAGE_TYP_RKEY`),
  KEY `IX_PRIORITY_VAL` (`PRIORITY_VAL`),
  KEY `FK_PREF_IND_RKEY` (`PREF_IND_RKEY`),
  KEY `FK_ADDR_VALID_OVRD_IND_RKEY` (`ADDR_VALID_OVRD_IND_RKEY`),
  KEY `FK_ADDR_VALID_OVRD_REASN_RKEY` (`ADDR_VALID_OVRD_REASN_RKEY`),
  KEY `IX_EFF_START_TS` (`EFF_START_TS`),
  KEY `IX_SOURCE_ID` (`SOURCE_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='Associates Postal Addresses to Customer Accounts.';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `CUST_ACCT_RLSHP`
--

DROP TABLE IF EXISTS `CUST_ACCT_RLSHP`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `CUST_ACCT_RLSHP` (
  `CUST_ACCT_RLSHP_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Customer Account Relationship',
  `CUST_ACCT_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Customer Account',
  `REL_CUST_ACCT_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Customer Account (related Customer Account)',
  `SOURCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Source',
  `SOURCE_ID` varchar(250) NOT NULL COMMENT 'The unique identifier for this record from the Source',
  `REC_TYP_RKEY` binary(16) NOT NULL COMMENT 'The EDS Record Type (Reference Value)',
  `REC_SUBTYP_RKEY` binary(16) DEFAULT NULL COMMENT 'The EDS Record Subtype (Reference Value)',
  `STAT_RKEY` binary(16) NOT NULL COMMENT 'The Status of the record (Reference Value)',
  `EFF_START_TS` timestamp NOT NULL COMMENT 'The effectivity start date/time for this record',
  `EFF_END_TS` timestamp NULL DEFAULT NULL COMMENT 'The effectivity end date/time for this record',
  `SOURCE_CREATE_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created this row in the Source',
  `SOURCE_CHG_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created or altered this row in the Source',
  `SOURCE_CHG_PRCS_VAL` varchar(50) DEFAULT NULL COMMENT 'The process that created or altered this row in the Source',
  `SOURCE_CHG_REASN_VAL` varchar(250) DEFAULT NULL COMMENT 'The reason for the change to this row from the perspective of the Source',
  `SOURCE_CREATE_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the creation of the row in the Source',
  `SOURCE_UPD_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the update to the row in the Source',
  `CREATE_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The timestamp of the creation of the row',
  `CREATE_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that created this row e.g. Informatica mapping, Kafka topic, etc',
  `UPD_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The timestamp of the update to the row',
  `UPD_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that updated this row e.g. Informatica mapping, Kafka topic, etc',
  `DEL_FLAG` tinyint(1) NOT NULL COMMENT 'Determines if this row is deleted',
  PRIMARY KEY (`CUST_ACCT_RLSHP_KEY`),
  KEY `IX_SOURCE_CREATE_USER_VAL` (`SOURCE_CREATE_USER_VAL`),
  KEY `IX_SOURCE_ID` (`SOURCE_ID`),
  KEY `FK_CUST_ACCT_KEY` (`CUST_ACCT_KEY`),
  KEY `FK_REL_CUST_ACCT_KEY` (`REL_CUST_ACCT_KEY`),
  KEY `FK_SOURCE_KEY` (`SOURCE_KEY`),
  KEY `FK_REC_TYP_RKEY` (`REC_TYP_RKEY`),
  KEY `FK_REC_SUBTYP_RKEY` (`REC_SUBTYP_RKEY`),
  KEY `FK_STAT_RKEY` (`STAT_RKEY`),
  KEY `IX_EFF_START_TS` (`EFF_START_TS`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='Relates Customer Accounts to one another.';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `CUST_ACCT_VIRTUAL_ADDR`
--

DROP TABLE IF EXISTS `CUST_ACCT_VIRTUAL_ADDR`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `CUST_ACCT_VIRTUAL_ADDR` (
  `CUST_ACCT_VIRTUAL_ADDR_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Customer Account Virtual Address',
  `CUST_ACCT_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Customer Account',
  `VIRTUAL_ADDR_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Virtual Address',
  `SOURCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Source',
  `SOURCE_ID` varchar(250) NOT NULL COMMENT 'The unique identifier for this record from the Source',
  `STAT_RKEY` binary(16) NOT NULL COMMENT 'The Status of the record (Reference Value)',
  `ADDR_USAGE_TYP_RKEY` binary(16) NOT NULL COMMENT 'The manner by which this address is used (Reference Value)',
  `PRIORITY_VAL` tinyint DEFAULT NULL COMMENT 'The relative priority or rank of this item amongst other like items',
  `PREF_IND_RKEY` binary(16) NOT NULL COMMENT 'Indicates the preferred record',
  `ACCEPT_VOICE_MSG_IND_RKEY` binary(16) NOT NULL COMMENT 'Indicates that this address accepts voice messages',
  `ACCEPT_TXT_MSG_IND_RKEY` binary(16) NOT NULL COMMENT 'Indicates that this address accepts text messages',
  `EFF_START_TS` timestamp NOT NULL COMMENT 'The effectivity start date/time for this record',
  `EFF_END_TS` timestamp NULL DEFAULT NULL COMMENT 'The effectivity end date/time for this record',
  `SOURCE_CREATE_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created this row in the Source',
  `SOURCE_CHG_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created or altered this row in the Source',
  `SOURCE_CHG_PRCS_VAL` varchar(50) DEFAULT NULL COMMENT 'The process that created or altered this row in the Source',
  `SOURCE_CHG_REASN_VAL` varchar(250) DEFAULT NULL COMMENT 'The reason for the change to this row from the perspective of the Source',
  `SOURCE_CREATE_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the creation of the row in the Source',
  `SOURCE_UPD_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the update to the row in the Source',
  `CREATE_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The timestamp of the creation of the row',
  `CREATE_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that created this row e.g. Informatica mapping, Kafka topic, etc',
  `UPD_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The timestamp of the update to the row',
  `UPD_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that updated this row e.g. Informatica mapping, Kafka topic, etc',
  `DEL_FLAG` tinyint(1) NOT NULL COMMENT 'Determines if this row is deleted',
  PRIMARY KEY (`CUST_ACCT_VIRTUAL_ADDR_KEY`),
  KEY `IX_SOURCE_CREATE_USER_VAL` (`SOURCE_CREATE_USER_VAL`),
  KEY `FK_CUST_ACCT_KEY` (`CUST_ACCT_KEY`),
  KEY `FK_VIRTUAL_ADDR_KEY` (`VIRTUAL_ADDR_KEY`),
  KEY `FK_SOURCE_KEY` (`SOURCE_KEY`),
  KEY `FK_STAT_RKEY` (`STAT_RKEY`),
  KEY `FK_ADDR_USAGE_TYP_RKEY` (`ADDR_USAGE_TYP_RKEY`),
  KEY `IX_PRIORITY_VAL` (`PRIORITY_VAL`),
  KEY `FK_PREF_IND_RKEY` (`PREF_IND_RKEY`),
  KEY `FK_ACCEPT_VOICE_MSG_IND_RKEY` (`ACCEPT_VOICE_MSG_IND_RKEY`),
  KEY `FK_ACCEPT_TXT_MSG_IND_RKEY` (`ACCEPT_TXT_MSG_IND_RKEY`),
  KEY `IX_EFF_START_TS` (`EFF_START_TS`),
  KEY `IX_SOURCE_ID` (`SOURCE_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='Associates Virtual Addresses to Customer Accounts.';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `DEVICE_INSTANCE`
--

DROP TABLE IF EXISTS `DEVICE_INSTANCE`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `DEVICE_INSTANCE` (
  `DEVICE_INSTANCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Device Instance',
  `ENT_KEY` binary(16) DEFAULT NULL COMMENT 'The EDS Enterprise Key pointer',
  `SOURCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Source',
  `SOURCE_ID` varchar(250) NOT NULL COMMENT 'The unique identifier for this record from the Source',
  `REC_TYP_RKEY` binary(16) NOT NULL COMMENT 'The EDS Record Type (Reference Value)',
  `REC_SUBTYP_RKEY` binary(16) DEFAULT NULL COMMENT 'The EDS Record Subtype (Reference Value)',
  `STAT_RKEY` binary(16) NOT NULL COMMENT 'The Status of the record (Reference Value)',
  `PROD_MATL_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Material (Parent Product)',
  `DEVICE_MFG_ORG_KEY` binary(16) DEFAULT NULL COMMENT 'The EDS primary key for Device Manufacturer (Organization)',
  `LOT_SERIAL_NUM` varchar(100) DEFAULT NULL COMMENT 'Lot number or serial number (one or the other)',
  `UNK_SERIAL_NUM_IND_RKEY` binary(16) NOT NULL COMMENT 'Indicates if the serial number is unknown',
  `MFG_DT` date DEFAULT NULL COMMENT 'The date of manufacture',
  `USE_BEFORE_DT` date DEFAULT NULL COMMENT 'The date before which the Device must be used',
  `SOURCE_CREATE_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created this row in the Source',
  `SOURCE_CHG_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created or altered this row in the Source',
  `SOURCE_CHG_PRCS_VAL` varchar(50) DEFAULT NULL COMMENT 'The process that created or altered this row in the Source',
  `SOURCE_CHG_REASN_VAL` varchar(250) DEFAULT NULL COMMENT 'The reason for the change to this row from the perspective of the Source',
  `SOURCE_CREATE_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the creation of the row in the Source',
  `SOURCE_UPD_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the update to the row in the Source',
  `CREATE_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The timestamp of the creation of the row',
  `CREATE_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that created this row e.g. Informatica mapping, Kafka topic, etc',
  `UPD_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The timestamp of the update to the row',
  `UPD_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that updated this row e.g. Informatica mapping, Kafka topic, etc',
  `DEL_FLAG` tinyint(1) NOT NULL COMMENT 'Determines if this row is deleted',
  `MDM_GOV_STAT_RKEY` binary(16) DEFAULT NULL COMMENT 'The Master Data Management and Data Governance Status for this record',
  PRIMARY KEY (`DEVICE_INSTANCE_KEY`),
  UNIQUE KEY `AK_DEVICE_INSTANCE` (`SOURCE_KEY`,`SOURCE_ID`,`REC_TYP_RKEY`),
  KEY `IX_SOURCE_CREATE_USER_VAL` (`SOURCE_CREATE_USER_VAL`),
  KEY `IX_LOT_SERIAL_NUM` (`LOT_SERIAL_NUM`),
  KEY `IX_SOURCE_ID` (`SOURCE_ID`),
  KEY `FK_ENT_KEY` (`ENT_KEY`),
  KEY `FK_SOURCE_KEY` (`SOURCE_KEY`),
  KEY `FK_REC_TYP_RKEY` (`REC_TYP_RKEY`),
  KEY `FK_REC_SUBTYP_RKEY` (`REC_SUBTYP_RKEY`),
  KEY `FK_STAT_RKEY` (`STAT_RKEY`),
  KEY `FK_PROD_MATL_KEY` (`PROD_MATL_KEY`),
  KEY `FK_DEVICE_MFG_ORG_KEY` (`DEVICE_MFG_ORG_KEY`),
  KEY `FK_UNK_SERIAL_NUM_IND_RKEY` (`UNK_SERIAL_NUM_IND_RKEY`),
  KEY `FK_MDM_GOV_STAT_RKEY` (`MDM_GOV_STAT_RKEY`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='The instance of a Device in the real world.';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `DEVICE_INSTANCE_RLSHP`
--

DROP TABLE IF EXISTS `DEVICE_INSTANCE_RLSHP`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `DEVICE_INSTANCE_RLSHP` (
  `DEVICE_INSTANCE_RLSHP_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Device Relationship',
  `DEVICE_INSTANCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Device Instance',
  `REL_DEVICE_INSTANCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Device Instance (related Device Instance)',
  `SOURCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Source',
  `SOURCE_ID` varchar(250) NOT NULL COMMENT 'The unique identifier for this record from the Source',
  `REC_TYP_RKEY` binary(16) NOT NULL COMMENT 'The EDS Record Type (Reference Value)',
  `REC_SUBTYP_RKEY` binary(16) DEFAULT NULL COMMENT 'The EDS Record Subtype (Reference Value)',
  `STAT_RKEY` binary(16) NOT NULL COMMENT 'The Status of the record (Reference Value)',
  `INIT_ACTVY_DT` date NOT NULL COMMENT 'The initial date of activity for the Device',
  `EFF_START_TS` timestamp NOT NULL COMMENT 'The effectivity start date/time for this record',
  `EFF_END_TS` timestamp NULL DEFAULT NULL COMMENT 'The effectivity end date/time for this record',
  `SOURCE_CREATE_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created this row in the Source',
  `SOURCE_CHG_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created or altered this row in the Source',
  `SOURCE_CHG_PRCS_VAL` varchar(50) DEFAULT NULL COMMENT 'The process that created or altered this row in the Source',
  `SOURCE_CHG_REASN_VAL` varchar(250) DEFAULT NULL COMMENT 'The reason for the change to this row from the perspective of the Source',
  `SOURCE_CREATE_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the creation of the row in the Source',
  `SOURCE_UPD_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the update to the row in the Source',
  `CREATE_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The timestamp of the creation of the row',
  `CREATE_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that created this row e.g. Informatica mapping, Kafka topic, etc',
  `UPD_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The timestamp of the update to the row',
  `UPD_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that updated this row e.g. Informatica mapping, Kafka topic, etc',
  `DEL_FLAG` tinyint(1) NOT NULL COMMENT 'Determines if this row is deleted',
  PRIMARY KEY (`DEVICE_INSTANCE_RLSHP_KEY`),
  UNIQUE KEY `AK_DEVICE_INSTANCE_RLSHP` (`DEVICE_INSTANCE_KEY`,`REL_DEVICE_INSTANCE_KEY`,`SOURCE_KEY`,`SOURCE_ID`,`REC_TYP_RKEY`,`EFF_START_TS`),
  KEY `IX_SOURCE_CREATE_USER_VAL` (`SOURCE_CREATE_USER_VAL`),
  KEY `FK_DEVICE_INSTANCE_KEY` (`DEVICE_INSTANCE_KEY`),
  KEY `FK_REL_DEVICE_INSTANCE_KEY` (`REL_DEVICE_INSTANCE_KEY`),
  KEY `FK_SOURCE_KEY` (`SOURCE_KEY`),
  KEY `IX_SOURCE_ID` (`SOURCE_ID`),
  KEY `FK_REC_TYP_RKEY` (`REC_TYP_RKEY`),
  KEY `FK_REC_SUBTYP_RKEY` (`REC_SUBTYP_RKEY`),
  KEY `FK_STAT_RKEY` (`STAT_RKEY`),
  KEY `IX_EFF_START_TS` (`EFF_START_TS`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='The relationship of Devices to one another.';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `DEVICE_REGIST`
--

DROP TABLE IF EXISTS `DEVICE_REGIST`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `DEVICE_REGIST` (
  `DEVICE_REGIST_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Device Registration',
  `SOURCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Source',
  `SOURCE_ID` varchar(250) NOT NULL COMMENT 'The unique identifier for this record from the Source',
  `PATIENT_KEY` binary(16) DEFAULT NULL COMMENT 'The EDS primary key for Patient',
  `DEVICE_INSTANCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Device Instance',
  `REC_TYP_RKEY` binary(16) NOT NULL COMMENT 'The EDS Record Type (Reference Value)',
  `REC_SUBTYP_RKEY` binary(16) DEFAULT NULL COMMENT 'The EDS Record Subtype (Reference Value)',
  `STAT_RKEY` binary(16) NOT NULL COMMENT 'The Status of the record (Reference Value)',
  `FOLLOWUP_HCP_KEY` binary(16) DEFAULT NULL COMMENT 'The designated Followup Healthcare Professional',
  `FOLLOWUP_ORG_KEY` binary(16) DEFAULT NULL COMMENT 'The designated Followup Healthcare Organization',
  `DEVICE_DISP_RKEY` binary(16) DEFAULT NULL COMMENT 'The Device Disposition (Reference Value)',
  `SOURCE_CREATE_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created this row in the Source',
  `SOURCE_CHG_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created or altered this row in the Source',
  `SOURCE_CHG_PRCS_VAL` varchar(50) DEFAULT NULL COMMENT 'The process that created or altered this row in the Source',
  `SOURCE_CHG_REASN_VAL` varchar(250) DEFAULT NULL COMMENT 'The reason for the change to this row from the perspective of the Source',
  `SOURCE_CREATE_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the creation of the row in the Source',
  `SOURCE_UPD_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the update to the row in the Source',
  `CREATE_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The timestamp of the creation of the row',
  `CREATE_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that created this row e.g. Informatica mapping, Kafka topic, etc',
  `UPD_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The timestamp of the update to the row',
  `UPD_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that updated this row e.g. Informatica mapping, Kafka topic, etc',
  `DEL_FLAG` tinyint(1) NOT NULL COMMENT 'Determines if this row is deleted',
  PRIMARY KEY (`DEVICE_REGIST_KEY`),
  UNIQUE KEY `AK_DEVICE_REGIST` (`SOURCE_KEY`,`SOURCE_ID`,`REC_TYP_RKEY`),
  KEY `IX_SOURCE_CREATE_USER_VAL` (`SOURCE_CREATE_USER_VAL`),
  KEY `IX_SOURCE_ID` (`SOURCE_ID`),
  KEY `FK_SOURCE_KEY` (`SOURCE_KEY`),
  KEY `FK_PATIENT_KEY` (`PATIENT_KEY`),
  KEY `FK_DEVICE_INSTANCE_KEY` (`DEVICE_INSTANCE_KEY`),
  KEY `FK_REC_TYP_RKEY` (`REC_TYP_RKEY`),
  KEY `FK_REC_SUBTYP_RKEY` (`REC_SUBTYP_RKEY`),
  KEY `FK_STAT_RKEY` (`STAT_RKEY`),
  KEY `FK_FOLLOWUP_HCP_KEY` (`FOLLOWUP_HCP_KEY`),
  KEY `FK_FOLLOWUP_ORG_KEY` (`FOLLOWUP_ORG_KEY`),
  KEY `FK_DEVICE_DISP_RKEY` (`DEVICE_DISP_RKEY`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='The current Registration for a Device.';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `EMPL`
--

DROP TABLE IF EXISTS `EMPL`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `EMPL` (
  `EMPL_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Employee',
  `ENT_KEY` binary(16) DEFAULT NULL COMMENT 'The EDS Enterprise Key pointer',
  `PERS_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Person',
  `ORG_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Organization',
  `SOURCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Source',
  `SOURCE_ID` varchar(250) NOT NULL COMMENT 'The unique identifier for this record from the Source',
  `REC_TYP_RKEY` binary(16) NOT NULL COMMENT 'The EDS Record Type (Reference Value)',
  `REC_SUBTYP_RKEY` binary(16) DEFAULT NULL COMMENT 'The EDS Record Subtype (Reference Value)',
  `STAT_RKEY` binary(16) NOT NULL COMMENT 'The Status of the record (Reference Value)',
  `TITLE_NM` varchar(50) NOT NULL COMMENT 'The Title for the Employee, if applicable',
  `LANG_RKEY` binary(16) NOT NULL COMMENT 'The language associated with this record (Reference Value)',
  `EFF_START_TS` timestamp NOT NULL COMMENT 'The effectivity start date/time for this record',
  `EFF_END_TS` timestamp NULL DEFAULT NULL COMMENT 'The effectivity end date/time for this record',
  `SOURCE_CREATE_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created this row in the Source',
  `SOURCE_CHG_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created or altered this row in the Source',
  `SOURCE_CHG_PRCS_VAL` varchar(50) DEFAULT NULL COMMENT 'The process that created or altered this row in the Source',
  `SOURCE_CHG_REASN_VAL` varchar(250) DEFAULT NULL COMMENT 'The reason for the change to this row from the perspective of the Source',
  `SOURCE_CREATE_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the creation of the row in the Source',
  `SOURCE_UPD_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the update to the row in the Source',
  `CREATE_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The timestamp of the creation of the row',
  `CREATE_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that created this row e.g. Informatica mapping, Kafka topic, etc',
  `UPD_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The timestamp of the update to the row',
  `UPD_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that updated this row e.g. Informatica mapping, Kafka topic, etc',
  `DEL_FLAG` tinyint(1) NOT NULL COMMENT 'Determines if this row is deleted',
  `MDM_GOV_STAT_RKEY` binary(16) DEFAULT NULL COMMENT 'The Master Data Management and Data Governance Status for this record',
  PRIMARY KEY (`EMPL_KEY`),
  UNIQUE KEY `AK_EMPL` (`PERS_KEY`,`ORG_KEY`,`SOURCE_KEY`,`SOURCE_ID`,`REC_TYP_RKEY`,`EFF_START_TS`),
  KEY `IX_SOURCE_CREATE_USER_VAL` (`SOURCE_CREATE_USER_VAL`),
  KEY `IX_SOURCE_ID` (`SOURCE_ID`),
  KEY `FK_ENT_KEY` (`ENT_KEY`),
  KEY `FK_PERS_KEY` (`PERS_KEY`),
  KEY `FK_ORG_KEY` (`ORG_KEY`),
  KEY `FK_SOURCE_KEY` (`SOURCE_KEY`),
  KEY `FK_REC_TYP_RKEY` (`REC_TYP_RKEY`),
  KEY `FK_REC_SUBTYP_RKEY` (`REC_SUBTYP_RKEY`),
  KEY `FK_STAT_RKEY` (`STAT_RKEY`),
  KEY `FK_LANG_RKEY` (`LANG_RKEY`),
  KEY `IX_EFF_START_TS` (`EFF_START_TS`),
  KEY `FK_MDM_GOV_STAT_RKEY` (`MDM_GOV_STAT_RKEY`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='Persons employed by an Org.';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `HCO_FCLTY`
--

DROP TABLE IF EXISTS `HCO_FCLTY`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `HCO_FCLTY` (
  `HCO_FCLTY_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Healthcare Organization (HCO) Facility',
  `ORG_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Organization',
  `PLACE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Place',
  `SOURCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Source',
  `SOURCE_ID` varchar(250) NOT NULL COMMENT 'The unique identifier for this record from the Source',
  `REC_TYP_RKEY` binary(16) NOT NULL COMMENT 'The EDS Record Type (Reference Value)',
  `REC_SUBTYP_RKEY` binary(16) DEFAULT NULL COMMENT 'The EDS Record Subtype (Reference Value)',
  `STAT_RKEY` binary(16) NOT NULL COMMENT 'The Status of the record (Reference Value)',
  `HCO_FCLTY_NM` varchar(100) NOT NULL COMMENT 'The name of the HCO Facility',
  `HCO_FCLTY_PREF_NM` varchar(300) DEFAULT NULL COMMENT 'The preferred name of the HCO Facility',
  `LANG_RKEY` binary(16) NOT NULL COMMENT 'The language associated with this record (Reference Value)',
  `ADDR_TYP_RKEY` binary(16) DEFAULT NULL COMMENT 'The preferred Address Type for tor the HCO Facility (Reference Value)',
  `CUST_ACCT_KEY` binary(16) DEFAULT NULL COMMENT 'The EDS primary key for Customer Account',
  `COMMENT_TXT` text COMMENT 'General comments related to the Healthcare Organization Facility',
  `EFF_START_TS` timestamp NOT NULL COMMENT 'The effectivity start date/time for this record',
  `EFF_END_TS` timestamp NULL DEFAULT NULL COMMENT 'The effectivity end date/time for this record',
  `SOURCE_CREATE_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created this row in the Source',
  `SOURCE_CHG_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created or altered this row in the Source',
  `SOURCE_CHG_PRCS_VAL` varchar(50) DEFAULT NULL COMMENT 'The process that created or altered this row in the Source',
  `SOURCE_CHG_REASN_VAL` varchar(250) DEFAULT NULL COMMENT 'The reason for the change to this row from the perspective of the Source',
  `SOURCE_CREATE_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the creation of the row in the Source',
  `SOURCE_UPD_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the update to the row in the Source',
  `CREATE_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The timestamp of the creation of the row',
  `CREATE_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that created this row e.g. Informatica mapping, Kafka topic, etc',
  `UPD_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The timestamp of the update to the row',
  `UPD_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that updated this row e.g. Informatica mapping, Kafka topic, etc',
  `DEL_FLAG` tinyint(1) NOT NULL COMMENT 'Determines if this row is deleted',
  PRIMARY KEY (`HCO_FCLTY_KEY`),
  UNIQUE KEY `AK_HCO_FCLTY` (`SOURCE_ID`,`REC_TYP_RKEY`,`EFF_START_TS`,`ORG_KEY`,`PLACE_KEY`,`SOURCE_KEY`),
  KEY `IX_HCO_FCLTY_NM` (`HCO_FCLTY_NM`),
  KEY `IX_HCO_FCLTY_PREF_NM` (`HCO_FCLTY_PREF_NM`),
  KEY `IX_SOURCE_CREATE_USER_VAL` (`SOURCE_CREATE_USER_VAL`),
  KEY `IX_SOURCE_ID` (`SOURCE_ID`),
  KEY `FK_ORG_KEY` (`ORG_KEY`),
  KEY `FK_PLACE_KEY` (`PLACE_KEY`),
  KEY `FK_SOURCE_KEY` (`SOURCE_KEY`),
  KEY `FK_REC_TYP_RKEY` (`REC_TYP_RKEY`),
  KEY `FK_REC_SUBTYP_RKEY` (`REC_SUBTYP_RKEY`),
  KEY `FK_STAT_RKEY` (`STAT_RKEY`),
  KEY `FK_LANG_RKEY` (`LANG_RKEY`),
  KEY `FK_ADDR_TYP_RKEY` (`ADDR_TYP_RKEY`),
  KEY `FK_CUST_ACCT_KEY` (`CUST_ACCT_KEY`),
  KEY `IX_EFF_START_TS` (`EFF_START_TS`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='A Place that is formally or semi-formally related to an Org.';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `HCO_FCLTY_POSTAL_ADDR`
--

DROP TABLE IF EXISTS `HCO_FCLTY_POSTAL_ADDR`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `HCO_FCLTY_POSTAL_ADDR` (
  `HCO_FCLTY_POSTAL_ADDR_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Healthcare Organization Facility Postal Address',
  `HCO_FCLTY_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Healthcare Organization (HCO) Facility',
  `POSTAL_ADDR_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Postal Address',
  `SOURCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Source',
  `SOURCE_ID` varchar(250) NOT NULL COMMENT 'The unique identifier for this record from the Source',
  `STAT_RKEY` binary(16) NOT NULL COMMENT 'The Status of the record (Reference Value)',
  `ADDR_USAGE_TYP_RKEY` binary(16) NOT NULL COMMENT 'The manner by which this address is used (Reference Value)',
  `PRIORITY_VAL` tinyint DEFAULT NULL COMMENT 'The relative priority or rank of this item amongst other like items',
  `PREF_IND_RKEY` binary(16) NOT NULL COMMENT 'Indicates the preferred record',
  `ADDR_VALID_OVRD_IND_RKEY` binary(16) NOT NULL COMMENT 'Indicates that this validated address has been overridden',
  `ADDR_VALID_OVRD_REASN_RKEY` binary(16) DEFAULT NULL COMMENT 'The reason for the override of the validated address (Reference Value)',
  `EFF_START_TS` timestamp NOT NULL COMMENT 'The effectivity start date/time for this record',
  `EFF_END_TS` timestamp NULL DEFAULT NULL COMMENT 'The effectivity end date/time for this record',
  `SOURCE_CREATE_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created this row in the Source',
  `SOURCE_CHG_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created or altered this row in the Source',
  `SOURCE_CHG_PRCS_VAL` varchar(50) DEFAULT NULL COMMENT 'The process that created or altered this row in the Source',
  `SOURCE_CHG_REASN_VAL` varchar(250) DEFAULT NULL COMMENT 'The reason for the change to this row from the perspective of the Source',
  `SOURCE_CREATE_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the creation of the row in the Source',
  `SOURCE_UPD_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the update to the row in the Source',
  `CREATE_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The timestamp of the creation of the row',
  `CREATE_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that created this row e.g. Informatica mapping, Kafka topic, etc',
  `UPD_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The timestamp of the update to the row',
  `UPD_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that updated this row e.g. Informatica mapping, Kafka topic, etc',
  `DEL_FLAG` tinyint(1) NOT NULL COMMENT 'Determines if this row is deleted',
  PRIMARY KEY (`HCO_FCLTY_POSTAL_ADDR_KEY`),
  KEY `IX_SOURCE_CREATE_USER_VAL` (`SOURCE_CREATE_USER_VAL`),
  KEY `FK_HCO_FCLTY_KEY` (`HCO_FCLTY_KEY`),
  KEY `FK_POSTAL_ADDR_KEY` (`POSTAL_ADDR_KEY`),
  KEY `FK_SOURCE_KEY` (`SOURCE_KEY`),
  KEY `IX_SOURCE_ID` (`SOURCE_ID`),
  KEY `FK_STAT_RKEY` (`STAT_RKEY`),
  KEY `FK_ADDR_USAGE_TYP_RKEY` (`ADDR_USAGE_TYP_RKEY`),
  KEY `IX_PRIORITY_VAL` (`PRIORITY_VAL`),
  KEY `FK_PREF_IND_RKEY` (`PREF_IND_RKEY`),
  KEY `FK_ADDR_VALID_OVRD_IND_RKEY` (`ADDR_VALID_OVRD_IND_RKEY`),
  KEY `FK_ADDR_VALID_OVRD_REASN_RKEY` (`ADDR_VALID_OVRD_REASN_RKEY`),
  KEY `IX_EFF_START_TS` (`EFF_START_TS`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='Associates HCO Facilities to Postal Addresses.';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `HCO_FCLTY_RLSHP`
--

DROP TABLE IF EXISTS `HCO_FCLTY_RLSHP`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `HCO_FCLTY_RLSHP` (
  `HCO_FCLTY_RLSHP_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Healthcare Organization Relationship',
  `HCO_FCLTY_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Healthcare Organization (HCO) Facility',
  `REL_HCO_FCLTY_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Healthcare Organization (HCO) Facility (related Facility)',
  `SOURCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Source',
  `SOURCE_ID` varchar(250) NOT NULL COMMENT 'The unique identifier for this record from the Source',
  `REC_TYP_RKEY` binary(16) NOT NULL COMMENT 'The EDS Record Type (Reference Value)',
  `REC_SUBTYP_RKEY` binary(16) DEFAULT NULL COMMENT 'The EDS Record Subtype (Reference Value)',
  `STAT_RKEY` binary(16) NOT NULL COMMENT 'The Status of the record (Reference Value)',
  `EFF_START_TS` timestamp NOT NULL COMMENT 'The effectivity start date/time for this record',
  `EFF_END_TS` timestamp NULL DEFAULT NULL COMMENT 'The effectivity end date/time for this record',
  `SOURCE_CREATE_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created this row in the Source',
  `SOURCE_CHG_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created or altered this row in the Source',
  `SOURCE_CHG_PRCS_VAL` varchar(50) DEFAULT NULL COMMENT 'The process that created or altered this row in the Source',
  `SOURCE_CHG_REASN_VAL` varchar(250) DEFAULT NULL COMMENT 'The reason for the change to this row from the perspective of the Source',
  `SOURCE_CREATE_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the creation of the row in the Source',
  `SOURCE_UPD_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the update to the row in the Source',
  `CREATE_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The timestamp of the creation of the row',
  `CREATE_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that created this row e.g. Informatica mapping, Kafka topic, etc',
  `UPD_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The timestamp of the update to the row',
  `UPD_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that updated this row e.g. Informatica mapping, Kafka topic, etc',
  `DEL_FLAG` tinyint(1) NOT NULL COMMENT 'Determines if this row is deleted',
  PRIMARY KEY (`HCO_FCLTY_RLSHP_KEY`),
  UNIQUE KEY `AK_HCO_FCLTY_RLSHP` (`HCO_FCLTY_KEY`,`REL_HCO_FCLTY_KEY`,`REC_TYP_RKEY`,`EFF_START_TS`,`SOURCE_KEY`,`SOURCE_ID`),
  KEY `IX_SOURCE_CREATE_USER_VAL` (`SOURCE_CREATE_USER_VAL`),
  KEY `FK_HCO_FCLTY_KEY` (`HCO_FCLTY_KEY`),
  KEY `FK_REL_HCO_FCLTY_KEY` (`REL_HCO_FCLTY_KEY`),
  KEY `FK_SOURCE_KEY` (`SOURCE_KEY`),
  KEY `IX_SOURCE_ID` (`SOURCE_ID`),
  KEY `FK_REC_TYP_RKEY` (`REC_TYP_RKEY`),
  KEY `FK_REC_SUBTYP_RKEY` (`REC_SUBTYP_RKEY`),
  KEY `FK_STAT_RKEY` (`STAT_RKEY`),
  KEY `IX_EFF_START_TS` (`EFF_START_TS`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='Relates HCO Facilities to one another.';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `HCO_FCLTY_VIRTUAL_ADDR`
--

DROP TABLE IF EXISTS `HCO_FCLTY_VIRTUAL_ADDR`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `HCO_FCLTY_VIRTUAL_ADDR` (
  `HCO_FCLTY_VIRTUAL_ADDR_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Healthcare Facility Virtual Address',
  `HCO_FCLTY_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Healthcare Organization (HCO) Facility',
  `VIRTUAL_ADDR_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Virtual Address',
  `SOURCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Source',
  `SOURCE_ID` varchar(250) NOT NULL COMMENT 'The unique identifier for this record from the Source',
  `STAT_RKEY` binary(16) NOT NULL COMMENT 'The Status of the record (Reference Value)',
  `ADDR_USAGE_TYP_RKEY` binary(16) NOT NULL COMMENT 'The manner by which this address is used (Reference Value)',
  `PRIORITY_VAL` tinyint DEFAULT NULL COMMENT 'The relative priority or rank of this item amongst other like items',
  `PREF_IND_RKEY` binary(16) NOT NULL COMMENT 'Indicates the preferred record',
  `ACCEPT_VOICE_MSG_IND_RKEY` binary(16) NOT NULL COMMENT 'Indicates that this address accepts voice messages',
  `ACCEPT_TXT_MSG_IND_RKEY` binary(16) NOT NULL COMMENT 'Indicates that this address accepts text messages',
  `EFF_START_TS` timestamp NOT NULL COMMENT 'The effectivity start date/time for this record',
  `EFF_END_TS` timestamp NULL DEFAULT NULL COMMENT 'The effectivity end date/time for this record',
  `SOURCE_CREATE_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created this row in the Source',
  `SOURCE_CHG_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created or altered this row in the Source',
  `SOURCE_CHG_PRCS_VAL` varchar(50) DEFAULT NULL COMMENT 'The process that created or altered this row in the Source',
  `SOURCE_CHG_REASN_VAL` varchar(250) DEFAULT NULL COMMENT 'The reason for the change to this row from the perspective of the Source',
  `SOURCE_CREATE_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the creation of the row in the Source',
  `SOURCE_UPD_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the update to the row in the Source',
  `CREATE_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The timestamp of the creation of the row',
  `CREATE_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that created this row e.g. Informatica mapping, Kafka topic, etc',
  `UPD_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The timestamp of the update to the row',
  `UPD_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that updated this row e.g. Informatica mapping, Kafka topic, etc',
  `DEL_FLAG` tinyint(1) NOT NULL COMMENT 'Determines if this row is deleted',
  PRIMARY KEY (`HCO_FCLTY_VIRTUAL_ADDR_KEY`),
  KEY `IX_SOURCE_CREATE_USER_VAL` (`SOURCE_CREATE_USER_VAL`),
  KEY `FK_HCO_FCLTY_KEY` (`HCO_FCLTY_KEY`),
  KEY `FK_VIRTUAL_ADDR_KEY` (`VIRTUAL_ADDR_KEY`),
  KEY `FK_SOURCE_KEY` (`SOURCE_KEY`),
  KEY `IX_SOURCE_ID` (`SOURCE_ID`),
  KEY `FK_STAT_RKEY` (`STAT_RKEY`),
  KEY `FK_ADDR_USAGE_TYP_RKEY` (`ADDR_USAGE_TYP_RKEY`),
  KEY `IX_PRIORITY_VAL` (`PRIORITY_VAL`),
  KEY `FK_PREF_IND_RKEY` (`PREF_IND_RKEY`),
  KEY `FK_ACCEPT_VOICE_MSG_IND_RKEY` (`ACCEPT_VOICE_MSG_IND_RKEY`),
  KEY `FK_ACCEPT_TXT_MSG_IND_RKEY` (`ACCEPT_TXT_MSG_IND_RKEY`),
  KEY `IX_EFF_START_TS` (`EFF_START_TS`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='Associates HCO Facilities to Virtual Addresses.';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `HCO_SPCLTY`
--

DROP TABLE IF EXISTS `HCO_SPCLTY`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `HCO_SPCLTY` (
  `HCO_SPCLTY_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Healthcare Organization Specialty',
  `SOURCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Source',
  `SOURCE_ID` varchar(250) NOT NULL COMMENT 'The unique identifier for this record from the Source',
  `ORG_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Organization',
  `SPCLTY_RKEY` binary(16) NOT NULL COMMENT 'The Specialty for this HCO (Reference Value)',
  `STAT_RKEY` binary(16) NOT NULL COMMENT 'The Status of the record (Reference Value)',
  `PRIORITY_VAL` tinyint DEFAULT NULL COMMENT 'The relative priority or rank of this item amongst other like items',
  `SOURCE_CREATE_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created this row in the Source',
  `SOURCE_CHG_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created or altered this row in the Source',
  `SOURCE_CHG_PRCS_VAL` varchar(50) DEFAULT NULL COMMENT 'The process that created or altered this row in the Source',
  `SOURCE_CHG_REASN_VAL` varchar(250) DEFAULT NULL COMMENT 'The reason for the change to this row from the perspective of the Source',
  `SOURCE_CREATE_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the creation of the row in the Source',
  `SOURCE_UPD_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the update to the row in the Source',
  `CREATE_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The timestamp of the creation of the row',
  `CREATE_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that created this row e.g. Informatica mapping, Kafka topic, etc',
  `UPD_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The timestamp of the update to the row',
  `UPD_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that updated this row e.g. Informatica mapping, Kafka topic, etc',
  `DEL_FLAG` tinyint(1) NOT NULL COMMENT 'Determines if this row is deleted',
  PRIMARY KEY (`HCO_SPCLTY_KEY`),
  UNIQUE KEY `AK_HCO_SPCLTY` (`ORG_KEY`,`SPCLTY_RKEY`),
  KEY `IX_SOURCE_CREATE_USER_VAL` (`SOURCE_CREATE_USER_VAL`),
  KEY `FK_SOURCE_KEY` (`SOURCE_KEY`),
  KEY `IX_SOURCE_ID` (`SOURCE_ID`),
  KEY `FK_ORG_KEY` (`ORG_KEY`),
  KEY `FK_SPCLTY_RKEY` (`SPCLTY_RKEY`),
  KEY `FK_STAT_RKEY` (`STAT_RKEY`),
  KEY `IX_PRIORITY_VAL` (`PRIORITY_VAL`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='Associates HCOs to Specialties.';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `HCP`
--

DROP TABLE IF EXISTS `HCP`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `HCP` (
  `HCP_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Healthcare Professional (HCP)',
  `ENT_KEY` binary(16) DEFAULT NULL COMMENT 'The EDS Enterprise Key pointer',
  `PERS_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Person',
  `ORG_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Organization',
  `SOURCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Source',
  `SOURCE_ID` varchar(250) NOT NULL COMMENT 'The unique identifier for this record from the Source',
  `REC_TYP_RKEY` binary(16) NOT NULL COMMENT 'The EDS Record Type (Reference Value)',
  `REC_SUBTYP_RKEY` binary(16) NOT NULL COMMENT 'The EDS Record Subtype (Reference Value)',
  `STAT_RKEY` binary(16) NOT NULL COMMENT 'The Status of the record (Reference Value)',
  `STAT_REASN_RKEY` binary(16) DEFAULT NULL COMMENT 'The Reason for the Status, if applicable (Reference Value)',
  `NO_PROC_IND_RKEY` binary(16) NOT NULL COMMENT 'Indicates this Healthcare Professional must not be associated to Procedures',
  `NO_FOLLOWUP_IND_RKEY` binary(16) NOT NULL COMMENT 'Indicates this Healthcare Professional must not be associated to Followup',
  `PRIM_LANG_RKEY` binary(16) DEFAULT NULL COMMENT 'The primary Language for the HCP (Reference Value)',
  `SEC_LANG_RKEY` binary(16) DEFAULT NULL COMMENT 'The secondary Language for this record (Reference Value)',
  `ADDR_TYP_RKEY` binary(16) DEFAULT NULL COMMENT 'The preferred Address Type for tor the HCP (Reference Value)',
  `ORIGIN_NATION_ORG_KEY` binary(16) DEFAULT NULL COMMENT 'The Nation that originated this Healthcare Professional record (Organization)',
  `HCP_ORIG_RKEY` binary(16) DEFAULT NULL COMMENT 'The party which originated this Healthcare Professional record (Reference Value)',
  `COMMENT_TXT` text COMMENT 'General comments related to the Healthcare Professional',
  `EFF_START_TS` timestamp NOT NULL COMMENT 'The effectivity start date/time for this record',
  `EFF_END_TS` timestamp NULL DEFAULT NULL COMMENT 'The effectivity end date/time for this record',
  `SOURCE_CREATE_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created this row in the Source',
  `SOURCE_CHG_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created or altered this row in the Source',
  `SOURCE_CHG_PRCS_VAL` varchar(50) DEFAULT NULL COMMENT 'The process that created or altered this row in the Source',
  `SOURCE_CHG_REASN_VAL` varchar(250) DEFAULT NULL COMMENT 'The reason for the change to this row from the perspective of the Source',
  `SOURCE_CREATE_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the creation of the row in the Source',
  `SOURCE_UPD_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the update to the row in the Source',
  `CREATE_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The timestamp of the creation of the row',
  `CREATE_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that created this row e.g. Informatica mapping, Kafka topic, etc',
  `UPD_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The timestamp of the update to the row',
  `UPD_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that updated this row e.g. Informatica mapping, Kafka topic, etc',
  `DEL_FLAG` tinyint(1) NOT NULL COMMENT 'Determines if this row is deleted',
  `MDM_GOV_STAT_RKEY` binary(16) DEFAULT NULL COMMENT 'The Master Data Management and Data Governance Status for this record',
  PRIMARY KEY (`HCP_KEY`),
  UNIQUE KEY `AK_HCP` (`ORG_KEY`,`SOURCE_KEY`,`SOURCE_ID`,`REC_TYP_RKEY`,`EFF_START_TS`),
  KEY `IX_SOURCE_CREATE_USER_VAL` (`SOURCE_CREATE_USER_VAL`),
  KEY `IX_SOURCE_ID` (`SOURCE_ID`),
  KEY `FK_ENT_KEY` (`ENT_KEY`),
  KEY `FK_PERS_KEY` (`PERS_KEY`),
  KEY `FK_ORG_KEY` (`ORG_KEY`),
  KEY `FK_SOURCE_KEY` (`SOURCE_KEY`),
  KEY `FK_REC_TYP_RKEY` (`REC_TYP_RKEY`),
  KEY `FK_REC_SUBTYP_RKEY` (`REC_SUBTYP_RKEY`),
  KEY `FK_STAT_RKEY` (`STAT_RKEY`),
  KEY `FK_STAT_REASN_RKEY` (`STAT_REASN_RKEY`),
  KEY `FK_NO_PROC_IND_RKEY` (`NO_PROC_IND_RKEY`),
  KEY `FK_NO_FOLLOWUP_IND_RKEY` (`NO_FOLLOWUP_IND_RKEY`),
  KEY `FK_PRIM_LANG_RKEY` (`PRIM_LANG_RKEY`),
  KEY `FK_SEC_LANG_RKEY` (`SEC_LANG_RKEY`),
  KEY `FK_ADDR_TYP_RKEY` (`ADDR_TYP_RKEY`),
  KEY `FK_ORIGIN_NATION_ORG_KEY` (`ORIGIN_NATION_ORG_KEY`),
  KEY `FK_HCP_ORIG_RKEY` (`HCP_ORIG_RKEY`),
  KEY `IX_EFF_START_TS` (`EFF_START_TS`),
  KEY `FK_MDM_GOV_STAT_RKEY` (`MDM_GOV_STAT_RKEY`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='A Person playing the role of HCP for an Org.';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `HCP_ALT_ID`
--

DROP TABLE IF EXISTS `HCP_ALT_ID`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `HCP_ALT_ID` (
  `HCP_ALT_ID_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Healthcare Professional (HCP) Alternate Identifier',
  `SOURCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Source',
  `SOURCE_ID` varchar(250) NOT NULL COMMENT 'The unique identifier for this record from the Source',
  `HCP_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Healthcare Professional (HCP)',
  `ALT_ID_TYP_RKEY` binary(16) NOT NULL COMMENT 'The type of Alternate Identifier (Reference Value)',
  `STAT_RKEY` binary(16) NOT NULL COMMENT 'The Status of the record (Reference Value)',
  `ALT_ID_VAL` varchar(250) DEFAULT NULL COMMENT 'The alternate identifier value for the Person (e.g. SSN, Drivers License Number)',
  `ORIGIN_ORG_KEY` binary(16) DEFAULT NULL COMMENT 'The related Organization that originates this identifier, if applicable',
  `SOURCE_CREATE_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created this row in the Source',
  `SOURCE_CHG_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created or altered this row in the Source',
  `SOURCE_CHG_PRCS_VAL` varchar(50) DEFAULT NULL COMMENT 'The process that created or altered this row in the Source',
  `SOURCE_CHG_REASN_VAL` varchar(250) DEFAULT NULL COMMENT 'The reason for the change to this row from the perspective of the Source',
  `SOURCE_CREATE_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the creation of the row in the Source',
  `SOURCE_UPD_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the update to the row in the Source',
  `CREATE_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The timestamp of the creation of the row',
  `CREATE_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that created this row e.g. Informatica mapping, Kafka topic, etc',
  `UPD_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The timestamp of the update to the row',
  `UPD_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that updated this row e.g. Informatica mapping, Kafka topic, etc',
  `DEL_FLAG` tinyint(1) NOT NULL COMMENT 'Determines if this row is deleted',
  PRIMARY KEY (`HCP_ALT_ID_KEY`),
  UNIQUE KEY `AK_HCP_ALT_ID` (`SOURCE_KEY`,`SOURCE_ID`,`ALT_ID_TYP_RKEY`),
  KEY `IX_SOURCE_CREATE_USER_VAL` (`SOURCE_CREATE_USER_VAL`),
  KEY `FK_SOURCE_KEY` (`SOURCE_KEY`),
  KEY `IX_SOURCE_ID` (`SOURCE_ID`),
  KEY `FK_HCP_KEY` (`HCP_KEY`),
  KEY `FK_ALT_ID_TYP_RKEY` (`ALT_ID_TYP_RKEY`),
  KEY `FK_STAT_RKEY` (`STAT_RKEY`),
  KEY `IX_ALT_ID_VAL` (`ALT_ID_VAL`),
  KEY `FK_ORIGIN_ORG_KEY` (`ORIGIN_ORG_KEY`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='Alternate Identifiers for a Healtcare Professional.';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `HCP_POSTAL_ADDR`
--

DROP TABLE IF EXISTS `HCP_POSTAL_ADDR`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `HCP_POSTAL_ADDR` (
  `HCP_POSTAL_ADDR_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Healthcare Professional (HCP) Postal Address',
  `POSTAL_ADDR_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Postal Address',
  `HCP_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Healthcare Professional (HCP)',
  `SOURCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Source',
  `SOURCE_ID` varchar(250) NOT NULL COMMENT 'The unique identifier for this record from the Source',
  `STAT_RKEY` binary(16) NOT NULL COMMENT 'The Status of the record (Reference Value)',
  `ADDR_USAGE_TYP_RKEY` binary(16) NOT NULL COMMENT 'The manner by which this address is used (Reference Value)',
  `PRIORITY_VAL` tinyint DEFAULT NULL COMMENT 'The relative priority or rank of this item amongst other like items',
  `PREF_IND_RKEY` binary(16) NOT NULL COMMENT 'Indicates the preferred record',
  `ADDR_VALID_OVRD_IND_RKEY` binary(16) NOT NULL COMMENT 'Indicates that this validated address has been overridden',
  `ADDR_VALID_OVRD_REASN_RKEY` binary(16) DEFAULT NULL COMMENT 'The reason for the override of the validated address (Reference Value)',
  `ADDR_CHG_REASN_RKEY` binary(16) DEFAULT NULL COMMENT 'The Reason for the change in Address, if applicable (Reference Value)',
  `EFF_START_TS` timestamp NOT NULL COMMENT 'The effectivity start date/time for this record',
  `EFF_END_TS` timestamp NULL DEFAULT NULL COMMENT 'The effectivity end date/time for this record',
  `SOURCE_CREATE_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created this row in the Source',
  `SOURCE_CHG_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created or altered this row in the Source',
  `SOURCE_CHG_PRCS_VAL` varchar(50) DEFAULT NULL COMMENT 'The process that created or altered this row in the Source',
  `SOURCE_CHG_REASN_VAL` varchar(250) DEFAULT NULL COMMENT 'The reason for the change to this row from the perspective of the Source',
  `SOURCE_CREATE_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the creation of the row in the Source',
  `SOURCE_UPD_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the update to the row in the Source',
  `CREATE_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The timestamp of the creation of the row',
  `CREATE_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that created this row e.g. Informatica mapping, Kafka topic, etc',
  `UPD_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The timestamp of the update to the row',
  `UPD_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that updated this row e.g. Informatica mapping, Kafka topic, etc',
  `DEL_FLAG` tinyint(1) NOT NULL COMMENT 'Determines if this row is deleted',
  PRIMARY KEY (`HCP_POSTAL_ADDR_KEY`),
  UNIQUE KEY `AK_HCP_POSTAL_ADDR` (`POSTAL_ADDR_KEY`,`HCP_KEY`,`EFF_START_TS`),
  KEY `IX_SOURCE_CREATE_USER_VAL` (`SOURCE_CREATE_USER_VAL`),
  KEY `FK_HCP_KEY` (`HCP_KEY`),
  KEY `FK_POSTAL_ADDR_KEY` (`POSTAL_ADDR_KEY`),
  KEY `FK_SOURCE_KEY` (`SOURCE_KEY`),
  KEY `IX_SOURCE_ID` (`SOURCE_ID`),
  KEY `FK_STAT_RKEY` (`STAT_RKEY`),
  KEY `FK_ADDR_USAGE_TYP_RKEY` (`ADDR_USAGE_TYP_RKEY`),
  KEY `IX_PRIORITY_VAL` (`PRIORITY_VAL`),
  KEY `FK_PREF_IND_RKEY` (`PREF_IND_RKEY`),
  KEY `FK_ADDR_VALID_OVRD_IND_RKEY` (`ADDR_VALID_OVRD_IND_RKEY`),
  KEY `FK_ADDR_VALID_OVRD_REASN_RKEY` (`ADDR_VALID_OVRD_REASN_RKEY`),
  KEY `FK_ADDR_CHG_REASN_RKEY` (`ADDR_CHG_REASN_RKEY`),
  KEY `IX_EFF_START_TS` (`EFF_START_TS`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='Associates HCPs to Postal Addresses.';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `HCP_SPCLTY`
--

DROP TABLE IF EXISTS `HCP_SPCLTY`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `HCP_SPCLTY` (
  `HCP_SPCLTY_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Healthcare Provider Specialty',
  `SOURCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Source',
  `SOURCE_ID` varchar(250) NOT NULL COMMENT 'The unique identifier for this record from the Source',
  `HCP_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Healthcare Professional (HCP)',
  `SPCLTY_RKEY` binary(16) NOT NULL COMMENT 'The Specialty for this HCP (Reference Value)',
  `STAT_RKEY` binary(16) NOT NULL COMMENT 'The Status of the record (Reference Value)',
  `PRIORITY_VAL` tinyint DEFAULT NULL COMMENT 'The relative priority or rank of this item amongst other like items',
  `SOURCE_CREATE_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created this row in the Source',
  `SOURCE_CHG_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created or altered this row in the Source',
  `SOURCE_CHG_PRCS_VAL` varchar(50) DEFAULT NULL COMMENT 'The process that created or altered this row in the Source',
  `SOURCE_CHG_REASN_VAL` varchar(250) DEFAULT NULL COMMENT 'The reason for the change to this row from the perspective of the Source',
  `SOURCE_CREATE_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the creation of the row in the Source',
  `SOURCE_UPD_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the update to the row in the Source',
  `CREATE_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The timestamp of the creation of the row',
  `CREATE_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that created this row e.g. Informatica mapping, Kafka topic, etc',
  `UPD_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The timestamp of the update to the row',
  `UPD_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that updated this row e.g. Informatica mapping, Kafka topic, etc',
  `DEL_FLAG` tinyint(1) NOT NULL COMMENT 'Determines if this row is deleted',
  PRIMARY KEY (`HCP_SPCLTY_KEY`),
  UNIQUE KEY `AK_HCP_SPCLTY` (`SPCLTY_RKEY`,`SOURCE_KEY`,`SOURCE_ID`),
  KEY `IX_SOURCE_CREATE_USER_VAL` (`SOURCE_CREATE_USER_VAL`),
  KEY `FK_HCP_KEY` (`HCP_KEY`),
  KEY `FK_SPCLTY_RKEY` (`SPCLTY_RKEY`),
  KEY `FK_SOURCE_KEY` (`SOURCE_KEY`),
  KEY `FK_STAT_RKEY` (`STAT_RKEY`),
  KEY `IX_PRIORITY_VAL` (`PRIORITY_VAL`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='Associates HCPs to Specialties.';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `HCP_VIRTUAL_ADDR`
--

DROP TABLE IF EXISTS `HCP_VIRTUAL_ADDR`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `HCP_VIRTUAL_ADDR` (
  `HCP_VIRTUAL_ADDR_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Healthcare Professional (HCP) Virtual Address',
  `VIRTUAL_ADDR_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Virtual Address',
  `HCP_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Healthcare Professional (HCP)',
  `SOURCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Source',
  `SOURCE_ID` varchar(250) NOT NULL COMMENT 'The unique identifier for this record from the Source',
  `STAT_RKEY` binary(16) NOT NULL COMMENT 'The Status of the record (Reference Value)',
  `ADDR_USAGE_TYP_RKEY` binary(16) NOT NULL COMMENT 'The manner by which this address is used (Reference Value)',
  `PRIORITY_VAL` tinyint DEFAULT NULL COMMENT 'The relative priority or rank of this item amongst other like items',
  `PREF_IND_RKEY` binary(16) NOT NULL COMMENT 'Indicates the preferred record',
  `ACCEPT_VOICE_MSG_IND_RKEY` binary(16) NOT NULL COMMENT 'Indicates that this address accepts voice messages',
  `ACCEPT_TXT_MSG_IND_RKEY` binary(16) NOT NULL COMMENT 'Indicates that this address accepts text messages',
  `EFF_START_TS` timestamp NOT NULL COMMENT 'The effectivity start date/time for this record',
  `EFF_END_TS` timestamp NULL DEFAULT NULL COMMENT 'The effectivity end date/time for this record',
  `SOURCE_CREATE_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created this row in the Source',
  `SOURCE_CHG_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created or altered this row in the Source',
  `SOURCE_CHG_PRCS_VAL` varchar(50) DEFAULT NULL COMMENT 'The process that created or altered this row in the Source',
  `SOURCE_CHG_REASN_VAL` varchar(250) DEFAULT NULL COMMENT 'The reason for the change to this row from the perspective of the Source',
  `SOURCE_CREATE_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the creation of the row in the Source',
  `SOURCE_UPD_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the update to the row in the Source',
  `CREATE_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The timestamp of the creation of the row',
  `CREATE_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that created this row e.g. Informatica mapping, Kafka topic, etc',
  `UPD_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The timestamp of the update to the row',
  `UPD_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that updated this row e.g. Informatica mapping, Kafka topic, etc',
  `DEL_FLAG` tinyint(1) NOT NULL COMMENT 'Determines if this row is deleted',
  PRIMARY KEY (`HCP_VIRTUAL_ADDR_KEY`),
  UNIQUE KEY `AK_HCP_VIRTUAL_ADDR` (`VIRTUAL_ADDR_KEY`,`HCP_KEY`,`EFF_START_TS`),
  KEY `IX_SOURCE_CREATE_USER_VAL` (`SOURCE_CREATE_USER_VAL`),
  KEY `FK_HCP_KEY` (`HCP_KEY`),
  KEY `FK_VIRTUAL_ADDR_KEY` (`VIRTUAL_ADDR_KEY`),
  KEY `FK_SOURCE_KEY` (`SOURCE_KEY`),
  KEY `IX_SOURCE_ID` (`SOURCE_ID`),
  KEY `FK_STAT_RKEY` (`STAT_RKEY`),
  KEY `FK_ADDR_USAGE_TYP_RKEY` (`ADDR_USAGE_TYP_RKEY`),
  KEY `IX_PRIORITY_VAL` (`PRIORITY_VAL`),
  KEY `FK_PREF_IND_RKEY` (`PREF_IND_RKEY`),
  KEY `FK_ACCEPT_VOICE_MSG_IND_RKEY` (`ACCEPT_VOICE_MSG_IND_RKEY`),
  KEY `FK_ACCEPT_TXT_MSG_IND_RKEY` (`ACCEPT_TXT_MSG_IND_RKEY`),
  KEY `IX_EFF_START_TS` (`EFF_START_TS`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='Associates HCPs to Virtual Addresses.';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `MATL`
--

DROP TABLE IF EXISTS `MATL`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `MATL` (
  `MATL_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Material',
  `ENT_KEY` binary(16) DEFAULT NULL COMMENT 'The EDS Enterprise Key pointer',
  `SOURCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Source',
  `SOURCE_ID` varchar(250) NOT NULL COMMENT 'The unique identifier for this record from the Source',
  `REC_TYP_RKEY` binary(16) NOT NULL COMMENT 'The EDS Record Type (Reference Value)',
  `REC_SUBTYP_RKEY` binary(16) DEFAULT NULL COMMENT 'The EDS Record Subtype (Reference Value)',
  `STAT_RKEY` binary(16) NOT NULL COMMENT 'The Status of the record (Reference Value)',
  `MATL_TYP_RKEY` binary(16) DEFAULT NULL COMMENT 'The Material Type of this Material record (Reference Value)',
  `MATL_STAT_RKEY` binary(16) DEFAULT NULL COMMENT 'The Material Status of this Material record (Reference Value)',
  `MATL_NUM` varchar(45) NOT NULL COMMENT 'The Material Number',
  `MATL_DISPL_NUM` varchar(100) DEFAULT NULL COMMENT 'The display number for the Material',
  `MATL_SHORT_NM` varchar(20) DEFAULT NULL COMMENT 'The short name for the Material',
  `MATL_LONG_NM` varchar(50) DEFAULT NULL COMMENT 'The long name for the Material',
  `MATL_DESC` varchar(100) DEFAULT NULL COMMENT 'The decription of the Material',
  `MATL_BRAND_TXT` varchar(100) DEFAULT NULL COMMENT 'The Brand Name of the Material',
  `LOT_SERIAL_CD_RKEY` binary(16) DEFAULT NULL COMMENT ' A code specifying if the Material is Serialized or Lot controlled (Reference Value)',
  `LANG_RKEY` binary(16) NOT NULL COMMENT 'The language associated with this record (Reference Value)',
  `UOM_RKEY` binary(16) DEFAULT NULL COMMENT 'The Unit of Measure for the Material (Reference Value)',
  `TRACK_IND_RKEY` binary(16) NOT NULL COMMENT 'Indicates that this Material is being tracked from a regulatory standpoint',
  `TRACK_METHOD_RKEY` binary(16) DEFAULT NULL COMMENT 'The Tracking Method for this Material (Reference Value)',
  `TRACK_PURP_RKEY` binary(16) DEFAULT NULL COMMENT 'The Tracking Purpose for this Material (Reference Value)',
  `SOURCE_CREATE_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created this row in the Source',
  `SOURCE_CHG_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created or altered this row in the Source',
  `SOURCE_CHG_PRCS_VAL` varchar(50) DEFAULT NULL COMMENT 'The process that created or altered this row in the Source',
  `SOURCE_CHG_REASN_VAL` varchar(250) DEFAULT NULL COMMENT 'The reason for the change to this row from the perspective of the Source',
  `SOURCE_CREATE_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the creation of the row in the Source',
  `SOURCE_UPD_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the update to the row in the Source',
  `CREATE_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The timestamp of the creation of the row',
  `CREATE_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that created this row e.g. Informatica mapping, Kafka topic, etc',
  `UPD_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The timestamp of the update to the row',
  `UPD_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that updated this row e.g. Informatica mapping, Kafka topic, etc',
  `DEL_FLAG` tinyint(1) NOT NULL COMMENT 'Determines if this row is deleted',
  `MDM_GOV_STAT_RKEY` binary(16) DEFAULT NULL COMMENT 'The Master Data Management and Data Governance Status for this record',
  PRIMARY KEY (`MATL_KEY`),
  UNIQUE KEY `AK_MATL` (`SOURCE_ID`,`SOURCE_KEY`,`REC_TYP_RKEY`,`MATL_NUM`),
  KEY `IX_MATL_NUM` (`MATL_NUM`),
  KEY `FK_TRACK_IND_RKEY` (`TRACK_IND_RKEY`),
  KEY `IX_SOURCE_CREATE_USER_VAL` (`SOURCE_CREATE_USER_VAL`),
  KEY `IX_SOURCE_ID` (`SOURCE_ID`),
  KEY `FK_SOURCE_KEY` (`SOURCE_KEY`),
  KEY `FK_REC_TYP_RKEY` (`REC_TYP_RKEY`),
  KEY `FK_REC_SUBTYP_RKEY` (`REC_SUBTYP_RKEY`),
  KEY `FK_STAT_RKEY` (`STAT_RKEY`),
  KEY `FK_LANG_RKEY` (`LANG_RKEY`),
  KEY `FK_UOM_RKEY` (`UOM_RKEY`),
  KEY `FK_TRACK_METHOD_RKEY` (`TRACK_METHOD_RKEY`),
  KEY `FK_TRACK_PURP_RKEY` (`TRACK_PURP_RKEY`),
  KEY `FK_MATL_TYP_RKEY` (`MATL_TYP_RKEY`),
  KEY `FK_MATL_STAT_RKEY` (`MATL_STAT_RKEY`),
  KEY `IX_MATL_BRAND_TXT` (`MATL_BRAND_TXT`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='Any thing that has extension in space and mass.';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `MATL_ORG`
--

DROP TABLE IF EXISTS `MATL_ORG`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `MATL_ORG` (
  `MATL_ORG_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Material Organization',
  `ORG_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Organization',
  `MATL_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Material',
  `SOURCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Source',
  `SOURCE_ID` varchar(250) NOT NULL COMMENT 'The unique identifier for this record from the Source',
  `REC_TYP_RKEY` binary(16) NOT NULL COMMENT 'The EDS Record Type (Reference Value)',
  `REC_SUBTYP_RKEY` binary(16) DEFAULT NULL COMMENT 'The EDS Record Subtype (Reference Value)',
  `STAT_RKEY` binary(16) NOT NULL COMMENT 'The Status of the record (Reference Value)',
  `EFF_START_TS` timestamp NOT NULL COMMENT 'The effectivity start date/time for this record',
  `EFF_END_TS` timestamp NULL DEFAULT NULL COMMENT 'The effectivity end date/time for this record',
  `SOURCE_CREATE_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created this row in the Source',
  `SOURCE_CHG_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created or altered this row in the Source',
  `SOURCE_CHG_PRCS_VAL` varchar(50) DEFAULT NULL COMMENT 'The process that created or altered this row in the Source',
  `SOURCE_CHG_REASN_VAL` varchar(250) DEFAULT NULL COMMENT 'The reason for the change to this row from the perspective of the Source',
  `SOURCE_CREATE_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the creation of the row in the Source',
  `SOURCE_UPD_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the update to the row in the Source',
  `CREATE_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The timestamp of the creation of the row',
  `CREATE_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that created this row e.g. Informatica mapping, Kafka topic, etc',
  `UPD_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The timestamp of the update to the row',
  `UPD_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that updated this row e.g. Informatica mapping, Kafka topic, etc',
  `DEL_FLAG` tinyint(1) NOT NULL COMMENT 'Determines if this row is deleted',
  PRIMARY KEY (`MATL_ORG_KEY`),
  UNIQUE KEY `AK_MATL_ORG` (`ORG_KEY`,`MATL_KEY`,`SOURCE_KEY`,`SOURCE_ID`,`REC_TYP_RKEY`,`EFF_START_TS`),
  KEY `IX_SOURCE_CREATE_USER_VAL` (`SOURCE_CREATE_USER_VAL`),
  KEY `FK_MATL_KEY` (`MATL_KEY`),
  KEY `FK_ORG_KEY` (`ORG_KEY`),
  KEY `FK_SOURCE_KEY` (`SOURCE_KEY`),
  KEY `FK_REC_TYP_RKEY` (`REC_TYP_RKEY`),
  KEY `FK_REC_SUBTYP_RKEY` (`REC_SUBTYP_RKEY`),
  KEY `FK_STAT_RKEY` (`STAT_RKEY`),
  KEY `IX_EFF_START_TS` (`EFF_START_TS`),
  KEY `IX_SOURCE_ID` (`SOURCE_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='The relationship of Materials to Orgs.';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `MATL_RLSHP`
--

DROP TABLE IF EXISTS `MATL_RLSHP`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `MATL_RLSHP` (
  `MATL_RLSHP_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Material Relationship',
  `MATL_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Material',
  `REL_MATL_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Material (related Material)',
  `SOURCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Source',
  `SOURCE_ID` varchar(250) NOT NULL COMMENT 'The unique identifier for this record from the Source',
  `REC_TYP_RKEY` binary(16) NOT NULL COMMENT 'The EDS Record Type (Reference Value)',
  `REC_SUBTYP_RKEY` binary(16) DEFAULT NULL COMMENT 'The EDS Record Subtype (Reference Value)',
  `STAT_RKEY` binary(16) NOT NULL COMMENT 'The Status of the record (Reference Value)',
  `PRIORITY_VAL` tinyint DEFAULT NULL COMMENT 'The relative priority or rank of this item amongst other like items',
  `EFF_START_TS` timestamp NOT NULL COMMENT 'The effectivity start date/time for this record',
  `EFF_END_TS` timestamp NULL DEFAULT NULL COMMENT 'The effectivity end date/time for this record',
  `SOURCE_CREATE_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created this row in the Source',
  `SOURCE_CHG_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created or altered this row in the Source',
  `SOURCE_CHG_PRCS_VAL` varchar(50) DEFAULT NULL COMMENT 'The process that created or altered this row in the Source',
  `SOURCE_CHG_REASN_VAL` varchar(250) DEFAULT NULL COMMENT 'The reason for the change to this row from the perspective of the Source',
  `SOURCE_CREATE_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the creation of the row in the Source',
  `SOURCE_UPD_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the update to the row in the Source',
  `CREATE_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The timestamp of the creation of the row',
  `CREATE_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that created this row e.g. Informatica mapping, Kafka topic, etc',
  `UPD_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The timestamp of the update to the row',
  `UPD_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that updated this row e.g. Informatica mapping, Kafka topic, etc',
  `DEL_FLAG` tinyint(1) NOT NULL COMMENT 'Determines if this row is deleted',
  PRIMARY KEY (`MATL_RLSHP_KEY`),
  UNIQUE KEY `AK_MATL_RLSHP` (`REL_MATL_KEY`,`SOURCE_KEY`,`SOURCE_ID`,`REC_TYP_RKEY`,`EFF_START_TS`),
  KEY `IX_SOURCE_CREATE_USER_VAL` (`SOURCE_CREATE_USER_VAL`),
  KEY `FK_MATL_KEY` (`MATL_KEY`),
  KEY `FK_REL_MATL_KEY` (`REL_MATL_KEY`),
  KEY `FK_SOURCE_KEY` (`SOURCE_KEY`),
  KEY `FK_REC_TYP_RKEY` (`REC_TYP_RKEY`),
  KEY `FK_REC_SUBTYP_RKEY` (`REC_SUBTYP_RKEY`),
  KEY `FK_STAT_RKEY` (`STAT_RKEY`),
  KEY `IX_PRIORITY_VAL` (`PRIORITY_VAL`),
  KEY `IX_EFF_START_TS` (`EFF_START_TS`),
  KEY `IX_SOURCE_ID` (`SOURCE_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='The relationship of Materials to one another.';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `MATL_UOM`
--

DROP TABLE IF EXISTS `MATL_UOM`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `MATL_UOM` (
  `MATL_UOM_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Material Unit of Measure',
  `SOURCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Source',
  `SOURCE_ID` varchar(250) NOT NULL COMMENT 'The unique identifier for this record from the Source',
  `REC_TYP_RKEY` binary(16) NOT NULL COMMENT 'The EDS Record Type (Reference Value)',
  `REC_SUBTYP_RKEY` binary(16) DEFAULT NULL COMMENT 'The EDS Record Subtype (Reference Value)',
  `STAT_RKEY` binary(16) NOT NULL COMMENT 'The Status of the record (Reference Value)',
  `MATL_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Material',
  `UOM_RKEY` binary(16) NOT NULL COMMENT 'The Unit of Measure for the Material (Reference Value)',
  `GTIN_VAL` varchar(14) NOT NULL COMMENT 'Global Trade Item Number',
  `SOURCE_CREATE_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created this row in the Source',
  `SOURCE_CHG_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created or altered this row in the Source',
  `SOURCE_CHG_PRCS_VAL` varchar(50) DEFAULT NULL COMMENT 'The process that created or altered this row in the Source',
  `SOURCE_CHG_REASN_VAL` varchar(250) DEFAULT NULL COMMENT 'The reason for the change to this row from the perspective of the Source',
  `SOURCE_CREATE_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the creation of the row in the Source',
  `SOURCE_UPD_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the update to the row in the Source',
  `CREATE_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The timestamp of the creation of the row',
  `CREATE_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that created this row e.g. Informatica mapping, Kafka topic, etc',
  `UPD_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The timestamp of the update to the row',
  `UPD_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that updated this row e.g. Informatica mapping, Kafka topic, etc',
  `DEL_FLAG` tinyint(1) NOT NULL COMMENT 'Determines if this row is deleted',
  PRIMARY KEY (`MATL_UOM_KEY`),
  UNIQUE KEY `AK_MATL_UOM` (`SOURCE_KEY`,`SOURCE_ID`,`GTIN_VAL`,`MATL_KEY`,`UOM_RKEY`),
  KEY `IX_SOURCE_CREATE_USER_VAL` (`SOURCE_CREATE_USER_VAL`),
  KEY `IX_SOURCE_ID` (`SOURCE_ID`),
  KEY `FK_MATL_KEY` (`MATL_KEY`),
  KEY `FK_SOURCE_KEY` (`SOURCE_KEY`),
  KEY `FK_REC_TYP_RKEY` (`REC_TYP_RKEY`),
  KEY `FK_REC_SUBTYP_RKEY` (`REC_SUBTYP_RKEY`),
  KEY `FK_STAT_RKEY` (`STAT_RKEY`),
  KEY `FK_UOM_RKEY` (`UOM_RKEY`),
  KEY `IX_GTIN_VAL` (`GTIN_VAL`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='Material Unit of Measure; Global Trade Item Numbers.';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `MEDL_EVNT`
--

DROP TABLE IF EXISTS `MEDL_EVNT`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `MEDL_EVNT` (
  `MEDL_EVNT_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Medical Event',
  `PATIENT_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Patient',
  `HCO_FCLTY_KEY` binary(16) DEFAULT NULL COMMENT 'The EDS primary key for Healthcare Organization (HCO) Facility',
  `DIV_ORG_KEY` binary(16) DEFAULT NULL COMMENT 'The EDS primary key for Organization (Division)',
  `SOURCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Source',
  `SOURCE_ID` varchar(250) NOT NULL COMMENT 'The unique identifier for this record from the Source',
  `REC_TYP_RKEY` binary(16) NOT NULL COMMENT 'The EDS Record Type (Reference Value)',
  `REC_SUBTYP_RKEY` binary(16) DEFAULT NULL COMMENT 'The EDS Record Subtype (Reference Value)',
  `STAT_RKEY` binary(16) NOT NULL COMMENT 'The Status of the record (Reference Value)',
  `EFF_START_TS` timestamp NOT NULL COMMENT 'The effectivity start date/time for this record',
  `EFF_END_TS` timestamp NULL DEFAULT NULL COMMENT 'The effectivity end date/time for this record',
  `SOURCE_CREATE_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created this row in the Source',
  `SOURCE_CHG_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created or altered this row in the Source',
  `SOURCE_CHG_PRCS_VAL` varchar(50) DEFAULT NULL COMMENT 'The process that created or altered this row in the Source',
  `SOURCE_CHG_REASN_VAL` varchar(250) DEFAULT NULL COMMENT 'The reason for the change to this row from the perspective of the Source',
  `SOURCE_CREATE_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the creation of the row in the Source',
  `SOURCE_UPD_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the update to the row in the Source',
  `CREATE_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The timestamp of the creation of the row',
  `CREATE_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that created this row e.g. Informatica mapping, Kafka topic, etc',
  `UPD_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The timestamp of the update to the row',
  `UPD_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that updated this row e.g. Informatica mapping, Kafka topic, etc',
  `DEL_FLAG` tinyint(1) NOT NULL COMMENT 'Determines if this row is deleted',
  PRIMARY KEY (`MEDL_EVNT_KEY`),
  KEY `IX_SOURCE_CREATE_USER_VAL` (`SOURCE_CREATE_USER_VAL`),
  KEY `IX_SOURCE_ID` (`SOURCE_ID`),
  KEY `FK_PATIENT_KEY` (`PATIENT_KEY`),
  KEY `FK_HCO_FCLTY_KEY` (`HCO_FCLTY_KEY`),
  KEY `FK_DIV_ORG_KEY` (`DIV_ORG_KEY`),
  KEY `FK_SOURCE_KEY` (`SOURCE_KEY`),
  KEY `FK_REC_TYP_RKEY` (`REC_TYP_RKEY`),
  KEY `FK_REC_SUBTYP_RKEY` (`REC_SUBTYP_RKEY`),
  KEY `FK_STAT_RKEY` (`STAT_RKEY`),
  KEY `IX_EFF_START_TS` (`EFF_START_TS`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='An interaction between a Patient and Provider(s).';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `MEDL_EVNT_RLSHP`
--

DROP TABLE IF EXISTS `MEDL_EVNT_RLSHP`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `MEDL_EVNT_RLSHP` (
  `MEDL_EVNT_RLSHP_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Medical Event Relationship',
  `MEDL_EVNT_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Medical Event',
  `REL_MEDL_EVNT_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Medical Event (related Medical Event)',
  `SOURCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Source',
  `SOURCE_ID` varchar(250) NOT NULL COMMENT 'The unique identifier for this record from the Source',
  `STAT_RKEY` binary(16) NOT NULL COMMENT 'The Status of the record (Reference Value)',
  `SEQ_NUM` decimal(5,0) NOT NULL COMMENT 'Allows for the sequencing of Procedures',
  `PRIORITY_VAL` tinyint DEFAULT NULL COMMENT 'The relative priority or rank of this item amongst other like items',
  `SOURCE_CREATE_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created this row in the Source',
  `SOURCE_CHG_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created or altered this row in the Source',
  `SOURCE_CHG_PRCS_VAL` varchar(50) DEFAULT NULL COMMENT 'The process that created or altered this row in the Source',
  `SOURCE_CHG_REASN_VAL` varchar(250) DEFAULT NULL COMMENT 'The reason for the change to this row from the perspective of the Source',
  `SOURCE_CREATE_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the creation of the row in the Source',
  `SOURCE_UPD_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the update to the row in the Source',
  `CREATE_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The timestamp of the creation of the row',
  `CREATE_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that created this row e.g. Informatica mapping, Kafka topic, etc',
  `UPD_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The timestamp of the update to the row',
  `UPD_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that updated this row e.g. Informatica mapping, Kafka topic, etc',
  `DEL_FLAG` tinyint(1) NOT NULL COMMENT 'Determines if this row is deleted',
  PRIMARY KEY (`MEDL_EVNT_RLSHP_KEY`),
  UNIQUE KEY `AK_MEDL_EVNT_RLSHP` (`MEDL_EVNT_KEY`,`REL_MEDL_EVNT_KEY`,`SEQ_NUM`),
  KEY `IX_SOURCE_CREATE_USER_VAL` (`SOURCE_CREATE_USER_VAL`),
  KEY `IX_SOURCE_ID` (`SOURCE_ID`),
  KEY `FK_MEDL_EVNT_KEY` (`MEDL_EVNT_KEY`),
  KEY `FK_REL_MEDL_EVNT_KEY` (`REL_MEDL_EVNT_KEY`),
  KEY `FK_SOURCE_KEY` (`SOURCE_KEY`),
  KEY `FK_STAT_RKEY` (`STAT_RKEY`),
  KEY `IX_SEQ_NUM` (`SEQ_NUM`),
  KEY `IX_PRIORITY_VAL` (`PRIORITY_VAL`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='The relationship of Medical Events to one another.';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `ORG`
--

DROP TABLE IF EXISTS `ORG`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `ORG` (
  `ORG_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Organization',
  `ENT_KEY` binary(16) DEFAULT NULL COMMENT 'The EDS Enterprise Key pointer',
  `SOURCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Source',
  `SOURCE_ID` varchar(250) NOT NULL COMMENT 'The unique identifier for this record from the Source',
  `REC_TYP_RKEY` binary(16) NOT NULL COMMENT 'The EDS Record Type (Reference Value)',
  `REC_SUBTYP_RKEY` binary(16) DEFAULT NULL COMMENT 'The EDS Record Subtype (Reference Value)',
  `STAT_RKEY` binary(16) NOT NULL COMMENT 'The Status of the record (Reference Value)',
  `STAT_REASN_RKEY` binary(16) DEFAULT NULL COMMENT 'The Reason for the Status, if applicable (Reference Value)',
  `ORG_SHORT_NM` varchar(40) NOT NULL COMMENT 'The short name for the Organization',
  `ORG_LONG_NM` varchar(100) NOT NULL COMMENT 'The long name for the Organization',
  `ORG_ALT_NM` varchar(300) DEFAULT NULL COMMENT 'The alternate name for the Organization',
  `ORG_PREF_NM` varchar(300) DEFAULT NULL COMMENT 'The Organization''s preferred name',
  `NO_PROC_IND_RKEY` binary(16) NOT NULL COMMENT 'Indicates this HCO must not be associated to Procedures',
  `NO_FOLLOWUP_IND_RKEY` binary(16) NOT NULL COMMENT 'Indicates this HCO must not be associated to Followup',
  `LANG_RKEY` binary(16) NOT NULL COMMENT 'The language associated with this record (Reference Value)',
  `ORIGIN_NATION_ORG_KEY` binary(16) DEFAULT NULL COMMENT 'The Nation that originated this Organization (HCO) record (Organization)',
  `SOURCE_CREATE_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created this row in the Source',
  `SOURCE_CHG_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created or altered this row in the Source',
  `SOURCE_CHG_PRCS_VAL` varchar(50) DEFAULT NULL COMMENT 'The process that created or altered this row in the Source',
  `SOURCE_CHG_REASN_VAL` varchar(250) DEFAULT NULL COMMENT 'The reason for the change to this row from the perspective of the Source',
  `SOURCE_CREATE_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the creation of the row in the Source',
  `SOURCE_UPD_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the update to the row in the Source',
  `CREATE_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The timestamp of the creation of the row',
  `CREATE_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that created this row e.g. Informatica mapping, Kafka topic, etc',
  `UPD_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The timestamp of the update to the row',
  `UPD_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that updated this row e.g. Informatica mapping, Kafka topic, etc',
  `DEL_FLAG` tinyint(1) NOT NULL COMMENT 'Determines if this row is deleted',
  `MDM_GOV_STAT_RKEY` binary(16) DEFAULT NULL COMMENT 'The Master Data Management and Data Governance Status for this record',
  PRIMARY KEY (`ORG_KEY`),
  UNIQUE KEY `AK_ORG` (`SOURCE_ID`,`SOURCE_KEY`,`REC_TYP_RKEY`),
  KEY `IX_ORG_LONG_NM` (`ORG_LONG_NM`),
  KEY `IX_ORG_PREF_NM` (`ORG_PREF_NM`),
  KEY `IX_ORG_SHORT_NM` (`ORG_SHORT_NM`),
  KEY `IX_ORG_ALT_NM` (`ORG_ALT_NM`),
  KEY `IX_SOURCE_CREATE_USER_VAL` (`SOURCE_CREATE_USER_VAL`),
  KEY `IX_SOURCE_ID` (`SOURCE_ID`),
  KEY `FK_ENT_KEY` (`ENT_KEY`),
  KEY `FK_SOURCE_KEY` (`SOURCE_KEY`),
  KEY `FK_REC_TYP_RKEY` (`REC_TYP_RKEY`),
  KEY `FK_REC_SUBTYP_RKEY` (`REC_SUBTYP_RKEY`),
  KEY `FK_STAT_RKEY` (`STAT_RKEY`),
  KEY `FK_STAT_REASN_RKEY` (`STAT_REASN_RKEY`),
  KEY `FK_NO_PROC_IND_RKEY` (`NO_PROC_IND_RKEY`),
  KEY `FK_NO_FOLLOWUP_IND_RKEY` (`NO_FOLLOWUP_IND_RKEY`),
  KEY `FK_LANG_RKEY` (`LANG_RKEY`),
  KEY `FK_ORIGIN_NATION_ORG_KEY` (`ORIGIN_NATION_ORG_KEY`),
  KEY `FK_MDM_GOV_STAT_RKEY` (`MDM_GOV_STAT_RKEY`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='A social or legal structure formed by human beings. ';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `ORG_ALT_ID`
--

DROP TABLE IF EXISTS `ORG_ALT_ID`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `ORG_ALT_ID` (
  `ORG_ALT_ID` binary(16) NOT NULL COMMENT 'The EDS primary key for Organization Alternate Identifier',
  `SOURCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Source',
  `SOURCE_ID` varchar(250) NOT NULL COMMENT 'The unique identifier for this record from the Source',
  `STAT_RKEY` binary(16) NOT NULL COMMENT 'The Status of the record (Reference Value)',
  `ORG_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Organization',
  `ALT_ID_TYP_RKEY` binary(16) NOT NULL COMMENT 'The type of Alternate Identifier (Reference Value)',
  `ALT_ID_VAL` varchar(250) DEFAULT NULL COMMENT 'The alternate identifier value for the Organization (e.g. Tax ID, DUNS Number)',
  `ORIGIN_ORG_KEY` binary(16) DEFAULT NULL COMMENT 'The related Organization that originates this identifier, if applicable',
  `REFUSED_IND_RKEY` binary(16) NOT NULL COMMENT 'Indicates this Person refused to submit an identifier',
  `SOURCE_CREATE_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created this row in the Source',
  `SOURCE_CHG_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created or altered this row in the Source',
  `SOURCE_CHG_PRCS_VAL` varchar(50) DEFAULT NULL COMMENT 'The process that created or altered this row in the Source',
  `SOURCE_CHG_REASN_VAL` varchar(250) DEFAULT NULL COMMENT 'The reason for the change to this row from the perspective of the Source',
  `SOURCE_CREATE_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the creation of the row in the Source',
  `SOURCE_UPD_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the update to the row in the Source',
  `CREATE_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The timestamp of the creation of the row',
  `CREATE_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that created this row e.g. Informatica mapping, Kafka topic, etc',
  `UPD_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The timestamp of the update to the row',
  `UPD_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that updated this row e.g. Informatica mapping, Kafka topic, etc',
  `DEL_FLAG` tinyint(1) NOT NULL COMMENT 'Determines if this row is deleted',
  PRIMARY KEY (`ORG_ALT_ID`),
  UNIQUE KEY `AK_ORG_ALT_ID` (`SOURCE_KEY`,`SOURCE_ID`,`ORG_KEY`,`ALT_ID_TYP_RKEY`),
  KEY `IX_SOURCE_CREATE_USER_VAL` (`SOURCE_CREATE_USER_VAL`),
  KEY `IX_SOURCE_ID` (`SOURCE_ID`),
  KEY `FK_SOURCE_KEY` (`SOURCE_KEY`),
  KEY `FK_STAT_RKEY` (`STAT_RKEY`),
  KEY `FK_ORG_KEY` (`ORG_KEY`),
  KEY `FK_ALT_ID_TYP_RKEY` (`ALT_ID_TYP_RKEY`),
  KEY `IX_ALT_ID_VAL` (`ALT_ID_VAL`),
  KEY `FK_ORIGIN_ORG_KEY` (`ORIGIN_ORG_KEY`),
  KEY `FK_REFUSED_IND_RKEY` (`REFUSED_IND_RKEY`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='Alternate Identifiers for an Organization.';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `ORG_RLSHP`
--

DROP TABLE IF EXISTS `ORG_RLSHP`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `ORG_RLSHP` (
  `ORG_RLSHP_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Organization Relationship',
  `ORG_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Organization',
  `REL_ORG_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Organization (related Org)',
  `SOURCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Source',
  `SOURCE_ID` varchar(250) NOT NULL COMMENT 'The unique identifier for this record from the Source',
  `REC_TYP_RKEY` binary(16) NOT NULL COMMENT 'The EDS Record Type (Reference Value)',
  `REC_SUBTYP_RKEY` binary(16) DEFAULT NULL COMMENT 'The EDS Record Subtype (Reference Value)',
  `STAT_RKEY` binary(16) NOT NULL COMMENT 'The Status of the record (Reference Value)',
  `HRCHY_LVL_NUM` decimal(5,0) DEFAULT NULL COMMENT 'The level within the hierarchy',
  `EFF_START_TS` timestamp NOT NULL COMMENT 'The effectivity start date/time for this record',
  `EFF_END_TS` timestamp NULL DEFAULT NULL COMMENT 'The effectivity end date/time for this record',
  `SOURCE_CREATE_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created this row in the Source',
  `SOURCE_CHG_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created or altered this row in the Source',
  `SOURCE_CHG_PRCS_VAL` varchar(50) DEFAULT NULL COMMENT 'The process that created or altered this row in the Source',
  `SOURCE_CHG_REASN_VAL` varchar(250) DEFAULT NULL COMMENT 'The reason for the change to this row from the perspective of the Source',
  `SOURCE_CREATE_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the creation of the row in the Source',
  `SOURCE_UPD_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the update to the row in the Source',
  `CREATE_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The timestamp of the creation of the row',
  `CREATE_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that created this row e.g. Informatica mapping, Kafka topic, etc',
  `UPD_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The timestamp of the update to the row',
  `UPD_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that updated this row e.g. Informatica mapping, Kafka topic, etc',
  `DEL_FLAG` tinyint(1) NOT NULL COMMENT 'Determines if this row is deleted',
  PRIMARY KEY (`ORG_RLSHP_KEY`),
  UNIQUE KEY `AK_ORG_RLSHP` (`ORG_KEY`,`REL_ORG_KEY`,`SOURCE_KEY`,`SOURCE_ID`,`REC_TYP_RKEY`,`EFF_START_TS`),
  KEY `IX_SOURCE_CREATE_USER_VAL` (`SOURCE_CREATE_USER_VAL`),
  KEY `FK_ORG_KEY` (`ORG_KEY`),
  KEY `FK_REL_ORG_KEY` (`REL_ORG_KEY`),
  KEY `FK_SOURCE_KEY` (`SOURCE_KEY`),
  KEY `IX_SOURCE_ID` (`SOURCE_ID`),
  KEY `FK_REC_TYP_RKEY` (`REC_TYP_RKEY`),
  KEY `FK_REC_SUBTYP_RKEY` (`REC_SUBTYP_RKEY`),
  KEY `FK_STAT_RKEY` (`STAT_RKEY`),
  KEY `IX_EFF_START_TS` (`EFF_START_TS`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='Relates Organizations to one another.';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `PATIENT`
--

DROP TABLE IF EXISTS `PATIENT`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `PATIENT` (
  `PATIENT_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Patient',
  `ENT_KEY` binary(16) DEFAULT NULL COMMENT 'The EDS Enterprise Key pointer',
  `ORG_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Organization',
  `PERS_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Person',
  `SOURCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Source',
  `SOURCE_ID` varchar(250) NOT NULL COMMENT 'The unique identifier for this record from the Source',
  `REC_TYP_RKEY` binary(16) NOT NULL COMMENT 'The EDS Record Type (Reference Value)',
  `REC_SUBTYP_RKEY` binary(16) DEFAULT NULL COMMENT 'The EDS Record Subtype (Reference Value)',
  `STAT_RKEY` binary(16) NOT NULL COMMENT 'The Status of the record (Reference Value)',
  `CONF_IND_RKEY` binary(16) NOT NULL COMMENT 'Indicates this Patient prefers confidentiality',
  `CONF_REASN_RKEY` binary(16) DEFAULT NULL COMMENT 'The Confidential Reason (Reference Value)',
  `CONF_QUES_TXT` text COMMENT 'The text for the confidential question',
  `CONF_ANSWER_TXT` text COMMENT 'The answer text for the confidential question',
  `LANG_RKEY` binary(16) DEFAULT NULL COMMENT 'The language associated with this record (Reference Value)',
  `ADDR_TYP_RKEY` binary(16) DEFAULT NULL COMMENT 'The preferred Address Type for tor the Patient (Reference Value)',
  `ORIGIN_NATION_ORG_KEY` binary(16) DEFAULT NULL COMMENT 'The Nation that originated this Patient record (Organization)',
  `COMMENT_TXT` text COMMENT 'General comments related to the Patient',
  `EFF_START_TS` timestamp NOT NULL COMMENT 'The effectivity start date/time for this record',
  `EFF_END_TS` timestamp NULL DEFAULT NULL COMMENT 'The effectivity end date/time for this record',
  `SOURCE_CREATE_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created this row in the Source',
  `SOURCE_CHG_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created or altered this row in the Source',
  `SOURCE_CHG_PRCS_VAL` varchar(50) DEFAULT NULL COMMENT 'The process that created or altered this row in the Source',
  `SOURCE_CHG_REASN_VAL` varchar(250) DEFAULT NULL COMMENT 'The reason for the change to this row from the perspective of the Source',
  `SOURCE_CREATE_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the creation of the row in the Source',
  `SOURCE_UPD_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the update to the row in the Source',
  `CREATE_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The timestamp of the creation of the row',
  `CREATE_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that created this row e.g. Informatica mapping, Kafka topic, etc',
  `UPD_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The timestamp of the update to the row',
  `UPD_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that updated this row e.g. Informatica mapping, Kafka topic, etc',
  `DEL_FLAG` tinyint(1) NOT NULL COMMENT 'Determines if this row is deleted',
  `MDM_GOV_STAT_RKEY` binary(16) DEFAULT NULL COMMENT 'The Master Data Management and Data Governance Status for this record',
  PRIMARY KEY (`PATIENT_KEY`),
  UNIQUE KEY `AK_PATIENT` (`ORG_KEY`,`PERS_KEY`,`SOURCE_KEY`,`SOURCE_ID`,`REC_TYP_RKEY`,`EFF_START_TS`),
  KEY `IX_SOURCE_CREATE_USER_VAL` (`SOURCE_CREATE_USER_VAL`),
  KEY `IX_SOURCE_ID` (`SOURCE_ID`),
  KEY `FK_SOURCE_KEY` (`SOURCE_KEY`),
  KEY `FK_ENT_KEY` (`ENT_KEY`),
  KEY `FK_ORG_KEY` (`ORG_KEY`),
  KEY `FK_PERS_KEY` (`PERS_KEY`),
  KEY `FK_REC_TYP_RKEY` (`REC_TYP_RKEY`),
  KEY `FK_REC_SUBTYP_RKEY` (`REC_SUBTYP_RKEY`),
  KEY `FK_STAT_RKEY` (`STAT_RKEY`),
  KEY `FK_CONF_IND_RKEY` (`CONF_IND_RKEY`),
  KEY `FK_CONF_REASN_RKEY` (`CONF_REASN_RKEY`),
  KEY `FK_LANG_RKEY` (`LANG_RKEY`),
  KEY `FK_ADDR_TYP_RKEY` (`ADDR_TYP_RKEY`),
  KEY `FK_ORIGIN_NATION_ORG_KEY` (`ORIGIN_NATION_ORG_KEY`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='A person receiving medical treatment from an HCO.';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `PATIENT_ALT_ID`
--

DROP TABLE IF EXISTS `PATIENT_ALT_ID`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `PATIENT_ALT_ID` (
  `PATIENT_ALT_ID_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Patient Alternate Identifier',
  `SOURCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Source',
  `SOURCE_ID` varchar(250) NOT NULL COMMENT 'The unique identifier for this record from the Source',
  `STAT_RKEY` binary(16) NOT NULL COMMENT 'The Status of the record (Reference Value)',
  `PATIENT_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Patient',
  `ALT_ID_TYP_RKEY` binary(16) NOT NULL COMMENT 'The type of Alternate Identifier (Reference Value)',
  `ALT_ID_VAL` varchar(250) DEFAULT NULL COMMENT 'The alternate identifier value for the Person (e.g. SSN, Drivers License Number)',
  `ORIGIN_ORG_KEY` binary(16) DEFAULT NULL COMMENT 'The related Organization that originates this identifier, if applicable',
  `REFUSED_IND_RKEY` binary(16) NOT NULL COMMENT 'Indicates this Person refused to submit an identifier',
  `SOURCE_CREATE_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created this row in the Source',
  `SOURCE_CHG_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created or altered this row in the Source',
  `SOURCE_CHG_PRCS_VAL` varchar(50) DEFAULT NULL COMMENT 'The process that created or altered this row in the Source',
  `SOURCE_CHG_REASN_VAL` varchar(250) DEFAULT NULL COMMENT 'The reason for the change to this row from the perspective of the Source',
  `SOURCE_CREATE_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the creation of the row in the Source',
  `SOURCE_UPD_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the update to the row in the Source',
  `CREATE_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The timestamp of the creation of the row',
  `CREATE_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that created this row e.g. Informatica mapping, Kafka topic, etc',
  `UPD_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The timestamp of the update to the row',
  `UPD_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that updated this row e.g. Informatica mapping, Kafka topic, etc',
  `DEL_FLAG` tinyint(1) NOT NULL COMMENT 'Determines if this row is deleted',
  PRIMARY KEY (`PATIENT_ALT_ID_KEY`),
  UNIQUE KEY `AK_PATIENT_ALT_ID` (`SOURCE_ID`,`SOURCE_KEY`,`PATIENT_KEY`,`ALT_ID_TYP_RKEY`),
  KEY `IX_SOURCE_CREATE_USER_VAL` (`SOURCE_CREATE_USER_VAL`),
  KEY `IX_ALT_ID_VAL` (`ALT_ID_VAL`),
  KEY `FK_ALT_ID_TYP_RKEY` (`ALT_ID_TYP_RKEY`),
  KEY `FK_SOURCE_KEY` (`SOURCE_KEY`),
  KEY `FK_ORIGIN_ORG_KEY` (`ORIGIN_ORG_KEY`),
  KEY `FK_PATIENT_KEY` (`PATIENT_KEY`),
  KEY `FK_STAT_RKEY` (`STAT_RKEY`),
  KEY `FK_REFUSED_IND_RKEY` (`REFUSED_IND_RKEY`),
  KEY `IX_SOURCE_ID` (`SOURCE_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='Alternate Identifiers for a Patient.';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `PATIENT_CONTACT`
--

DROP TABLE IF EXISTS `PATIENT_CONTACT`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `PATIENT_CONTACT` (
  `PATIENT_CONTACT_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Patient Contact',
  `PATIENT_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Patient',
  `PERS_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Person',
  `SOURCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Source',
  `SOURCE_ID` varchar(250) NOT NULL COMMENT 'The unique identifier for this record from the Source',
  `REC_TYP_RKEY` binary(16) NOT NULL COMMENT 'The EDS Record Type (Reference Value)',
  `REC_SUBTYP_RKEY` binary(16) DEFAULT NULL COMMENT 'The EDS Record Subtype (Reference Value)',
  `STAT_RKEY` binary(16) NOT NULL COMMENT 'The Status of the record (Reference Value)',
  `LANG_RKEY` binary(16) NOT NULL COMMENT 'The language associated with this record (Reference Value)',
  `AUTH_IND_RKEY` binary(16) NOT NULL COMMENT 'Indicates that this Person Contact is authorized',
  `AUTH_DT` date DEFAULT NULL COMMENT 'The date on which the Patient Contact was authorized',
  `EFF_START_TS` timestamp NOT NULL COMMENT 'The effectivity start date/time for this record',
  `EFF_END_TS` timestamp NULL DEFAULT NULL COMMENT 'The effectivity end date/time for this record',
  `SOURCE_CREATE_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created this row in the Source',
  `SOURCE_CHG_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created or altered this row in the Source',
  `SOURCE_CHG_PRCS_VAL` varchar(50) DEFAULT NULL COMMENT 'The process that created or altered this row in the Source',
  `SOURCE_CHG_REASN_VAL` varchar(250) DEFAULT NULL COMMENT 'The reason for the change to this row from the perspective of the Source',
  `SOURCE_CREATE_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the creation of the row in the Source',
  `SOURCE_UPD_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the update to the row in the Source',
  `CREATE_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The timestamp of the creation of the row',
  `CREATE_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that created this row e.g. Informatica mapping, Kafka topic, etc',
  `UPD_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The timestamp of the update to the row',
  `UPD_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that updated this row e.g. Informatica mapping, Kafka topic, etc',
  `DEL_FLAG` tinyint(1) NOT NULL COMMENT 'Determines if this row is deleted',
  PRIMARY KEY (`PATIENT_CONTACT_KEY`),
  UNIQUE KEY `AK_PATIENT_CONTACT` (`PATIENT_KEY`,`SOURCE_KEY`,`SOURCE_ID`,`REC_TYP_RKEY`,`EFF_START_TS`),
  KEY `IX_SOURCE_CREATE_USER_VAL` (`SOURCE_CREATE_USER_VAL`),
  KEY `FK_SOURCE_KEY` (`SOURCE_KEY`),
  KEY `FK_PATIENT_KEY` (`PATIENT_KEY`),
  KEY `FK_PERS_KEY` (`PERS_KEY`),
  KEY `FK_REC_TYP_RKEY` (`REC_TYP_RKEY`),
  KEY `FK_REC_SUBTYP_RKEY` (`REC_SUBTYP_RKEY`),
  KEY `FK_STAT_RKEY` (`STAT_RKEY`),
  KEY `FK_LANG_RKEY` (`LANG_RKEY`),
  KEY `FK_AUTH_IND_RKEY` (`AUTH_IND_RKEY`),
  KEY `IX_AUTH_DT` (`AUTH_DT`),
  KEY `IX_EFF_START_TS` (`EFF_START_TS`),
  KEY `IX_SOURCE_ID` (`SOURCE_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='Relates Patients to Patient Contacts.';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `PATIENT_FUNC`
--

DROP TABLE IF EXISTS `PATIENT_FUNC`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `PATIENT_FUNC` (
  `PATIENT_FUNC_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Patient Function',
  `SOURCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Source',
  `SOURCE_ID` varchar(250) NOT NULL COMMENT 'The unique identifier for this record from the Source',
  `PATIENT_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Patient',
  `FUNC_RKEY` binary(16) NOT NULL COMMENT 'The Function (Reference Value)',
  `STAT_RKEY` binary(16) NOT NULL COMMENT 'The Status of the record (Reference Value)',
  `FUNC_EXCPTN_DT` date DEFAULT NULL COMMENT 'The Function Exception date, if applicable',
  `EXCPTN_IND_RKEY` binary(16) NOT NULL COMMENT 'Indicates an exception for the Patient Function',
  `EXCPTN_COMMENT_TXT` text COMMENT 'Comments related to the Patient Function exception',
  `SOURCE_CREATE_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created this row in the Source',
  `SOURCE_CHG_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created or altered this row in the Source',
  `SOURCE_CHG_PRCS_VAL` varchar(50) DEFAULT NULL COMMENT 'The process that created or altered this row in the Source',
  `SOURCE_CHG_REASN_VAL` varchar(250) DEFAULT NULL COMMENT 'The reason for the change to this row from the perspective of the Source',
  `SOURCE_CREATE_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the creation of the row in the Source',
  `SOURCE_UPD_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the update to the row in the Source',
  `CREATE_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The timestamp of the creation of the row',
  `CREATE_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that created this row e.g. Informatica mapping, Kafka topic, etc',
  `UPD_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The timestamp of the update to the row',
  `UPD_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that updated this row e.g. Informatica mapping, Kafka topic, etc',
  `DEL_FLAG` tinyint(1) NOT NULL COMMENT 'Determines if this row is deleted',
  PRIMARY KEY (`PATIENT_FUNC_KEY`),
  KEY `IX_SOURCE_CREATE_USER_VAL` (`SOURCE_CREATE_USER_VAL`),
  KEY `FK_SOURCE_KEY` (`SOURCE_KEY`),
  KEY `FK_PATIENT_KEY` (`PATIENT_KEY`),
  KEY `FK_FUNC_RKEY` (`FUNC_RKEY`),
  KEY `FK_STAT_RKEY` (`STAT_RKEY`),
  KEY `FK_EXCPTN_IND_RKEY` (`EXCPTN_IND_RKEY`),
  KEY `IX_FUNC_EXCPTN_DT` (`FUNC_EXCPTN_DT`),
  KEY `IX_SOURCE_ID` (`SOURCE_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='Specifies relevence for a given Function.';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `PATIENT_POSTAL_ADDR`
--

DROP TABLE IF EXISTS `PATIENT_POSTAL_ADDR`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `PATIENT_POSTAL_ADDR` (
  `PATIENT_POSTAL_ADDR_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Patient Postal Address',
  `POSTAL_ADDR_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Postal Address',
  `PATIENT_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Patient',
  `PATIENT_CONTACT_KEY` binary(16) DEFAULT NULL COMMENT 'The EDS primary key for Patient Contact',
  `SOURCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Source',
  `SOURCE_ID` varchar(250) NOT NULL COMMENT 'The unique identifier for this record from the Source',
  `STAT_RKEY` binary(16) NOT NULL COMMENT 'The Status of the record (Reference Value)',
  `PRIORITY_VAL` tinyint DEFAULT NULL COMMENT 'The relative priority or rank of this item amongst other like items',
  `PREF_IND_RKEY` binary(16) NOT NULL COMMENT 'Indicates the preferred record',
  `ADDR_USAGE_TYP_RKEY` binary(16) NOT NULL COMMENT 'The manner by which this address is used (Reference Value)',
  `ADDR_CHG_REASN_RKEY` binary(16) DEFAULT NULL COMMENT 'The Reason for the change in Address, if applicable (Reference Value)',
  `ADDR_VALID_OVRD_IND_RKEY` binary(16) NOT NULL COMMENT 'Indicates that this validated address has been overridden',
  `ADDR_VALID_OVRD_REASN_RKEY` binary(16) DEFAULT NULL COMMENT 'The reason for the override of the validated address (Reference Value)',
  `SEASON_START_MTH_RKEY` binary(16) DEFAULT NULL COMMENT 'The season start month for this record (Reference Value)',
  `SEASON_END_MTH_RKEY` binary(16) DEFAULT NULL COMMENT 'The season end month for this record (Reference Value)',
  `ID_CARD_DISPL_IND_RKEY` binary(16) DEFAULT NULL COMMENT 'Indicates that this Address is displayed on the Patient ID Card (Reference Value)',
  `EFF_START_TS` timestamp NOT NULL COMMENT 'The effectivity start date/time for this record',
  `EFF_END_TS` timestamp NULL DEFAULT NULL COMMENT 'The effectivity end date/time for this record',
  `SOURCE_CREATE_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created this row in the Source',
  `SOURCE_CHG_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created or altered this row in the Source',
  `SOURCE_CHG_PRCS_VAL` varchar(50) DEFAULT NULL COMMENT 'The process that created or altered this row in the Source',
  `SOURCE_CHG_REASN_VAL` varchar(250) DEFAULT NULL COMMENT 'The reason for the change to this row from the perspective of the Source',
  `SOURCE_CREATE_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the creation of the row in the Source',
  `SOURCE_UPD_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the update to the row in the Source',
  `CREATE_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The timestamp of the creation of the row',
  `CREATE_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that created this row e.g. Informatica mapping, Kafka topic, etc',
  `UPD_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The timestamp of the update to the row',
  `UPD_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that updated this row e.g. Informatica mapping, Kafka topic, etc',
  `DEL_FLAG` tinyint(1) NOT NULL COMMENT 'Determines if this row is deleted',
  PRIMARY KEY (`PATIENT_POSTAL_ADDR_KEY`),
  KEY `IX_SOURCE_CREATE_USER_VAL` (`SOURCE_CREATE_USER_VAL`),
  KEY `FK_SOURCE_KEY` (`SOURCE_KEY`),
  KEY `FK_STAT_RKEY` (`STAT_RKEY`),
  KEY `FK_PREF_IND_RKEY` (`PREF_IND_RKEY`),
  KEY `FK_PATIENT_CONTACT_KEY` (`PATIENT_CONTACT_KEY`),
  KEY `FK_PATIENT_KEY` (`PATIENT_KEY`),
  KEY `FK_POSTAL_ADDR_KEY` (`POSTAL_ADDR_KEY`),
  KEY `FK_ADDR_USAGE_TYP_RKEY` (`ADDR_USAGE_TYP_RKEY`),
  KEY `FK_ADDR_CHG_REASN_RKEY` (`ADDR_CHG_REASN_RKEY`),
  KEY `FK_ADDR_VALID_OVRD_IND_RKEY` (`ADDR_VALID_OVRD_IND_RKEY`),
  KEY `FK_ADDR_VALID_OVRD_REASN_RKEY` (`ADDR_VALID_OVRD_REASN_RKEY`),
  KEY `FK_SEASON_START_MTH_RKEY` (`SEASON_START_MTH_RKEY`),
  KEY `FK_SEASON_END_MTH_RKEY` (`SEASON_END_MTH_RKEY`),
  KEY `IX_EFF_START_TS` (`EFF_START_TS`),
  KEY `IX_PRIORITY_VAL` (`PRIORITY_VAL`),
  KEY `IX_SOURCE_ID` (`SOURCE_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='Associates Postal Addresses to Patients.';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `PATIENT_VIRTUAL_ADDR`
--

DROP TABLE IF EXISTS `PATIENT_VIRTUAL_ADDR`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `PATIENT_VIRTUAL_ADDR` (
  `PATIENT_VIRTUAL_ADDR_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Patient Virtual Address',
  `VIRTUAL_ADDR_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Virtual Address',
  `PATIENT_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Patient',
  `PATIENT_CONTACT_KEY` binary(16) DEFAULT NULL COMMENT 'The EDS primary key for Patient Contact',
  `SOURCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Source',
  `SOURCE_ID` varchar(250) NOT NULL COMMENT 'The unique identifier for this record from the Source',
  `STAT_RKEY` binary(16) NOT NULL COMMENT 'The Status of the record (Reference Value)',
  `PRIORITY_VAL` tinyint DEFAULT NULL COMMENT 'The relative priority or rank of this item amongst other like items',
  `PREF_IND_RKEY` binary(16) NOT NULL COMMENT 'Indicates the preferred record',
  `ADDR_USAGE_TYP_RKEY` binary(16) NOT NULL COMMENT 'The manner by which this address is used (Reference Value)',
  `ACCEPT_VOICE_MSG_IND_RKEY` binary(16) NOT NULL COMMENT 'Indicates that this address accepts voice messages',
  `ACCEPT_TXT_MSG_IND_RKEY` binary(16) NOT NULL COMMENT 'Indicates that this address accepts text messages',
  `EFF_START_TS` timestamp NOT NULL COMMENT 'The effectivity start date/time for this record',
  `EFF_END_TS` timestamp NULL DEFAULT NULL COMMENT 'The effectivity end date/time for this record',
  `SOURCE_CREATE_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created this row in the Source',
  `SOURCE_CHG_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created or altered this row in the Source',
  `SOURCE_CHG_PRCS_VAL` varchar(50) DEFAULT NULL COMMENT 'The process that created or altered this row in the Source',
  `SOURCE_CHG_REASN_VAL` varchar(250) DEFAULT NULL COMMENT 'The reason for the change to this row from the perspective of the Source',
  `SOURCE_CREATE_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the creation of the row in the Source',
  `SOURCE_UPD_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the update to the row in the Source',
  `CREATE_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The timestamp of the creation of the row',
  `CREATE_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that created this row e.g. Informatica mapping, Kafka topic, etc',
  `UPD_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The timestamp of the update to the row',
  `UPD_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that updated this row e.g. Informatica mapping, Kafka topic, etc',
  `DEL_FLAG` tinyint(1) NOT NULL COMMENT 'Determines if this row is deleted',
  PRIMARY KEY (`PATIENT_VIRTUAL_ADDR_KEY`),
  KEY `IX_SOURCE_CREATE_USER_VAL` (`SOURCE_CREATE_USER_VAL`),
  KEY `FK_VIRTUAL_ADDR_KEY` (`VIRTUAL_ADDR_KEY`),
  KEY `FK_PATIENT_KEY` (`PATIENT_KEY`),
  KEY `FK_PATIENT_CONTACT_KEY` (`PATIENT_CONTACT_KEY`),
  KEY `FK_SOURCE_KEY` (`SOURCE_KEY`),
  KEY `FK_STAT_RKEY` (`STAT_RKEY`),
  KEY `IX_PRIORITY_VAL` (`PRIORITY_VAL`),
  KEY `FK_PREF_IND_RKEY` (`PREF_IND_RKEY`),
  KEY `FK_ADDR_USAGE_TYP_RKEY` (`ADDR_USAGE_TYP_RKEY`),
  KEY `FK_ACCEPT_VOICE_MSG_IND_RKEY` (`ACCEPT_VOICE_MSG_IND_RKEY`),
  KEY `FK_ACCEPT_TXT_MSG_IND_RKEY` (`ACCEPT_TXT_MSG_IND_RKEY`),
  KEY `IX_EFF_START_TS` (`EFF_START_TS`),
  KEY `IX_SOURCE_ID` (`SOURCE_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='Associates Virtual Addresses to Patients.';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `PERS`
--

DROP TABLE IF EXISTS `PERS`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `PERS` (
  `PERS_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Person',
  `SOURCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Source',
  `SOURCE_ID` varchar(250) NOT NULL COMMENT 'The unique identifier for this record from the Source',
  `REC_TYP_RKEY` binary(16) NOT NULL COMMENT 'The EDS Record Type (Reference Value)',
  `REC_SUBTYP_RKEY` binary(16) DEFAULT NULL COMMENT 'The EDS Record Subtype (Reference Value)',
  `STAT_RKEY` binary(16) NOT NULL COMMENT 'The Status of the record (Reference Value)',
  `FIRST_NM` varchar(50) DEFAULT NULL COMMENT 'The first name of the Person, in all capital letters',
  `LAST_NM` varchar(50) DEFAULT NULL COMMENT 'The last name of the Person, in all capital letters',
  `MIDDLE_NM` varchar(50) DEFAULT NULL COMMENT 'The middle name of the Person, in all capital letters',
  `PERS_PREF_NM` varchar(100) DEFAULT NULL COMMENT 'The Person''s preferred full name in all capital letters',
  `CASE_EXCPTN_FIRST_NM` varchar(50) DEFAULT NULL COMMENT 'The Person first name, expressed with proper case',
  `CASE_EXCPTN_LAST_NM` varchar(50) DEFAULT NULL COMMENT 'The Person last name, expressed with proper case',
  `CASE_EXCPTN_MIDDLE_NM` varchar(50) DEFAULT NULL COMMENT 'The Person middle name, expressed with proper case',
  `CASE_EXCPTN_PERS_PREF_NM` varchar(100) DEFAULT NULL COMMENT 'The Person''s preferred full name, expressed with proper case',
  `NAME_PREFIX_RKEY` binary(16) DEFAULT NULL COMMENT 'The name prefix (Reference Value)',
  `NAME_SUFFIX_RKEY` binary(16) DEFAULT NULL COMMENT 'The name suffix (Reference Value)',
  `PROF_SUFFIX_RKEY` binary(16) DEFAULT NULL COMMENT 'The Professional Suffix (Reference Value)',
  `BIRTH_DT` date DEFAULT NULL COMMENT 'Date of birth',
  `DECEASED_DT` date DEFAULT NULL COMMENT 'Date of death',
  `DECEASED_IND_RKEY` binary(16) NOT NULL COMMENT 'Indicates that this Person is deceased',
  `GENDER_RKEY` binary(16) DEFAULT NULL COMMENT 'The Gender of the Person (Reference Value)',
  `OTHER_GENDER_VAL` varchar(20) DEFAULT NULL COMMENT 'If the Person wishes a Gender that is not defined in our standard Gender codeset',
  `LANG_RKEY` binary(16) DEFAULT NULL COMMENT 'The language associated with this record (Reference Value)',
  `ADDR_TYP_RKEY` binary(16) DEFAULT NULL COMMENT 'The preferred Address Type for tor the Person (Reference Value)',
  `SOURCE_CREATE_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created this row in the Source',
  `SOURCE_CHG_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created or altered this row in the Source',
  `SOURCE_CHG_PRCS_VAL` varchar(50) DEFAULT NULL COMMENT 'The process that created or altered this row in the Source',
  `SOURCE_CHG_REASN_VAL` varchar(250) DEFAULT NULL COMMENT 'The reason for the change to this row from the perspective of the Source',
  `SOURCE_CREATE_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the creation of the row in the Source',
  `SOURCE_UPD_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the update to the row in the Source',
  `CREATE_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The timestamp of the creation of the row',
  `CREATE_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that created this row e.g. Informatica mapping, Kafka topic, etc',
  `UPD_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The timestamp of the update to the row',
  `UPD_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that updated this row e.g. Informatica mapping, Kafka topic, etc',
  `DEL_FLAG` tinyint(1) NOT NULL COMMENT 'Determines if this row is deleted',
  PRIMARY KEY (`PERS_KEY`),
  UNIQUE KEY `AK_PERS` (`SOURCE_KEY`,`SOURCE_ID`,`REC_TYP_RKEY`),
  KEY `IX_FIRST_NM` (`FIRST_NM`),
  KEY `IX_LAST_NM` (`LAST_NM`),
  KEY `IX_MIDDLE_NM` (`MIDDLE_NM`),
  KEY `IX_PERS_PREF_NM` (`PERS_PREF_NM`),
  KEY `IX_SOURCE_CREATE_USER_VAL` (`SOURCE_CREATE_USER_VAL`),
  KEY `IX_SOURCE_ID` (`SOURCE_ID`),
  KEY `IX_BIRTH_DT` (`BIRTH_DT`),
  KEY `FK_SOURCE_KEY` (`SOURCE_KEY`),
  KEY `FK_REC_TYP_RKEY` (`REC_TYP_RKEY`),
  KEY `FK_REC_SUBTYP_RKEY` (`REC_SUBTYP_RKEY`),
  KEY `FK_STAT_RKEY` (`STAT_RKEY`),
  KEY `FK_DECEASED_IND_RKEY` (`DECEASED_IND_RKEY`),
  KEY `FK_GENDER_RKEY` (`GENDER_RKEY`),
  KEY `FK_LANG_RKEY` (`LANG_RKEY`),
  KEY `FK_ADDR_TYP_RKEY` (`ADDR_TYP_RKEY`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='A sentient human being of the species homo sapien.';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `PERS_ALT_ID`
--

DROP TABLE IF EXISTS `PERS_ALT_ID`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `PERS_ALT_ID` (
  `PERS_ALT_ID_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Person Alternate Identifier',
  `SOURCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Source',
  `SOURCE_ID` varchar(250) NOT NULL COMMENT 'The unique identifier for this record from the Source',
  `STAT_RKEY` binary(16) NOT NULL COMMENT 'The Status of the record (Reference Value)',
  `PERS_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Person',
  `ALT_ID_TYP_RKEY` binary(16) NOT NULL COMMENT 'The type of Alternate Identifier (Reference Value)',
  `ALT_ID_VAL` varchar(250) DEFAULT NULL COMMENT 'The alternate identifier value for the Person (e.g. SSN, Drivers License Number)',
  `ORIGIN_ORG_KEY` binary(16) DEFAULT NULL COMMENT 'The related Organization that originates this identifier, if applicable',
  `REFUSED_IND_RKEY` binary(16) NOT NULL COMMENT 'Indicates this Person refused to submit an identifier',
  `SOURCE_CREATE_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created this row in the Source',
  `SOURCE_CHG_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created or altered this row in the Source',
  `SOURCE_CHG_PRCS_VAL` varchar(50) DEFAULT NULL COMMENT 'The process that created or altered this row in the Source',
  `SOURCE_CHG_REASN_VAL` varchar(250) DEFAULT NULL COMMENT 'The reason for the change to this row from the perspective of the Source',
  `SOURCE_CREATE_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the creation of the row in the Source',
  `SOURCE_UPD_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the update to the row in the Source',
  `CREATE_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The timestamp of the creation of the row',
  `CREATE_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that created this row e.g. Informatica mapping, Kafka topic, etc',
  `UPD_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The timestamp of the update to the row',
  `UPD_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that updated this row e.g. Informatica mapping, Kafka topic, etc',
  `DEL_FLAG` tinyint(1) NOT NULL COMMENT 'Determines if this row is deleted',
  PRIMARY KEY (`PERS_ALT_ID_KEY`),
  UNIQUE KEY `AK_PERS_ALT_ID` (`SOURCE_KEY`,`SOURCE_ID`,`PERS_KEY`,`ALT_ID_TYP_RKEY`),
  KEY `IX_SOURCE_CREATE_USER_VAL` (`SOURCE_CREATE_USER_VAL`),
  KEY `FK_SOURCE_KEY` (`SOURCE_KEY`),
  KEY `FK_STAT_RKEY` (`STAT_RKEY`),
  KEY `FK_PERS_KEY` (`PERS_KEY`),
  KEY `FK_ALT_ID_TYP_RKEY` (`ALT_ID_TYP_RKEY`),
  KEY `IX_ALT_ID_VAL` (`ALT_ID_VAL`),
  KEY `FK_ORIGIN_ORG_KEY` (`ORIGIN_ORG_KEY`),
  KEY `FK_REFUSED_IND_RKEY` (`REFUSED_IND_RKEY`),
  KEY `IX_SOURCE_ID` (`SOURCE_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='Alternate Identifiers for a Person.';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `PERS_DEGREE`
--

DROP TABLE IF EXISTS `PERS_DEGREE`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `PERS_DEGREE` (
  `PERS_DEGREE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Person Degree',
  `SOURCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Source',
  `SOURCE_ID` varchar(250) NOT NULL COMMENT 'The unique identifier for this record from the Source',
  `STAT_RKEY` binary(16) NOT NULL COMMENT 'The Status of the record (Reference Value)',
  `PERS_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Person',
  `DEGREE_RKEY` binary(16) NOT NULL COMMENT 'The scholarly Degree (Reference Value)',
  `SOURCE_CREATE_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created this row in the Source',
  `SOURCE_CHG_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created or altered this row in the Source',
  `SOURCE_CHG_PRCS_VAL` varchar(50) DEFAULT NULL COMMENT 'The process that created or altered this row in the Source',
  `SOURCE_CHG_REASN_VAL` varchar(250) DEFAULT NULL COMMENT 'The reason for the change to this row from the perspective of the Source',
  `SOURCE_CREATE_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the creation of the row in the Source',
  `SOURCE_UPD_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the update to the row in the Source',
  `CREATE_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The timestamp of the creation of the row',
  `CREATE_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that created this row e.g. Informatica mapping, Kafka topic, etc',
  `UPD_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The timestamp of the update to the row',
  `UPD_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that updated this row e.g. Informatica mapping, Kafka topic, etc',
  `DEL_FLAG` tinyint(1) NOT NULL COMMENT 'Determines if this row is deleted',
  PRIMARY KEY (`PERS_DEGREE_KEY`),
  UNIQUE KEY `AK_PERS_DEGREE` (`PERS_KEY`,`DEGREE_RKEY`),
  KEY `IX_SOURCE_CREATE_USER_VAL` (`SOURCE_CREATE_USER_VAL`),
  KEY `FK_SOURCE_KEY` (`SOURCE_KEY`),
  KEY `FK_STAT_RKEY` (`STAT_RKEY`),
  KEY `FK_PERS_KEY` (`PERS_KEY`),
  KEY `FK_DEGREE_RKEY` (`DEGREE_RKEY`),
  KEY `IX_SOURCE_ID` (`SOURCE_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='Associates Persons to Degrees.';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `PLACE`
--

DROP TABLE IF EXISTS `PLACE`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `PLACE` (
  `PLACE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Place',
  `SOURCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Source',
  `SOURCE_ID` varchar(250) NOT NULL COMMENT 'The unique identifier for this record from the Source',
  `REC_TYP_RKEY` binary(16) NOT NULL COMMENT 'The EDS Record Type (Reference Value)',
  `REC_SUBTYP_RKEY` binary(16) DEFAULT NULL COMMENT 'The EDS Record Subtype (Reference Value)',
  `STAT_RKEY` binary(16) NOT NULL COMMENT 'The Status of the record (Reference Value)',
  `PLACE_SHORT_NM` varchar(50) NOT NULL COMMENT 'The short name for the Place',
  `PLACE_LONG_NM` varchar(100) DEFAULT NULL COMMENT 'The long name for the Place',
  `SHAPE_TYP_RKEY` binary(16) NOT NULL COMMENT 'The place shape - polygon, point, or line (Reference Value)',
  `CENTROID_LAT_VAL` decimal(9,6) DEFAULT NULL COMMENT 'Geographic latitude of the centroid of the Place, expressed in +/- decimal format',
  `CENTROID_LON_VAL` decimal(9,6) DEFAULT NULL COMMENT 'Geographic longitude of the centroid of the Place, expressed in +/- decimal format',
  `CENTROID_ALT_VAL` decimal(7,1) DEFAULT NULL COMMENT 'Geographic altitude of the centroid of the Place, expressed in +/- decimal format',
  `MOBILE_IND_RKEY` binary(16) NOT NULL COMMENT 'Indicates this Place is not fixed and may move (e.g. Truck bed, Ambulance, Shipping Container)',
  `SOURCE_CREATE_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created this row in the Source',
  `SOURCE_CHG_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created or altered this row in the Source',
  `SOURCE_CHG_PRCS_VAL` varchar(50) DEFAULT NULL COMMENT 'The process that created or altered this row in the Source',
  `SOURCE_CHG_REASN_VAL` varchar(250) DEFAULT NULL COMMENT 'The reason for the change to this row from the perspective of the Source',
  `SOURCE_CREATE_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the creation of the row in the Source',
  `SOURCE_UPD_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the update to the row in the Source',
  `CREATE_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The timestamp of the creation of the row',
  `CREATE_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that created this row e.g. Informatica mapping, Kafka topic, etc',
  `UPD_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The timestamp of the update to the row',
  `UPD_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that updated this row e.g. Informatica mapping, Kafka topic, etc',
  `DEL_FLAG` tinyint(1) NOT NULL COMMENT 'Determines if this row is deleted',
  PRIMARY KEY (`PLACE_KEY`),
  UNIQUE KEY `AK_PLACE` (`SOURCE_KEY`,`SOURCE_ID`,`REC_TYP_RKEY`),
  KEY `IX_PLACE_LONG_NM` (`PLACE_LONG_NM`),
  KEY `IX_PLACE_SHORT_NM` (`PLACE_SHORT_NM`),
  KEY `IX_SOURCE_CREATE_USER_VAL` (`SOURCE_CREATE_USER_VAL`),
  KEY `IX_SOURCE_ID` (`SOURCE_ID`),
  KEY `FK_SOURCE_KEY` (`SOURCE_KEY`),
  KEY `FK_REC_TYP_RKEY` (`REC_TYP_RKEY`),
  KEY `FK_REC_SUBTYP_RKEY` (`REC_SUBTYP_RKEY`),
  KEY `FK_STAT_RKEY` (`STAT_RKEY`),
  KEY `FK_SHAPE_TYP_RKEY` (`SHAPE_TYP_RKEY`),
  KEY `IX_CENTROID_LAT_VAL` (`CENTROID_LAT_VAL`),
  KEY `IX_CENTROID_LON_VAL` (`CENTROID_LON_VAL`),
  KEY `IX_CENTROID_ALT_VAL` (`CENTROID_ALT_VAL`),
  KEY `FK_MOBILE_IND_RKEY` (`MOBILE_IND_RKEY`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='A physical place situated on the earth''s surface.';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `PLACE_RLSHP`
--

DROP TABLE IF EXISTS `PLACE_RLSHP`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `PLACE_RLSHP` (
  `PLACE_RLSHP_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Place Relationship',
  `PLACE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Place',
  `REL_PLACE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Place (related Place)',
  `SOURCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Source',
  `SOURCE_ID` varchar(250) NOT NULL COMMENT 'The unique identifier for this record from the Source',
  `REC_TYP_RKEY` binary(16) NOT NULL COMMENT 'The EDS Record Type (Reference Value)',
  `REC_SUBTYP_RKEY` binary(16) DEFAULT NULL COMMENT 'The EDS Record Subtype (Reference Value)',
  `STAT_RKEY` binary(16) NOT NULL COMMENT 'The Status of the record (Reference Value)',
  `PRIORITY_VAL` tinyint DEFAULT NULL COMMENT 'The relative priority or rank of this item amongst other like items',
  `EFF_START_TS` timestamp NOT NULL COMMENT 'The effectivity start date/time for this record',
  `EFF_END_TS` timestamp NULL DEFAULT NULL COMMENT 'The effectivity end date/time for this record',
  `SOURCE_CREATE_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created this row in the Source',
  `SOURCE_CHG_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created or altered this row in the Source',
  `SOURCE_CHG_PRCS_VAL` varchar(50) DEFAULT NULL COMMENT 'The process that created or altered this row in the Source',
  `SOURCE_CHG_REASN_VAL` varchar(250) DEFAULT NULL COMMENT 'The reason for the change to this row from the perspective of the Source',
  `SOURCE_CREATE_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the creation of the row in the Source',
  `SOURCE_UPD_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the update to the row in the Source',
  `CREATE_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The timestamp of the creation of the row',
  `CREATE_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that created this row e.g. Informatica mapping, Kafka topic, etc',
  `UPD_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The timestamp of the update to the row',
  `UPD_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that updated this row e.g. Informatica mapping, Kafka topic, etc',
  `DEL_FLAG` tinyint(1) NOT NULL COMMENT 'Determines if this row is deleted',
  PRIMARY KEY (`PLACE_RLSHP_KEY`),
  KEY `IX_SOURCE_CREATE_USER_VAL` (`SOURCE_CREATE_USER_VAL`),
  KEY `FK_PLACE_KEY` (`PLACE_KEY`),
  KEY `FK_REL_PLACE_KEY` (`REL_PLACE_KEY`),
  KEY `FK_REC_TYP_RKEY` (`REC_TYP_RKEY`),
  KEY `FK_REC_SUBTYP_RKEY` (`REC_SUBTYP_RKEY`),
  KEY `FK_SOURCE_KEY` (`SOURCE_KEY`),
  KEY `FK_STAT_RKEY` (`STAT_RKEY`),
  KEY `IX_PRIORITY_VAL` (`PRIORITY_VAL`),
  KEY `IX_EFF_START_TS` (`EFF_START_TS`),
  KEY `IX_SOURCE_ID` (`SOURCE_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='The relationship between Places.';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `POSTAL_ADDR`
--

DROP TABLE IF EXISTS `POSTAL_ADDR`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `POSTAL_ADDR` (
  `POSTAL_ADDR_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Postal Address',
  `SOURCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Source',
  `SOURCE_ID` varchar(250) NOT NULL COMMENT 'The unique identifier for this record from the Source',
  `STAT_RKEY` binary(16) NOT NULL COMMENT 'The Status of the record (Reference Value)',
  `ADDR_TYP_RKEY` binary(16) NOT NULL COMMENT 'The Type of Address (Reference Value)',
  `GEOCODE_VAL` varchar(500) DEFAULT NULL COMMENT 'A geocode assigned to this Address',
  `LN1_VAL` varchar(500) NOT NULL COMMENT 'The first line of the postal address',
  `LN2_VAL` varchar(500) DEFAULT NULL COMMENT 'The second line of the postal address',
  `LN3_VAL` varchar(500) DEFAULT NULL COMMENT 'The third line of the postal address',
  `LN4_VAL` varchar(500) DEFAULT NULL COMMENT 'The fourth line of the postal address',
  `LN5_VAL` varchar(500) DEFAULT NULL COMMENT 'The fifth line of the postal address',
  `COUNTY_NM` varchar(50) DEFAULT NULL COMMENT 'The name of the County used on the Postal Address, if applicable',
  `CITY_NM` varchar(50) NOT NULL COMMENT 'The name of the City used on the Postal Address',
  `DISTRICT_NM` varchar(50) DEFAULT NULL COMMENT 'The name of the District used on the Postal Address, if applicable',
  `NEIGHBRHD_NM` varchar(50) DEFAULT NULL COMMENT 'The name of the Neighborhood used on the Postal Address, if applicable',
  `POSTAL_CD_VAL` varchar(20) NOT NULL COMMENT 'The Postal Code used on the Postal Address',
  `ATTN_LN_VAL` varchar(1000) DEFAULT NULL COMMENT 'The attention line, if present, on the postal address',
  `LAT_VAL` decimal(9,6) DEFAULT NULL COMMENT 'Geographic latitude, expressed in +/- decimal format',
  `LON_VAL` decimal(9,6) DEFAULT NULL COMMENT 'Geographic longitude, expressed in +/- decimal format',
  `ALT_VAL` decimal(7,1) DEFAULT NULL COMMENT 'Geographic altitude, expressed in +/- decimal format',
  `CNTRY_PLACE_KEY` binary(16) NOT NULL COMMENT 'The Country from the Place Entity',
  `REGION_PLACE_KEY` binary(16) NOT NULL COMMENT 'The Region (State/Province) from the Place Entity',
  `TZ_PLACE_KEY` binary(16) DEFAULT NULL COMMENT 'The Timezone from the Place Entity',
  `TZ_TXT` varchar(50) DEFAULT NULL COMMENT 'A non-standard Timezone value coming from the source',
  `ACCEPT_MAIL_IND_RKEY` binary(16) NOT NULL COMMENT 'Indicates that this address accepts mail',
  `ACCEPT_PKG_IND_RKEY` binary(16) NOT NULL COMMENT 'Indicates that this address accepts packages',
  `VALID_IND_RKEY` binary(16) NOT NULL COMMENT 'Indicates this address is valid',
  `VALID_REASN_RKEY` binary(16) DEFAULT NULL COMMENT 'The Reason tied to the Address Validation, if any (Reference Value)',
  `LANG_RKEY` binary(16) DEFAULT NULL COMMENT 'The Language spoken at this Postal Address (Reference Value)',
  `SOURCE_CREATE_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created this row in the Source',
  `SOURCE_CHG_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created or altered this row in the Source',
  `SOURCE_CHG_PRCS_VAL` varchar(50) DEFAULT NULL COMMENT 'The process that created or altered this row in the Source',
  `SOURCE_CHG_REASN_VAL` varchar(250) DEFAULT NULL COMMENT 'The reason for the change to this row from the perspective of the Source',
  `SOURCE_CREATE_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the creation of the row in the Source',
  `SOURCE_UPD_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the update to the row in the Source',
  `CREATE_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The timestamp of the creation of the row',
  `CREATE_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that created this row e.g. Informatica mapping, Kafka topic, etc',
  `UPD_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The timestamp of the update to the row',
  `UPD_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that updated this row e.g. Informatica mapping, Kafka topic, etc',
  `DEL_FLAG` tinyint(1) NOT NULL COMMENT 'Determines if this row is deleted',
  PRIMARY KEY (`POSTAL_ADDR_KEY`),
  UNIQUE KEY `AK_POSTAL_ADDR` (`SOURCE_ID`,`SOURCE_KEY`),
  KEY `IX_SOURCE_CREATE_USER_VAL` (`SOURCE_CREATE_USER_VAL`),
  KEY `IX_SOURCE_ID` (`SOURCE_ID`),
  KEY `FK_SOURCE_KEY` (`SOURCE_KEY`),
  KEY `FK_STAT_RKEY` (`STAT_RKEY`),
  KEY `FK_ADDR_TYP_RKEY` (`ADDR_TYP_RKEY`),
  KEY `IX_LN1_VAL` (`LN1_VAL`),
  KEY `IX_LN2_VAL` (`LN2_VAL`),
  KEY `IX_LN3_VAL` (`LN3_VAL`),
  KEY `IX_LN4_VAL` (`LN4_VAL`),
  KEY `IX_LN5_VAL` (`LN5_VAL`),
  KEY `IX_POSTAL_CD_VAL` (`POSTAL_CD_VAL`),
  KEY `FK_CNTRY_PLACE_KEY` (`CNTRY_PLACE_KEY`),
  KEY `FK_REGION_PLACE_KEY` (`REGION_PLACE_KEY`),
  KEY `IX_TX_TXT` (`TZ_TXT`),
  KEY `FK_ACCEPT_MAIL_RKEY` (`ACCEPT_MAIL_IND_RKEY`),
  KEY `FK_ACCEPT_PKG_RKEY` (`ACCEPT_PKG_IND_RKEY`),
  KEY `FK_VALID_IND_RKEY` (`VALID_IND_RKEY`),
  KEY `FK_VALID_REASN_RKEY` (`VALID_REASN_RKEY`),
  KEY `FK_LANG_RKEY` (`LANG_RKEY`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='A set of values that identify a location for mail delivery.';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `PROC`
--

DROP TABLE IF EXISTS `PROC`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `PROC` (
  `MEDL_EVNT_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Medical Event',
  `EST_START_DT_IND_RKEY` binary(16) NOT NULL COMMENT 'Indicates the Start Datetime was estimated and is not the actual date',
  `OUTSIDE_US_IND_RKEY` binary(16) NOT NULL COMMENT 'Indicates the Procedure occured outside of the United States',
  `SOURCE_CREATE_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created this row in the Source',
  `SOURCE_CHG_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created or altered this row in the Source',
  `SOURCE_CHG_PRCS_VAL` varchar(50) DEFAULT NULL COMMENT 'The process that created or altered this row in the Source',
  `SOURCE_CHG_REASN_VAL` varchar(250) DEFAULT NULL COMMENT 'The reason for the change to this row from the perspective of the Source',
  `SOURCE_CREATE_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the creation of the row in the Source',
  `SOURCE_UPD_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the update to the row in the Source',
  `CREATE_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The timestamp of the creation of the row',
  `CREATE_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that created this row e.g. Informatica mapping, Kafka topic, etc',
  `UPD_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The timestamp of the update to the row',
  `UPD_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that updated this row e.g. Informatica mapping, Kafka topic, etc',
  `DEL_FLAG` tinyint(1) NOT NULL COMMENT 'Determines if this row is deleted',
  PRIMARY KEY (`MEDL_EVNT_KEY`),
  KEY `IX_SOURCE_CREATE_USER_VAL` (`SOURCE_CREATE_USER_VAL`),
  KEY `FK_EST_START_DT_IND_RKEY` (`EST_START_DT_IND_RKEY`),
  KEY `FK_OUTSIDE_US_IND_RKEY` (`OUTSIDE_US_IND_RKEY`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='A Medical Event that alters the physical state of a Patient.';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `PROC_DEVICE_INSTANCE`
--

DROP TABLE IF EXISTS `PROC_DEVICE_INSTANCE`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `PROC_DEVICE_INSTANCE` (
  `PROC_DEVICE_INSTANCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Procedure Device Instance',
  `DEVICE_INSTANCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Device Instance',
  `MEDL_EVNT_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Medical Event',
  `SOURCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Source',
  `SOURCE_ID` varchar(250) NOT NULL COMMENT 'The unique identifier for this record from the Source',
  `STAT_RKEY` binary(16) NOT NULL COMMENT 'The Status of the record (Reference Value)',
  `ACT_TYP_RKEY` binary(16) NOT NULL COMMENT 'The Activity Type of the action tied to the Device Registration (Reference Value)',
  `ACT_SUBTYP_RKEY` binary(16) DEFAULT NULL COMMENT 'The Activity Subtype of the action tied to the Device Registration (Reference Value)',
  `REC_TYP_RKEY` binary(16) NOT NULL COMMENT 'The EDS Record Type (Reference Value)',
  `REC_SUBTYP_RKEY` binary(16) DEFAULT NULL COMMENT 'The EDS Record Subtype (Reference Value)',
  `SOURCE_CREATE_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created this row in the Source',
  `SOURCE_CHG_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created or altered this row in the Source',
  `SOURCE_CHG_PRCS_VAL` varchar(50) DEFAULT NULL COMMENT 'The process that created or altered this row in the Source',
  `SOURCE_CHG_REASN_VAL` varchar(250) DEFAULT NULL COMMENT 'The reason for the change to this row from the perspective of the Source',
  `SOURCE_CREATE_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the creation of the row in the Source',
  `SOURCE_UPD_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the update to the row in the Source',
  `CREATE_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The timestamp of the creation of the row',
  `CREATE_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that created this row e.g. Informatica mapping, Kafka topic, etc',
  `UPD_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The timestamp of the update to the row',
  `UPD_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that updated this row e.g. Informatica mapping, Kafka topic, etc',
  `DEL_FLAG` tinyint(1) NOT NULL COMMENT 'Determines if this row is deleted',
  PRIMARY KEY (`PROC_DEVICE_INSTANCE_KEY`),
  UNIQUE KEY `AK_PROC_DEVICE_INSTANCE` (`DEVICE_INSTANCE_KEY`,`REC_TYP_RKEY`),
  KEY `IX_SOURCE_CREATE_USER_VAL` (`SOURCE_CREATE_USER_VAL`),
  KEY `IX_SOURCE_ID` (`SOURCE_ID`),
  KEY `FK_SOURCE_KEY` (`SOURCE_KEY`),
  KEY `FK_STAT_RKEY` (`STAT_RKEY`),
  KEY `FK_ACT_TYP_RKEY` (`ACT_TYP_RKEY`),
  KEY `FK_ACT_SUBTYP_RKEY` (`ACT_SUBTYP_RKEY`),
  KEY `FK_REC_TYP_RKEY` (`REC_TYP_RKEY`),
  KEY `FK_REC_SUBTYP_RKEY` (`REC_SUBTYP_RKEY`),
  KEY `FK_DEVICE_INSTANCE_KEY` (`DEVICE_INSTANCE_KEY`),
  KEY `FK_MEDL_EVNT_KEY` (`MEDL_EVNT_KEY`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='An instance of a Device participating in a Procedure.';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `PROC_HCP`
--

DROP TABLE IF EXISTS `PROC_HCP`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `PROC_HCP` (
  `PROC_HCP_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Procedure Healthcare Professional (HCP)',
  `HCP_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Healthcare Professional (HCP)',
  `MEDL_EVNT_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Medical Event',
  `SOURCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Source',
  `SOURCE_ID` varchar(250) NOT NULL COMMENT 'The unique identifier for this record from the Source',
  `STAT_RKEY` binary(16) NOT NULL COMMENT 'The Status of the record (Reference Value)',
  `REC_TYP_RKEY` binary(16) NOT NULL COMMENT 'The EDS Record Type (Reference Value)',
  `REC_SUBTYP_RKEY` binary(16) DEFAULT NULL COMMENT 'The EDS Record Subtype (Reference Value)',
  `SOURCE_CREATE_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created this row in the Source',
  `SOURCE_CHG_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created or altered this row in the Source',
  `SOURCE_CHG_PRCS_VAL` varchar(50) DEFAULT NULL COMMENT 'The process that created or altered this row in the Source',
  `SOURCE_CHG_REASN_VAL` varchar(250) DEFAULT NULL COMMENT 'The reason for the change to this row from the perspective of the Source',
  `SOURCE_CREATE_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the creation of the row in the Source',
  `SOURCE_UPD_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the update to the row in the Source',
  `CREATE_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The timestamp of the creation of the row',
  `CREATE_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that created this row e.g. Informatica mapping, Kafka topic, etc',
  `UPD_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The timestamp of the update to the row',
  `UPD_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that updated this row e.g. Informatica mapping, Kafka topic, etc',
  `DEL_FLAG` tinyint(1) NOT NULL COMMENT 'Determines if this row is deleted',
  PRIMARY KEY (`PROC_HCP_KEY`),
  UNIQUE KEY `AK_PROC_HCP` (`HCP_KEY`,`REC_TYP_RKEY`),
  KEY `IX_SOURCE_CREATE_USER_VAL` (`SOURCE_CREATE_USER_VAL`),
  KEY `IX_SOURCE_ID` (`SOURCE_ID`),
  KEY `FK_HCP_KEY` (`HCP_KEY`),
  KEY `FK_MEDL_EVNT_KEY` (`MEDL_EVNT_KEY`),
  KEY `FK_SOURCE_KEY` (`SOURCE_KEY`),
  KEY `FK_STAT_RKEY` (`STAT_RKEY`),
  KEY `FK_REC_TYP_RKEY` (`REC_TYP_RKEY`),
  KEY `FK_REC_SUBTYP_RKEY` (`REC_SUBTYP_RKEY`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='An instance of a HCP participating in a Procedure.';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `PROC_INDICATION`
--

DROP TABLE IF EXISTS `PROC_INDICATION`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `PROC_INDICATION` (
  `PROC_INDICATION_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Procedure Indication',
  `MEDL_EVNT_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Medical Event',
  `SOURCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Source',
  `SOURCE_ID` varchar(250) NOT NULL COMMENT 'The unique identifier for this record from the Source',
  `STAT_RKEY` binary(16) NOT NULL COMMENT 'The Status of the record (Reference Value)',
  `INDICATION_RKEY` binary(16) NOT NULL COMMENT 'The Indication or Diagnosis (Reference Value)',
  `PRIORITY_VAL` tinyint DEFAULT NULL COMMENT 'The relative priority or rank of this item amongst other like items',
  `SOURCE_CREATE_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created this row in the Source',
  `SOURCE_CHG_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created or altered this row in the Source',
  `SOURCE_CHG_PRCS_VAL` varchar(50) DEFAULT NULL COMMENT 'The process that created or altered this row in the Source',
  `SOURCE_CHG_REASN_VAL` varchar(250) DEFAULT NULL COMMENT 'The reason for the change to this row from the perspective of the Source',
  `SOURCE_CREATE_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the creation of the row in the Source',
  `SOURCE_UPD_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the update to the row in the Source',
  `CREATE_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The timestamp of the creation of the row',
  `CREATE_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that created this row e.g. Informatica mapping, Kafka topic, etc',
  `UPD_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The timestamp of the update to the row',
  `UPD_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that updated this row e.g. Informatica mapping, Kafka topic, etc',
  `DEL_FLAG` tinyint(1) NOT NULL COMMENT 'Determines if this row is deleted',
  PRIMARY KEY (`PROC_INDICATION_KEY`),
  UNIQUE KEY `AK_PROC_INDICATION` (`INDICATION_RKEY`, `MEDL_EVNT_KEY`),
  KEY `IX_SOURCE_CREATE_USER_VAL` (`SOURCE_CREATE_USER_VAL`),
  KEY `FK_MEDL_EVNT_KEY` (`MEDL_EVNT_KEY`),
  KEY `FK_SOURCE_KEY` (`SOURCE_KEY`),
  KEY `FK_STAT_RKEY` (`STAT_RKEY`),
  KEY `FK_INDICATION_RKEY` (`INDICATION_RKEY`),
  KEY `IX_PRIORITY_VAL` (`PRIORITY_VAL`),
  KEY `IX_SOURCE_ID` (`SOURCE_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='Associates Indications to Procedures.';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `REF_VAL`
--

DROP TABLE IF EXISTS `REF_VAL`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `REF_VAL` (
  `REF_VAL_RKEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Reference Value',
  `SOURCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Source',
  `SOURCE_ID` varchar(250) NOT NULL COMMENT 'The unique identifier for this record from the Source',
  `REF_VAL` varchar(50) NOT NULL COMMENT 'The reference value or code value',
  `REF_VAL_SHORT_NM` varchar(50) DEFAULT NULL COMMENT 'A short name for the reference value or code value',
  `REF_VAL_MEDIUM_NM` varchar(50) DEFAULT NULL COMMENT 'A medium name for the reference value or code value',
  `REF_VAL_LONG_NM` varchar(50) DEFAULT NULL COMMENT 'A long name for the reference value or code value',
  `REF_VAL_DESC` varchar(1000) DEFAULT NULL COMMENT 'The reference value or code value description',
  `REF_VAL_SET_FLAG` tinyint(1) NOT NULL COMMENT 'Determines if this record represents a Reference Value Set. If False, this record represents a member of a Reference Value Set.',
  `SOURCE_CREATE_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created this row in the Source',
  `SOURCE_CHG_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created or altered this row in the Source',
  `SOURCE_CHG_PRCS_VAL` varchar(50) DEFAULT NULL COMMENT 'The process that created or altered this row in the Source',
  `SOURCE_CHG_REASN_VAL` varchar(250) DEFAULT NULL COMMENT 'The reason for the change to this row from the perspective of the Source',
  `SOURCE_CREATE_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the creation of the row in the Source',
  `SOURCE_UPD_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the update to the row in the Source',
  `CREATE_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The timestamp of the creation of the row',
  `CREATE_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that created this row e.g. Informatica mapping, Kafka topic, etc',
  `UPD_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The timestamp of the update to the row',
  `UPD_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that updated this row e.g. Informatica mapping, Kafka topic, etc',
  `DEL_FLAG` tinyint(1) NOT NULL COMMENT 'Determines if this row is deleted',
  PRIMARY KEY (`REF_VAL_RKEY`),
  UNIQUE KEY `AK_REF_VAL` (`SOURCE_ID`,`REF_VAL`,`SOURCE_KEY`),
  KEY `IX_REF_VAL` (`REF_VAL`),
  KEY `FK_SOURCE_KEY` (`SOURCE_KEY`),
  KEY `IX_REF_VAL_SHORT_NM` (`REF_VAL_SHORT_NM`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='A simple lookup value.';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `REF_VAL_RLSHP`
--

DROP TABLE IF EXISTS `REF_VAL_RLSHP`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `REF_VAL_RLSHP` (
  `REF_VAL_RLSHP_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Reference Value Relationship',
  `REF_VAL_RKEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Reference Value',
  `REL_REF_VAL_RKEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Reference Value (Related Reference Value)',
  `SOURCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Source',
  `SOURCE_ID` varchar(250) NOT NULL COMMENT 'The unique identifier for this record from the Source',
  `REF_HRCHY_KEY` binary(16) DEFAULT NULL COMMENT 'The EDS primary key for Reference Hierarchy',
  `REF_VAL_RLSHP_TYP_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Reference Value Relationship Type',
  `HRCHY_LVL_NUM` decimal(5,0) DEFAULT NULL COMMENT 'The level of the hierarchy, if applicable',
  `SOURCE_CREATE_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created this row in the Source',
  `SOURCE_CHG_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created or altered this row in the Source',
  `SOURCE_CHG_PRCS_VAL` varchar(50) DEFAULT NULL COMMENT 'The process that created or altered this row in the Source',
  `SOURCE_CHG_REASN_VAL` varchar(250) DEFAULT NULL COMMENT 'The reason for the change to this row from the perspective of the Source',
  `SOURCE_CREATE_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the creation of the row in the Source',
  `SOURCE_UPD_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the update to the row in the Source',
  `CREATE_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The timestamp of the creation of the row',
  `CREATE_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that created this row e.g. Informatica mapping, Kafka topic, etc',
  `UPD_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The timestamp of the update to the row',
  `UPD_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that updated this row e.g. Informatica mapping, Kafka topic, etc',
  `DEL_FLAG` tinyint(1) NOT NULL COMMENT 'Determines if this row is deleted',
  PRIMARY KEY (`REF_VAL_RLSHP_KEY`),
  UNIQUE KEY `AK_REF_VAL_RLSHP` (`REF_VAL_RKEY`,`REL_REF_VAL_RKEY`,`SOURCE_KEY`,`SOURCE_ID`),
  KEY `FK_REL_REF_VAL_RKEY` (`REL_REF_VAL_RKEY`),
  KEY `FK_REF_VAL_RLSHP_TYP_KEY` (`REF_VAL_RLSHP_TYP_KEY`),
  KEY `FK_REF_VAL_RKEY` (`REF_VAL_RKEY`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='The relationship between Reference Values.';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `REF_VAL_RLSHP_TYP`
--

DROP TABLE IF EXISTS `REF_VAL_RLSHP_TYP`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `REF_VAL_RLSHP_TYP` (
  `REF_VAL_RLSHP_TYP_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Reference Value Relationship Type',
  `REF_VAL_RLSHP_TYP_NM` varchar(50) NOT NULL COMMENT 'The name of the Reference Value Relationship Type',
  `SOURCE_CREATE_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created this row in the Source',
  `SOURCE_CHG_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created or altered this row in the Source',
  `SOURCE_CHG_PRCS_VAL` varchar(50) DEFAULT NULL COMMENT 'The process that created or altered this row in the Source',
  `SOURCE_CHG_REASN_VAL` varchar(250) DEFAULT NULL COMMENT 'The reason for the change to this row from the perspective of the Source',
  `SOURCE_CREATE_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the creation of the row in the Source',
  `SOURCE_UPD_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the update to the row in the Source',
  `CREATE_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The timestamp of the creation of the row',
  `CREATE_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that created this row e.g. Informatica mapping, Kafka topic, etc',
  `UPD_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The timestamp of the update to the row',
  `UPD_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that updated this row e.g. Informatica mapping, Kafka topic, etc',
  `DEL_FLAG` tinyint(1) NOT NULL COMMENT 'Determines if this row is deleted',
  PRIMARY KEY (`REF_VAL_RLSHP_TYP_KEY`),
  UNIQUE KEY `AK_REF_VAL_RLSHP_TYP` (`REF_VAL_RLSHP_TYP_NM`),
  KEY `IX_REF_VAL_RLSHP_TYP_NM` (`REF_VAL_RLSHP_TYP_NM`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='The type of relationship of Reference Values.';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `SOURCE`
--

DROP TABLE IF EXISTS `SOURCE`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `SOURCE` (
  `SOURCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Source',
  `LGCY_SOURCE_KEY` binary(16) DEFAULT NULL COMMENT 'The EDS primary key for Source (optional link to Legacy Source)',
  `SOURCE` varchar(10) NOT NULL COMMENT 'The Source system/application/authority providing this record',
  `SOURCE_SHORT_NM` varchar(50) NOT NULL COMMENT 'A short name for the Source',
  `SOURCE_LONG_NM` varchar(100) NOT NULL COMMENT 'A long name for the Source',
  `SOURCE_DESC` varchar(100) NOT NULL COMMENT 'The description of the Source',
  `SOURCE_CREATE_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created this row in the Source',
  `SOURCE_CHG_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created or altered this row in the Source',
  `SOURCE_CHG_PRCS_VAL` varchar(50) DEFAULT NULL COMMENT 'The process that created or altered this row in the Source',
  `SOURCE_CHG_REASN_VAL` varchar(250) DEFAULT NULL COMMENT 'The reason for the change to this row from the perspective of the Source',
  `SOURCE_CREATE_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the creation of the row in the Source',
  `SOURCE_UPD_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the update to the row in the Source',
  `CREATE_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The timestamp of the creation of the row',
  `CREATE_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that created this row e.g. Informatica mapping, Kafka topic, etc',
  `UPD_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The timestamp of the update to the row',
  `UPD_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that updated this row e.g. Informatica mapping, Kafka topic, etc',
  `DEL_FLAG` tinyint(1) NOT NULL COMMENT 'Determines if this row is deleted',
  PRIMARY KEY (`SOURCE_KEY`),
  UNIQUE KEY `AK_SOURCE` (`SOURCE`,`SOURCE_KEY`),
  KEY `IX_SOURCE` (`SOURCE`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='All Sources of interest to MDT.';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `VIRTUAL_ADDR`
--

DROP TABLE IF EXISTS `VIRTUAL_ADDR`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `VIRTUAL_ADDR` (
  `VIRTUAL_ADDR_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Virtual Address',
  `SOURCE_KEY` binary(16) NOT NULL COMMENT 'The EDS primary key for Source',
  `SOURCE_ID` varchar(250) NOT NULL COMMENT 'The unique identifier for this record from the Source',
  `STAT_RKEY` binary(16) NOT NULL COMMENT 'The Status of the record (Reference Value)',
  `ADDR_TYP_RKEY` binary(16) NOT NULL COMMENT 'The Type of Address (Reference Value)',
  `VIRTUAL_ADDR_PREFIX_VAL` varchar(100) DEFAULT NULL COMMENT 'An optional prefix value for the virtual address',
  `VIRTUAL_ADDR_VAL` varchar(100) NOT NULL COMMENT 'The value for the Virtual Address',
  `VIRTUAL_ADDR_EXT_VAL` varchar(100) DEFAULT NULL COMMENT 'An optional extended value for the virtual address (e.g. Phone Extension)',
  `VALID_IND_RKEY` binary(16) NOT NULL COMMENT 'Indicates this address is valid',
  `LAND_LINE_POSTAL_ADDR_KEY` binary(16) DEFAULT NULL COMMENT 'The only occurrence of a relationship between Virtual and Postal Addresses would be for land lines physically associated to a Postal Address. Address Usage can be used otherwise ("Home") for "home" cell phone numbers or email addresses, for example. ',
  `CNTRY_PLACE_KEY` binary(16) DEFAULT NULL COMMENT 'The Country from the Place Entity',
  `SOURCE_CREATE_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created this row in the Source',
  `SOURCE_CHG_USER_VAL` varchar(50) DEFAULT NULL COMMENT 'The user that created or altered this row in the Source',
  `SOURCE_CHG_PRCS_VAL` varchar(50) DEFAULT NULL COMMENT 'The process that created or altered this row in the Source',
  `SOURCE_CHG_REASN_VAL` varchar(250) DEFAULT NULL COMMENT 'The reason for the change to this row from the perspective of the Source',
  `SOURCE_CREATE_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the creation of the row in the Source',
  `SOURCE_UPD_TS` timestamp NULL DEFAULT NULL COMMENT 'The timestamp of the update to the row in the Source',
  `CREATE_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The timestamp of the creation of the row',
  `CREATE_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that created this row e.g. Informatica mapping, Kafka topic, etc',
  `UPD_TS` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The timestamp of the update to the row',
  `UPD_PRCS_VAL` varchar(50) NOT NULL COMMENT 'The process that updated this row e.g. Informatica mapping, Kafka topic, etc',
  `DEL_FLAG` tinyint(1) NOT NULL COMMENT 'Determines if this row is deleted',
  PRIMARY KEY (`VIRTUAL_ADDR_KEY`),
  UNIQUE KEY `AK_VIRTUAL_ADDR` (`SOURCE_ID`,`SOURCE_KEY`),
  KEY `IX_VIRTUAL_ADDR_VAL` (`VIRTUAL_ADDR_VAL`),
  KEY `IX_SOURCE_CREATE_USER_VAL` (`SOURCE_CREATE_USER_VAL`),
  KEY `IX_SOURCE_ID` (`SOURCE_ID`),
  KEY `IX_VIRTUAL_ADDR_EXT_VAL` (`VIRTUAL_ADDR_EXT_VAL`),
  KEY `FK_VALID_IND_RKEY` (`VALID_IND_RKEY`),
  KEY `FK_LAND_LINE_POSTAL_ADDR_KEY` (`LAND_LINE_POSTAL_ADDR_KEY`),
  KEY `FK_CNTRY_PLACE_KEY` (`CNTRY_PLACE_KEY`),
  KEY `FK_SOURCE_KEY` (`SOURCE_KEY`),
  KEY `FK_STAT_RKEY` (`STAT_RKEY`),
  KEY `FK_ADDR_TYP_RKEY` (`ADDR_TYP_RKEY`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='A string of alphanumeric values used for communication.';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Temporary view structure for view `V_ASSIGN_DEVICE_PARAM_VAL`
--

DROP TABLE IF EXISTS `V_ASSIGN_DEVICE_PARAM_VAL`;
/*!50001 DROP VIEW IF EXISTS `V_ASSIGN_DEVICE_PARAM_VAL`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_ASSIGN_DEVICE_PARAM_VAL` AS SELECT 
 1 AS `deviceRegistrationKey`,
 1 AS `deviceParameterSourceName`,
 1 AS `deviceParameterSourceID`,
 1 AS `deviceParameterRecordStatusCode`,
 1 AS `deviceParameterRecordStatusDesc`,
 1 AS `deviceParameterCode`,
 1 AS `deviceParameterDesc`,
 1 AS `deviceParameterTextValue`,
 1 AS `deviceParameterSourceCreateUserValue`,
 1 AS `deviceParameterSourceChangeUserValue`,
 1 AS `deviceParameterSourceChangeProcessValue`,
 1 AS `deviceParameterSourceChangeReasonValue`,
 1 AS `deviceParameterSourceCreateTimestamp`,
 1 AS `deviceParameterSourceUpdateTimestamp`,
 1 AS `deviceParameterCreateTimestamp`,
 1 AS `deviceParameterCreateProcessValue`,
 1 AS `deviceParameterUpdateTimestamp`,
 1 AS `deviceParameterUpdateProcessValue`,
 1 AS `deviceParameterDeleteFlag`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_CUST_ACCT`
--

DROP TABLE IF EXISTS `V_CUST_ACCT`;
/*!50001 DROP VIEW IF EXISTS `V_CUST_ACCT`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_CUST_ACCT` AS SELECT 
 1 AS `customerAccountKey`,
 1 AS `customerAccountSourceName`,
 1 AS `customerAccountSourceID`,
 1 AS `customerAccountRecordTypeCode`,
 1 AS `customerAccountRecordTypeDesc`,
 1 AS `customerAccountRecordSubtypeCode`,
 1 AS `customerAccountRecordSubtypeDesc`,
 1 AS `customerAccountRecordStatusCode`,
 1 AS `customerAccountRecordStatusDesc`,
 1 AS `customerAccountNum`,
 1 AS `customerAccountShortName`,
 1 AS `customerAccountLongName`,
 1 AS `customerAccountAlternateName`,
 1 AS `customerAccountPreferredName`,
 1 AS `customerAccountLanguageCode`,
 1 AS `customerAccountLanguageDesc`,
 1 AS `customerAccountSourceCreateUserValue`,
 1 AS `customerAccountSourceChangeUserValue`,
 1 AS `customerAccountSourceChangeProcessValue`,
 1 AS `customerAccountSourceChangeReasonValue`,
 1 AS `customerAccountSourceCreateTimestamp`,
 1 AS `customerAccountSourceUpdateTimestamp`,
 1 AS `customerAccountCreateTimestamp`,
 1 AS `customerAccountCreateProcessValue`,
 1 AS `customerAccountUpdateTimestamp`,
 1 AS `customerAccountUpdateProcessValue`,
 1 AS `customerAccountDeleteFlag`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_CUST_ACCT_POSTAL_ADDR`
--

DROP TABLE IF EXISTS `V_CUST_ACCT_POSTAL_ADDR`;
/*!50001 DROP VIEW IF EXISTS `V_CUST_ACCT_POSTAL_ADDR`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_CUST_ACCT_POSTAL_ADDR` AS SELECT 
 1 AS `customerAccountKey`,
 1 AS `customerAccountPostalAddressSourceName`,
 1 AS `customerAccountPostalAddressSourceID`,
 1 AS `customerAccountPostalAddressRecordStatusCode`,
 1 AS `customerAccountPostalAddressRecordStatusDesc`,
 1 AS `postalAddressRecordStatusCode`,
 1 AS `postalAddressRecordStatusDesc`,
 1 AS `postalAddressTypeCode`,
 1 AS `postalAddressTypeDesc`,
 1 AS `customerAccountPostalAddressLine1Val`,
 1 AS `customerAccountPostalAddressLine2Val`,
 1 AS `customerAccountPostalAddressLine3Val`,
 1 AS `customerAccountPostalAddressLine4Val`,
 1 AS `customerAccountPostalAddressLine5Val`,
 1 AS `customerAccountPostalAddressAttentionLine`,
 1 AS `customerAccountPostalAddressGeocodeVal`,
 1 AS `customerAccountPostalAddressLatitude`,
 1 AS `customerAccountPostalAddressLongitude`,
 1 AS `customerAccountPostalAddressAltitude`,
 1 AS `customerAccountPostalAddressCountyName`,
 1 AS `customerAccountPostalAddressCityName`,
 1 AS `customerAccountPostalAddressDistrictName`,
 1 AS `customerAccountPostalAddressNeighborhoodName`,
 1 AS `customerAccountPostalAddressPostalCode`,
 1 AS `customerAccountPostalAddressPriorityVal`,
 1 AS `postalAddressCountryCode`,
 1 AS `postalAddressCountryName`,
 1 AS `postalAddressRegionCode`,
 1 AS `postalAddressRegionName`,
 1 AS `postalAddressTimezoneCode`,
 1 AS `postalAddressTimezoneName`,
 1 AS `postalAddressTimezoneText`,
 1 AS `customerAccountPostalAddressUsageCode`,
 1 AS `customerAccountPostalAddressUsageDesc`,
 1 AS `customerAccountPostalAddressPreferredIndicator`,
 1 AS `customerAccountPostalAddressAcceptMailIndicator`,
 1 AS `customerAccountPostalAddressAcceptPackageIndicator`,
 1 AS `customerAccountPostalAddressValidatedIndicator`,
 1 AS `customerAccountPostalAddressValidationReasonCode`,
 1 AS `customerAccountPostalAddressValidationReasonDesc`,
 1 AS `customerAccountPostalAddressLanguageCode`,
 1 AS `customerAccountPostalAddressLanguageDesc`,
 1 AS `customerAccountPostalAddressStartDate`,
 1 AS `customerAccountPostalAddressEndDate`,
 1 AS `customerAccountPostalAddressSourceCreateUserValue`,
 1 AS `customerAccountPostalAddressSourceChangeUserValue`,
 1 AS `customerAccountPostalAddressSourceChangeProcessValue`,
 1 AS `customerAccountPostalAddressSourceChangeReasonValue`,
 1 AS `customerAccountPostalAddressSourceCreateTimestamp`,
 1 AS `customerAccountPostalAddressSourceUpdateTimestamp`,
 1 AS `customerAccountPostalAddressCreateTimestamp`,
 1 AS `customerAccountPostalAddressCreateProcessValue`,
 1 AS `customerAccountPostalAddressUpdateTimestamp`,
 1 AS `customerAccountPostalAddressUpdateProcessValue`,
 1 AS `customerAccountPostalAddressDeleteFlag`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_CUST_ACCT_VIRTUAL_ADDR`
--

DROP TABLE IF EXISTS `V_CUST_ACCT_VIRTUAL_ADDR`;
/*!50001 DROP VIEW IF EXISTS `V_CUST_ACCT_VIRTUAL_ADDR`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_CUST_ACCT_VIRTUAL_ADDR` AS SELECT 
 1 AS `customerAccountKey`,
 1 AS `customerAccountVirtualAddressSourceName`,
 1 AS `customerAccountVirtualAddressSourceID`,
 1 AS `customerAccountVirtualAddressRecordStatusCode`,
 1 AS `customerAccountVirtualAddressRecordStatusDesc`,
 1 AS `virtualAddressRecordStatusCode`,
 1 AS `virtualAddressRecordStatusDesc`,
 1 AS `virtualAddressLandLinePostalAddressKey`,
 1 AS `virtualAddressTypeCode`,
 1 AS `virtualAddressTypeDesc`,
 1 AS `customerAccountVirtualAddressVal`,
 1 AS `customerAccountVirtualAddressExtendedVal`,
 1 AS `customerAccountVirtualAddressPriorityVal`,
 1 AS `virtualAddressCountryCode`,
 1 AS `virtualAddressCountryName`,
 1 AS `customerAccountVirtualAddressUsageCode`,
 1 AS `customerAccountVirtualAddressUsageDesc`,
 1 AS `customerAccountVirtualAddressPreferredIndicator`,
 1 AS `customerAccountVirtualAddressAcceptsTextMessageIndicator`,
 1 AS `customerAccountVirtualAddressAcceptsVoicemailMessageIndicator`,
 1 AS `customerAccountVirtualAddressValidatedIndicator`,
 1 AS `customerAccountVirtualAddressStartDate`,
 1 AS `customerAccountVirtualAddressEndDate`,
 1 AS `customerAccountVirtualAddressSourceCreateUserValue`,
 1 AS `customerAccountVirtualAddressSourceChangeUserValue`,
 1 AS `customerAccountVirtualAddressSourceChangeProcessValue`,
 1 AS `customerAccountVirtualAddressSourceChangeReasonValue`,
 1 AS `customerAccountVirtualAddressSourceCreateTimestamp`,
 1 AS `customerAccountVirtualAddressSourceUpdateTimestamp`,
 1 AS `customerAccountVirtualAddressCreateTimestamp`,
 1 AS `customerAccountVirtualAddressCreateProcessValue`,
 1 AS `customerAccountVirtualAddressUpdateTimestamp`,
 1 AS `customerAccountVirtualAddressUpdateProcessValue`,
 1 AS `customerAccountVirtualAddressDeleteFlag`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_DEVICE`
--

DROP TABLE IF EXISTS `V_DEVICE`;
/*!50001 DROP VIEW IF EXISTS `V_DEVICE`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_DEVICE` AS SELECT 
 1 AS `deviceKey`,
 1 AS `deviceSourceName`,
 1 AS `deviceSourceID`,
 1 AS `productKey`,
 1 AS `manufacturerOrgKey`,
 1 AS `deviceRecordTypeCode`,
 1 AS `deviceRecordTypeDesc`,
 1 AS `deviceRecordSubtypeCode`,
 1 AS `deviceRecordSubtypeDesc`,
 1 AS `deviceRecordStatusCode`,
 1 AS `deviceRecordStatusDesc`,
 1 AS `deviceLotSerialNum`,
 1 AS `deviceUnknownSerialNumIndicator`,
 1 AS `deviceManufacturerCode`,
 1 AS `deviceManufacturerName`,
 1 AS `deviceLastActivityType`,
 1 AS `deviceLastActivitySubtype`,
 1 AS `devicePrimaryImplantableFlag`,
 1 AS `deviceImplantDate`,
 1 AS `deviceExplantDate`,
 1 AS `deviceManufactureDate`,
 1 AS `deviceUseBeforeDate`,
 1 AS `deviceSourceCreateUserValue`,
 1 AS `deviceSourceChangeUserValue`,
 1 AS `deviceSourceChangeProcessValue`,
 1 AS `deviceSourceChangeReasonValue`,
 1 AS `deviceSourceCreateTimestamp`,
 1 AS `deviceSourceUpdateTimestamp`,
 1 AS `deviceCreateTimestamp`,
 1 AS `deviceCreateProcessValue`,
 1 AS `deviceUpdateTimestamp`,
 1 AS `deviceUpdateProcessValue`,
 1 AS `deviceDeleteFlag`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_DEVICE_FIRST_IMPL`
--

DROP TABLE IF EXISTS `V_DEVICE_FIRST_IMPL`;
/*!50001 DROP VIEW IF EXISTS `V_DEVICE_FIRST_IMPL`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_DEVICE_FIRST_IMPL` AS SELECT 
 1 AS `DEVICE_INSTANCE_KEY`,
 1 AS `FIRST_IMPLANT_TS`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_DEVICE_LAST_ACT`
--

DROP TABLE IF EXISTS `V_DEVICE_LAST_ACT`;
/*!50001 DROP VIEW IF EXISTS `V_DEVICE_LAST_ACT`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_DEVICE_LAST_ACT` AS SELECT 
 1 AS `DEVICE_INSTANCE_KEY`,
 1 AS `LAST_ACT_TYP`,
 1 AS `LAST_ACT_SUBTYP`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_DEVICE_LAST_EXPL`
--

DROP TABLE IF EXISTS `V_DEVICE_LAST_EXPL`;
/*!50001 DROP VIEW IF EXISTS `V_DEVICE_LAST_EXPL`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_DEVICE_LAST_EXPL` AS SELECT 
 1 AS `DEVICE_INSTANCE_KEY`,
 1 AS `LAST_EXPLANT_TS`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_DEVICE_MOST_RECENT_ME`
--

DROP TABLE IF EXISTS `V_DEVICE_MOST_RECENT_ME`;
/*!50001 DROP VIEW IF EXISTS `V_DEVICE_MOST_RECENT_ME`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_DEVICE_MOST_RECENT_ME` AS SELECT 
 1 AS `DEVICE_INSTANCE_KEY`,
 1 AS `MOST_RECENT_MEDL_EVNT_KEY`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_DEVICE_PROD_SET`
--

DROP TABLE IF EXISTS `V_DEVICE_PROD_SET`;
/*!50001 DROP VIEW IF EXISTS `V_DEVICE_PROD_SET`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_DEVICE_PROD_SET` AS SELECT 
 1 AS `MATL_KEY`,
 1 AS `REL_MATL_KEY`,
 1 AS `MATL_NUM`,
 1 AS `MATL_DESC`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_DEVICE_PROD_TYP`
--

DROP TABLE IF EXISTS `V_DEVICE_PROD_TYP`;
/*!50001 DROP VIEW IF EXISTS `V_DEVICE_PROD_TYP`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_DEVICE_PROD_TYP` AS SELECT 
 1 AS `MATL_KEY`,
 1 AS `REL_MATL_KEY`,
 1 AS `MATL_NUM`,
 1 AS `MATL_DESC`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_DEVICE_REGIST`
--

DROP TABLE IF EXISTS `V_DEVICE_REGIST`;
/*!50001 DROP VIEW IF EXISTS `V_DEVICE_REGIST`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_DEVICE_REGIST` AS SELECT 
 1 AS `deviceRegistrationKey`,
 1 AS `deviceRegistrationSourceName`,
 1 AS `deviceRegistrationSourceID`,
 1 AS `deviceKey`,
 1 AS `patientKey`,
 1 AS `deviceRegistrationRecordTypeCode`,
 1 AS `deviceRegistrationRecordTypeDesc`,
 1 AS `pdeviceRegistrationRecordSubtypeCode`,
 1 AS `deviceRegistrationRecordSubtypeDesc`,
 1 AS `deviceRegistrationRecordStatusCode`,
 1 AS `deviceRegistrationRecordStatusDesc`,
 1 AS `followupHCPKey`,
 1 AS `followupOrgKey`,
 1 AS `deviceDispositionCode`,
 1 AS `deviceDispositionDesc`,
 1 AS `deviceRegistrationSourceCreateUserValue`,
 1 AS `deviceRegistrationSourceChangeUserValue`,
 1 AS `deviceRegistrationSourceChangeProcessValue`,
 1 AS `deviceRegistrationSourceChangeReasonValue`,
 1 AS `deviceRegistrationSourceCreateTimestamp`,
 1 AS `deviceRegistrationSourceUpdateTimestamp`,
 1 AS `deviceRegistrationCreateTimestamp`,
 1 AS `deviceRegistrationCreateProcessValue`,
 1 AS `deviceRegistrationUpdateTimestamp`,
 1 AS `deviceRegistrationUpdateProcessValue`,
 1 AS `deviceRegistrationDeleteFlag`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_EDS_COLUMNS`
--

DROP TABLE IF EXISTS `V_EDS_COLUMNS`;
/*!50001 DROP VIEW IF EXISTS `V_EDS_COLUMNS`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_EDS_COLUMNS` AS SELECT 
 1 AS `TABLE_CATALOG`,
 1 AS `TABLE_SCHEMA`,
 1 AS `TABLE_NAME`,
 1 AS `COLUMN_NAME`,
 1 AS `ORDINAL_POSITION`,
 1 AS `COLUMN_DEFAULT`,
 1 AS `IS_NULLABLE`,
 1 AS `DATA_TYPE`,
 1 AS `CHARACTER_MAXIMUM_LENGTH`,
 1 AS `CHARACTER_OCTET_LENGTH`,
 1 AS `NUMERIC_PRECISION`,
 1 AS `NUMERIC_SCALE`,
 1 AS `DATETIME_PRECISION`,
 1 AS `CHARACTER_SET_NAME`,
 1 AS `COLLATION_NAME`,
 1 AS `COLUMN_TYPE`,
 1 AS `COLUMN_KEY`,
 1 AS `EXTRA`,
 1 AS `PRIVILEGES`,
 1 AS `COLUMN_COMMENT`,
 1 AS `GENERATION_EXPRESSION`,
 1 AS `SRS_ID`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_EDS_TABLES`
--

DROP TABLE IF EXISTS `V_EDS_TABLES`;
/*!50001 DROP VIEW IF EXISTS `V_EDS_TABLES`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_EDS_TABLES` AS SELECT 
 1 AS `TABLE_CATALOG`,
 1 AS `TABLE_SCHEMA`,
 1 AS `TABLE_NAME`,
 1 AS `TABLE_COMMENT`,
 1 AS `TABLE_ROWS`,
 1 AS `UPDATE_TIME`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_EMPL`
--

DROP TABLE IF EXISTS `V_EMPL`;
/*!50001 DROP VIEW IF EXISTS `V_EMPL`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_EMPL` AS SELECT 
 1 AS `personKey`,
 1 AS `orgKey`,
 1 AS `employeeSourceName`,
 1 AS `employeeSourceID`,
 1 AS `employeeRecordTypeCode`,
 1 AS `employeeRecordTypeDesc`,
 1 AS `employeeRecordSubtypeCode`,
 1 AS `employeeRecordSubtypeDesc`,
 1 AS `employeeRecordStatusCode`,
 1 AS `employeeRecordStatusDesc`,
 1 AS `employeeFirstName`,
 1 AS `employeeMiddleName`,
 1 AS `employeeLastName`,
 1 AS `employeePreferredName`,
 1 AS `employeeTitle`,
 1 AS `employeeEmployerOrgShortName`,
 1 AS `employeeEmployerOrgLongName`,
 1 AS `employeeBirthDate`,
 1 AS `employeeGenderCode`,
 1 AS `employeeGenderDesc`,
 1 AS `employeeOtherGenderValue`,
 1 AS `employeeLanguageCode`,
 1 AS `employeeLanguageDesc`,
 1 AS `empStartDate`,
 1 AS `empEndDate`,
 1 AS `employeeSourceCreateUserValue`,
 1 AS `employeeSourceChangeUserValue`,
 1 AS `employeeSourceChangeProcessValue`,
 1 AS `employeeSourceChangeReasonValue`,
 1 AS `employeeSourceCreateTimestamp`,
 1 AS `employeeSourceUpdateTimestamp`,
 1 AS `employeeCreateTimestamp`,
 1 AS `employeeCreateProcessValue`,
 1 AS `employeeUpdateTimestamp`,
 1 AS `employeeUpdateProcessValue`,
 1 AS `employeeDeleteFlag`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_HCO_FCLTY`
--

DROP TABLE IF EXISTS `V_HCO_FCLTY`;
/*!50001 DROP VIEW IF EXISTS `V_HCO_FCLTY`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_HCO_FCLTY` AS SELECT 
 1 AS `hcoFacilityKey`,
 1 AS `facilitySourceName`,
 1 AS `facilitySourceID`,
 1 AS `orgKey`,
 1 AS `placeKey`,
 1 AS `customerAccountKey`,
 1 AS `facilityRecordTypeCode`,
 1 AS `facilityRecordTypeDesc`,
 1 AS `facilityRecordSubtypeCode`,
 1 AS `facilityRecordSubtypeDesc`,
 1 AS `facilityRecordStatusCode`,
 1 AS `facilityRecordStatusDesc`,
 1 AS `facilityName`,
 1 AS `facilityPreferredName`,
 1 AS `facilityCustomerAccountNum`,
 1 AS `facilityLanguageCode`,
 1 AS `facilityLanguageDesc`,
 1 AS `facilityPreferredAddressTypeCode`,
 1 AS `facilityPreferredAddressTypeDesc`,
 1 AS `facilityComment`,
 1 AS `facilityStartDate`,
 1 AS `facilityEndDate`,
 1 AS `facilitySourceCreateUserValue`,
 1 AS `facilitySourceChangeUserValue`,
 1 AS `facilitySourceChangeProcessValue`,
 1 AS `facilitySourceChangeReasonValue`,
 1 AS `facilitySourceCreateTimestamp`,
 1 AS `facilitySourceUpdateTimestamp`,
 1 AS `facilityCreateTimestamp`,
 1 AS `facilityCreateProcessValue`,
 1 AS `facilityUpdateTimestamp`,
 1 AS `facilityUpdateProcessValue`,
 1 AS `facilityDeleteFlag`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_HCO_FCLTY_POSTAL_ADDR`
--

DROP TABLE IF EXISTS `V_HCO_FCLTY_POSTAL_ADDR`;
/*!50001 DROP VIEW IF EXISTS `V_HCO_FCLTY_POSTAL_ADDR`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_HCO_FCLTY_POSTAL_ADDR` AS SELECT 
 1 AS `hcoFacilityKey`,
 1 AS `hcoFacilitySourceName`,
 1 AS `hcoFacilitySourceID`,
 1 AS `hcoFacilityPostalAddressRecordStatusCode`,
 1 AS `hcoFacilityPostalAddressRecordStatusDesc`,
 1 AS `postalAddressRecordStatusCode`,
 1 AS `postalAddressRecordStatusDesc`,
 1 AS `postalAddressTypeCode`,
 1 AS `postalAddressTypeDesc`,
 1 AS `hcoFacilityPostalAddressLine1Val`,
 1 AS `hcoFacilityPostalAddressLine2Val`,
 1 AS `hcoFacilityPostalAddressLine3Val`,
 1 AS `hcoFacilityPostalAddressLine4Val`,
 1 AS `hcoFacilityPostalAddressLine5Val`,
 1 AS `hcoFacilityPostalAddressAttentionLine`,
 1 AS `hcoFacilityPostalAddressGeocodeVal`,
 1 AS `hcoFacilityPostalAddressLatitude`,
 1 AS `hcoFacilityPostalAddressLongitude`,
 1 AS `hcoFacilityPostalAddressAltitude`,
 1 AS `hcoFacilityPostalAddressCountyName`,
 1 AS `hcoFacilityPostalAddressCityName`,
 1 AS `hcoFacilityPostalAddressDistrictName`,
 1 AS `hcoFacilityPostalAddressNeighborhoodName`,
 1 AS `hcoFacilityPostalAddressPostalCode`,
 1 AS `hcoFacilityPostalAddressPriorityVal`,
 1 AS `postalAddressCountryCode`,
 1 AS `postalAddressCountryName`,
 1 AS `postalAddressRegionCode`,
 1 AS `postalAddressRegionName`,
 1 AS `postalAddressTimezoneCode`,
 1 AS `postalAddressTimezoneName`,
 1 AS `postalAddressTimezoneText`,
 1 AS `hcoFacilityPostalAddressUsageCode`,
 1 AS `hcoFacilityPostalAddressUsageDesc`,
 1 AS `hcoFacilityPostalAddressPreferredIndicator`,
 1 AS `hcoFacilityPostalAddressAcceptMailIndicator`,
 1 AS `hcoFacilityPostalAddressAcceptPackageIndicator`,
 1 AS `hcoFacilityPostalAddressValidatedIndicator`,
 1 AS `hcoFacilityPostalAddressValidationReasonCode`,
 1 AS `hcoFacilityPostalAddressValidationReasonDesc`,
 1 AS `hcoFacilityPostalAddressLanguageCode`,
 1 AS `hcoFacilityPostalAddressLanguageDesc`,
 1 AS `hcoFacilityPostalAddressStartDate`,
 1 AS `hcoFacilityPostalAddressEndDate`,
 1 AS `hcoFacilityPostalAddressSourceCreateUserValue`,
 1 AS `hcoFacilityPostalAddressSourceChangeUserValue`,
 1 AS `hcoFacilityPostalAddressSourceChangeProcessValue`,
 1 AS `hcoFacilityPostalAddressSourceChangeReasonValue`,
 1 AS `hcoFacilityPostalAddressSourceCreateTimestamp`,
 1 AS `hcoFacilityPostalAddressSourceUpdateTimestamp`,
 1 AS `hcoFacilityPostalAddressCreateTimestamp`,
 1 AS `hcoFacilityPostalAddressCreateProcessValue`,
 1 AS `hcoFacilityPostalAddressUpdateTimestamp`,
 1 AS `hcoFacilityPostalAddressUpdateProcessValue`,
 1 AS `hcoFacilityPostalAddressDeleteFlag`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_HCO_FCLTY_VIRTUAL_ADDR`
--

DROP TABLE IF EXISTS `V_HCO_FCLTY_VIRTUAL_ADDR`;
/*!50001 DROP VIEW IF EXISTS `V_HCO_FCLTY_VIRTUAL_ADDR`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_HCO_FCLTY_VIRTUAL_ADDR` AS SELECT 
 1 AS `hcoFacilityKey`,
 1 AS `hcoFacilitySourceName`,
 1 AS `hcoFacilitySourceID`,
 1 AS `hcoFacilityVirtualAddressRecordStatusCode`,
 1 AS `hcoFacilityVirtualAddressRecordStatusDesc`,
 1 AS `virtualAddressRecordStatusCode`,
 1 AS `virtualAddressRecordStatusDesc`,
 1 AS `virtualAddressLandLinePostalAddressKey`,
 1 AS `virtualAddressTypeCode`,
 1 AS `virtualAddressTypeDesc`,
 1 AS `hcoFacilityVirtualAddressVal`,
 1 AS `hcoFacilityVirtualAddressExtendedVal`,
 1 AS `hcoFacilityVirtualAddressPriorityVal`,
 1 AS `virtualAddressCountryCode`,
 1 AS `virtualAddressCountryName`,
 1 AS `hcoFacilityVirtualAddressUsageCode`,
 1 AS `hcoFacilityVirtualAddressUsageDesc`,
 1 AS `hcoFacilityVirtualAddressPreferredIndicator`,
 1 AS `hcoFacilityVirtualAddressAcceptsTextMessageIndicator`,
 1 AS `hcoFacilityVirtualAddressAcceptsVoicemailMessageIndicator`,
 1 AS `hcoFacilityVirtualAddressValidatedIndicator`,
 1 AS `hcoFacilityVirtualAddressStartDate`,
 1 AS `hcoFacilityVirtualAddressEndDate`,
 1 AS `hcoFacilityVirtualAddressSourceCreateUserValue`,
 1 AS `hcoFacilityVirtualAddressSourceChangeUserValue`,
 1 AS `hcoFacilityVirtualAddressSourceChangeProcessValue`,
 1 AS `hcoFacilityVirtualAddressSourceChangeReasonValue`,
 1 AS `hcoFacilityVirtualAddressSourceCreateTimestamp`,
 1 AS `hcoFacilityVirtualAddressSourceUpdateTimestamp`,
 1 AS `hcoFacilityVirtualAddressCreateTimestamp`,
 1 AS `hcoFacilityVirtualAddressCreateProcessValue`,
 1 AS `hcoFacilityVirtualAddressUpdateTimestamp`,
 1 AS `hcoFacilityVirtualAddressUpdateProcessValue`,
 1 AS `hcoFacilityVirtualAddressDeleteFlag`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_HCO_SPCLTY`
--

DROP TABLE IF EXISTS `V_HCO_SPCLTY`;
/*!50001 DROP VIEW IF EXISTS `V_HCO_SPCLTY`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_HCO_SPCLTY` AS SELECT 
 1 AS `orgKey`,
 1 AS `hcoSpecialtySourceName`,
 1 AS `hcoSpecialtySourceID`,
 1 AS `hcoSpecialtyRecordStatusCode`,
 1 AS `hcoSpecialtyRecordStatusDesc`,
 1 AS `hcoSpecialtyCode`,
 1 AS `hcoSpecialtyDesc`,
 1 AS `hcoSpecialtyPriorityValue`,
 1 AS `hcoSpecialtySourceCreateUserValue`,
 1 AS `hcoSpecialtySourceChangeUserValue`,
 1 AS `hcoSpecialtySourceChangeProcessValue`,
 1 AS `hcoSpecialtySourceChangeReasonValue`,
 1 AS `hcoSpecialtySourceCreateTimestamp`,
 1 AS `hcoSpecialtySourceUpdateTimestamp`,
 1 AS `hcoSpecialtyCreateTimestamp`,
 1 AS `hcoSpecialtyCreateProcessValue`,
 1 AS `hcoSpecialtyUpdateTimestamp`,
 1 AS `hcoSpecialtyUpdateProcessValue`,
 1 AS `hcoSpecialtyDeleteFlag`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_HCP`
--

DROP TABLE IF EXISTS `V_HCP`;
/*!50001 DROP VIEW IF EXISTS `V_HCP`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_HCP` AS SELECT 
 1 AS `hcpKey`,
 1 AS `hcpSourceName`,
 1 AS `hcpSourceID`,
 1 AS `personKey`,
 1 AS `orgKey`,
 1 AS `hcpRecordTypeCode`,
 1 AS `hcpRecordTypeDesc`,
 1 AS `hcpRecordSubtypeCode`,
 1 AS `hcpRecordSubtypeDesc`,
 1 AS `hcpRecordStatusCode`,
 1 AS `hcpRecordStatusDesc`,
 1 AS `hcpRecordStatusReasonCode`,
 1 AS `hcpRecordStatusReasonDesc`,
 1 AS `hcpFirstName`,
 1 AS `hcpMiddleName`,
 1 AS `hcpLastName`,
 1 AS `hcpPreferredName`,
 1 AS `personNamePrefix`,
 1 AS `personNameSuffix`,
 1 AS `personNameProfessionalSuffix`,
 1 AS `hcpNoProceduresIndicator`,
 1 AS `hcpNoFollowupIndicator`,
 1 AS `hcpPrimaryLanguageCode`,
 1 AS `hcpPrimaryLanguageDesc`,
 1 AS `hcpSecondaryLanguageCode`,
 1 AS `hcpSecondaryLanguageDesc`,
 1 AS `hcpPreferredAddressTypeCode`,
 1 AS `hcpPreferredAddressTypeDesc`,
 1 AS `hcpOriginatorCode`,
 1 AS `hcpOriginatorDesc`,
 1 AS `hcpOriginatingNationShortName`,
 1 AS `hcpOriginatingNationLongName`,
 1 AS `hcpComment`,
 1 AS `hcpStartDate`,
 1 AS `hcpEndDate`,
 1 AS `hcpSourceCreateUserValue`,
 1 AS `hcpSourceChangeUserValue`,
 1 AS `hcpSourceChangeProcessValue`,
 1 AS `hcpSourceChangeReasonValue`,
 1 AS `hcpSourceCreateTimestamp`,
 1 AS `hcpSourceUpdateTimestamp`,
 1 AS `hcpCreateTimestamp`,
 1 AS `hcpCreateProcessValue`,
 1 AS `hcpUpdateTimestamp`,
 1 AS `hcpUpdateProcessValue`,
 1 AS `hcpDeleteFlag`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_HCP_ALT_ID`
--

DROP TABLE IF EXISTS `V_HCP_ALT_ID`;
/*!50001 DROP VIEW IF EXISTS `V_HCP_ALT_ID`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_HCP_ALT_ID` AS SELECT 
 1 AS `hcpKey`,
 1 AS `hcpAlternateIDSourceName`,
 1 AS `hcpAlternateIDSourceID`,
 1 AS `hcpAlternateIDRecordStatusCode`,
 1 AS `hcpAlternateIDRecordStatusDesc`,
 1 AS `hcpAlternateIDType`,
 1 AS `hcpAlternateIDTypeDesc`,
 1 AS `hcpAlternateIDValue`,
 1 AS `hcpAlternateIDoriginatingOrgKey`,
 1 AS `hcpAlternateIDOriginatingOrgShortName`,
 1 AS `hcpAlternateIDOriginatingOrgLongName`,
 1 AS `hcpAlternateIDSourceCreateUserValue`,
 1 AS `hcpAlternateIDSourceChangeUserValue`,
 1 AS `hcpAlternateIDSourceChangeProcessValue`,
 1 AS `hcpAlternateIDSourceChangeReasonValue`,
 1 AS `hcpAlternateIDSourceCreateTimestamp`,
 1 AS `hcpAlternateIDSourceUpdateTimestamp`,
 1 AS `hcpAlternateIDCreateTimestamp`,
 1 AS `hcpAlternateIDCreateProcessValue`,
 1 AS `hcpAlternateIDUpdateTimestamp`,
 1 AS `hcpAlternateIDUpdateProcessValue`,
 1 AS `hcpAlternateIDDeleteFlag`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_HCP_POSTAL_ADDR`
--

DROP TABLE IF EXISTS `V_HCP_POSTAL_ADDR`;
/*!50001 DROP VIEW IF EXISTS `V_HCP_POSTAL_ADDR`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_HCP_POSTAL_ADDR` AS SELECT 
 1 AS `hcpKey`,
 1 AS `hcpPostalAddressSourceName`,
 1 AS `hcpPostalAddressSourceID`,
 1 AS `hcpPostalAddressRecordStatusCode`,
 1 AS `hcpPostalAddressRecordStatusDesc`,
 1 AS `postalAddressRecordStatusCode`,
 1 AS `postalAddressRecordStatusDesc`,
 1 AS `postalAddressTypeCode`,
 1 AS `postalAddressTypeDesc`,
 1 AS `hcpPostalAddressLine1Val`,
 1 AS `hcpPostalAddressLine2Val`,
 1 AS `hcpPostalAddressLine3Val`,
 1 AS `hcpPostalAddressLine4Val`,
 1 AS `hcpPostalAddressLine5Val`,
 1 AS `hcpPostalAddressAttentionLine`,
 1 AS `phcpPostalAddressGeocodeVal`,
 1 AS `hcpPostalAddressLatitude`,
 1 AS `hcpPostalAddressLongitude`,
 1 AS `hcpPostalAddressAltitude`,
 1 AS `hcpPostalAddressCountyName`,
 1 AS `hcpPostalAddressCityName`,
 1 AS `hcpPostalAddressDistrictName`,
 1 AS `hcpPostalAddressNeighborhoodName`,
 1 AS `hcpPostalAddressPostalCode`,
 1 AS `hcpPostalAddressPriorityVal`,
 1 AS `postalAddressCountryCode`,
 1 AS `postalAddressCountryName`,
 1 AS `postalAddressRegionCode`,
 1 AS `postalAddressRegionName`,
 1 AS `postalAddressTimezoneCode`,
 1 AS `postalAddressTimezoneName`,
 1 AS `postalAddressTimezoneText`,
 1 AS `hcpPostalAddressUsageCode`,
 1 AS `hcpPostalAddressUsageDesc`,
 1 AS `hcpPostalAddressPreferredIndicator`,
 1 AS `hcpPostalAddressAcceptMailIndicator`,
 1 AS `hcpPostalAddressAcceptPackageIndicator`,
 1 AS `hcpPostalAddressValidatedIndicator`,
 1 AS `hcpPostalAddressValidationReasonCode`,
 1 AS `hcpPostalAddressValidationReasonDesc`,
 1 AS `hcpPostalAddressLanguageCode`,
 1 AS `hcpPostalAddressLanguageDesc`,
 1 AS `hcpPostalAddressStartDate`,
 1 AS `hcpPostalAddressEndDate`,
 1 AS `hcpPostalAddressSourceCreateUserValue`,
 1 AS `hcpPostalAddressSourceChangeUserValue`,
 1 AS `hcpPostalAddressSourceChangeProcessValue`,
 1 AS `hcpPostalAddressSourceChangeReasonValue`,
 1 AS `hcpPostalAddressSourceCreateTimestamp`,
 1 AS `hcpPostalAddressSourceUpdateTimestamp`,
 1 AS `hcpPostalAddressCreateTimestamp`,
 1 AS `hcpPostalAddressCreateProcessValue`,
 1 AS `hcpPostalAddressUpdateTimestamp`,
 1 AS `hcpPostalAddressUpdateProcessValue`,
 1 AS `hcpPostalAddressDeleteFlag`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_HCP_SPCLTY`
--

DROP TABLE IF EXISTS `V_HCP_SPCLTY`;
/*!50001 DROP VIEW IF EXISTS `V_HCP_SPCLTY`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_HCP_SPCLTY` AS SELECT 
 1 AS `hcpKey`,
 1 AS `hcpSpecialtySourceName`,
 1 AS `hcpSpecialtySourceID`,
 1 AS `hcpSpecialtyRecordStatusCode`,
 1 AS `hcpSpecialtyRecordStatusDesc`,
 1 AS `hcpSpecialtyCode`,
 1 AS `hcpSpecialtyDesc`,
 1 AS `hcpSpecialtyPriorityValue`,
 1 AS `hcpSpecialtySourceCreateUserValue`,
 1 AS `hcpSpecialtySourceChangeUserValue`,
 1 AS `hcpSpecialtySourceChangeProcessValue`,
 1 AS `hcpSpecialtySourceChangeReasonValue`,
 1 AS `hcpSpecialtySourceCreateTimestamp`,
 1 AS `hcpSpecialtySourceUpdateTimestamp`,
 1 AS `hcpSpecialtyCreateTimestamp`,
 1 AS `hcpSpecialtyCreateProcessValue`,
 1 AS `hcpSpecialtyUpdateTimestamp`,
 1 AS `hcpSpecialtyUpdateProcessValue`,
 1 AS `hcpSpecialtyDeleteFlag`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_HCP_VIRTUAL_ADDR`
--

DROP TABLE IF EXISTS `V_HCP_VIRTUAL_ADDR`;
/*!50001 DROP VIEW IF EXISTS `V_HCP_VIRTUAL_ADDR`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_HCP_VIRTUAL_ADDR` AS SELECT 
 1 AS `hcpKey`,
 1 AS `hcpVirtualAddressSourceName`,
 1 AS `hcpVirtualAddressSourceID`,
 1 AS `hcpVirtualAddressRecordStatusCode`,
 1 AS `hcpVirtualAddressRecordStatusDesc`,
 1 AS `virtualAddressRecordStatusCode`,
 1 AS `virtualAddressRecordStatusDesc`,
 1 AS `virtualAddressLandLinePostalAddressKey`,
 1 AS `virtualAddressTypeCode`,
 1 AS `virtualAddressTypeDesc`,
 1 AS `hcpVirtualAddressVal`,
 1 AS `hcpVirtualAddressExtendedVal`,
 1 AS `hcpVirtualAddressPriorityVal`,
 1 AS `virtualAddressCountryCode`,
 1 AS `virtualAddressCountryName`,
 1 AS `hcpVirtualAddressUsageCode`,
 1 AS `hcpVirtualAddressUsageDesc`,
 1 AS `hcpVirtualAddressPreferredIndicator`,
 1 AS `hcpVirtualAddressAcceptsTextMessageIndicator`,
 1 AS `hcpVirtualAddressAcceptsVoicemailMessageIndicator`,
 1 AS `hcpVirtualAddressValidatedIndicator`,
 1 AS `hcpVirtualAddressStartDate`,
 1 AS `hcpVirtualAddressEndDate`,
 1 AS `hcpVirtualAddressSourceCreateUserValue`,
 1 AS `hcpVirtualAddressSourceChangeUserValue`,
 1 AS `hcpVirtualAddressSourceChangeProcessValue`,
 1 AS `hcpVirtualAddressSourceChangeReasonValue`,
 1 AS `hcpVirtualAddressSourceCreateTimestamp`,
 1 AS `hcpVirtualAddressSourceUpdateTimestamp`,
 1 AS `hcpVirtualAddressCreateTimestamp`,
 1 AS `hcpVirtualAddressCreateProcessValue`,
 1 AS `hcpVirtualAddressUpdateTimestamp`,
 1 AS `hcpVirtualAddressUpdateProcessValue`,
 1 AS `hcpVirtualAddressDeleteFlag`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_MATL_CFN`
--

DROP TABLE IF EXISTS `V_MATL_CFN`;
/*!50001 DROP VIEW IF EXISTS `V_MATL_CFN`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_MATL_CFN` AS SELECT 
 1 AS `MATL_KEY`,
 1 AS `REL_MATL_KEY`,
 1 AS `MATL_NUM`,
 1 AS `MATL_DESC`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_MATL_MPG`
--

DROP TABLE IF EXISTS `V_MATL_MPG`;
/*!50001 DROP VIEW IF EXISTS `V_MATL_MPG`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_MATL_MPG` AS SELECT 
 1 AS `MATL_KEY`,
 1 AS `REL_MATL_KEY`,
 1 AS `MATL_NUM`,
 1 AS `MATL_DESC`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_MATL_PH1`
--

DROP TABLE IF EXISTS `V_MATL_PH1`;
/*!50001 DROP VIEW IF EXISTS `V_MATL_PH1`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_MATL_PH1` AS SELECT 
 1 AS `MATL_KEY`,
 1 AS `REL_MATL_KEY`,
 1 AS `MATL_NUM`,
 1 AS `MATL_DESC`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_MATL_PH2`
--

DROP TABLE IF EXISTS `V_MATL_PH2`;
/*!50001 DROP VIEW IF EXISTS `V_MATL_PH2`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_MATL_PH2` AS SELECT 
 1 AS `MATL_KEY`,
 1 AS `REL_MATL_KEY`,
 1 AS `MATL_NUM`,
 1 AS `MATL_DESC`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_MATL_PH3`
--

DROP TABLE IF EXISTS `V_MATL_PH3`;
/*!50001 DROP VIEW IF EXISTS `V_MATL_PH3`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_MATL_PH3` AS SELECT 
 1 AS `MATL_KEY`,
 1 AS `REL_MATL_KEY`,
 1 AS `MATL_NUM`,
 1 AS `MATL_DESC`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_MATL_PH4`
--

DROP TABLE IF EXISTS `V_MATL_PH4`;
/*!50001 DROP VIEW IF EXISTS `V_MATL_PH4`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_MATL_PH4` AS SELECT 
 1 AS `MATL_KEY`,
 1 AS `REL_MATL_KEY`,
 1 AS `MATL_NUM`,
 1 AS `MATL_DESC`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_MATL_PH5`
--

DROP TABLE IF EXISTS `V_MATL_PH5`;
/*!50001 DROP VIEW IF EXISTS `V_MATL_PH5`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_MATL_PH5` AS SELECT 
 1 AS `MATL_KEY`,
 1 AS `REL_MATL_KEY`,
 1 AS `MATL_NUM`,
 1 AS `MATL_DESC`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_MATL_PH6`
--

DROP TABLE IF EXISTS `V_MATL_PH6`;
/*!50001 DROP VIEW IF EXISTS `V_MATL_PH6`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_MATL_PH6` AS SELECT 
 1 AS `MATL_KEY`,
 1 AS `REL_MATL_KEY`,
 1 AS `MATL_NUM`,
 1 AS `MATL_DESC`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_MATL_PROD_SET`
--

DROP TABLE IF EXISTS `V_MATL_PROD_SET`;
/*!50001 DROP VIEW IF EXISTS `V_MATL_PROD_SET`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_MATL_PROD_SET` AS SELECT 
 1 AS `MATL_KEY`,
 1 AS `REL_MATL_KEY`,
 1 AS `MATL_NUM`,
 1 AS `MATL_DESC`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_MATL_PROD_TYP`
--

DROP TABLE IF EXISTS `V_MATL_PROD_TYP`;
/*!50001 DROP VIEW IF EXISTS `V_MATL_PROD_TYP`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_MATL_PROD_TYP` AS SELECT 
 1 AS `MATL_KEY`,
 1 AS `REL_MATL_KEY`,
 1 AS `MATL_NUM`,
 1 AS `MATL_DESC`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_ORG`
--

DROP TABLE IF EXISTS `V_ORG`;
/*!50001 DROP VIEW IF EXISTS `V_ORG`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_ORG` AS SELECT 
 1 AS `orgKey`,
 1 AS `orgSourceName`,
 1 AS `orgSourceID`,
 1 AS `orgRecordTypeCode`,
 1 AS `orgRecordTypeDesc`,
 1 AS `orgRecordSubtypeCode`,
 1 AS `orgRecordSubtypeDesc`,
 1 AS `orgRecordStatusCode`,
 1 AS `orgRecordStatusDesc`,
 1 AS `orgRecordStatusReasonCode`,
 1 AS `orgRecordStatusReasonDesc`,
 1 AS `orgShortName`,
 1 AS `orgLongName`,
 1 AS `orgAlternateName`,
 1 AS `orgPreferredName`,
 1 AS `orgOriginatingNationShortName`,
 1 AS `orgOriginatingNationLongName`,
 1 AS `orgNoProceduresIndicator`,
 1 AS `orgNoFollowupIndicator`,
 1 AS `orgLanguageCode`,
 1 AS `orgLanguageDesc`,
 1 AS `orgSourceCreateUserValue`,
 1 AS `orgSourceChangeUserValue`,
 1 AS `orgSourceChangeProcessValue`,
 1 AS `orgSourceChangeReasonValue`,
 1 AS `orgSourceCreateTimestamp`,
 1 AS `orgSourceUpdateTimestamp`,
 1 AS `orgCreateTimestamp`,
 1 AS `orgCreateProcessValue`,
 1 AS `orgUpdateTimestamp`,
 1 AS `orgUpdateProcessValue`,
 1 AS `orgDeleteFlag`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_ORG_ALT_ID`
--

DROP TABLE IF EXISTS `V_ORG_ALT_ID`;
/*!50001 DROP VIEW IF EXISTS `V_ORG_ALT_ID`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_ORG_ALT_ID` AS SELECT 
 1 AS `orgKey`,
 1 AS `orgAlternateIDSourceName`,
 1 AS `orgAlternateIDSourceID`,
 1 AS `orgAlternateIDRecordStatusCode`,
 1 AS `orgAlternateIDRecordStatusDesc`,
 1 AS `orgAlternateIDType`,
 1 AS `orgAlternateIDTypeDesc`,
 1 AS `orgAlternateIDValue`,
 1 AS `orgRefusedAlternateIDIndicator`,
 1 AS `orgAlternateIDoriginatingOrgKey`,
 1 AS `orgAlternateIDOriginatingOrgShortName`,
 1 AS `orgAlternateIDOriginatingOrgLongName`,
 1 AS `orgAlternateIDSourceCreateUserValue`,
 1 AS `orgAlternateIDSourceChangeUserValue`,
 1 AS `orgAlternateIDSourceChangeProcessValue`,
 1 AS `orgAlternateIDSourceChangeReasonValue`,
 1 AS `orgAlternateIDSourceCreateTimestamp`,
 1 AS `orgAlternateIDSourceUpdateTimestamp`,
 1 AS `orgAlternateIDCreateTimestamp`,
 1 AS `orgAlternateIDCreateProcessValue`,
 1 AS `orgAlternateIDUpdateTimestamp`,
 1 AS `orgAlternateIDUpdateProcessValue`,
 1 AS `orgAlternateIDDeleteFlag`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_PATIENT`
--

DROP TABLE IF EXISTS `V_PATIENT`;
/*!50001 DROP VIEW IF EXISTS `V_PATIENT`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_PATIENT` AS SELECT 
 1 AS `patientKey`,
 1 AS `patientSourceName`,
 1 AS `patientSourceID`,
 1 AS `personKey`,
 1 AS `orgKey`,
 1 AS `patientMDMStatusCode`,
 1 AS `patientMDMStatusDesc`,
 1 AS `patientRecordTypeCode`,
 1 AS `patientRecordTypeDesc`,
 1 AS `patientRecordSubtypeCode`,
 1 AS `patientRecordSubtypeDesc`,
 1 AS `patientRecordStatusCode`,
 1 AS `patientRecordStatusDesc`,
 1 AS `personFirstName`,
 1 AS `personMiddleName`,
 1 AS `personLastName`,
 1 AS `personPreferredName`,
 1 AS `personCaseExceptionFirstName`,
 1 AS `personCaseExceptionMiddleName`,
 1 AS `personCaseExceptionLastName`,
 1 AS `personCaseExceptionPreferredName`,
 1 AS `patientNamePrefix`,
 1 AS `patientNameSuffix`,
 1 AS `patientNameProfessionalSuffix`,
 1 AS `orgOriginatingNationCode`,
 1 AS `orgOriginatingNationShortName`,
 1 AS `orgOriginatingNationLongName`,
 1 AS `patientBirthDate`,
 1 AS `patientDeceasedDate`,
 1 AS `patientDeceasedIndicatorCode`,
 1 AS `patientDeceasedIndicatorDesc`,
 1 AS `patientGenderCode`,
 1 AS `patientGenderDesc`,
 1 AS `patientOtherGenderValue`,
 1 AS `patientLanguageCode`,
 1 AS `patientLanguageDesc`,
 1 AS `patientPreferredAddressTypeCode`,
 1 AS `patientPreferredAddressTypeDesc`,
 1 AS `patientConfidentialIndicator`,
 1 AS `patientConfidentialReasonCode`,
 1 AS `patientConfidentialReasonDesc`,
 1 AS `patientConfidentialQuestion`,
 1 AS `patientConfidentialAnswer`,
 1 AS `patientComment`,
 1 AS `patientSourceCreateUserValue`,
 1 AS `patientSourceChangeUserValue`,
 1 AS `patientSourceChangeProcessValue`,
 1 AS `patientSourceChangeReasonValue`,
 1 AS `patientSourceCreateTimestamp`,
 1 AS `patientSourceUpdateTimestamp`,
 1 AS `patientCreateTimestamp`,
 1 AS `patientCreateProcessValue`,
 1 AS `patientUpdateTimestamp`,
 1 AS `patientUpdateProcessValue`,
 1 AS `patientDeleteFlag`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_PATIENT_ALT_ID`
--

DROP TABLE IF EXISTS `V_PATIENT_ALT_ID`;
/*!50001 DROP VIEW IF EXISTS `V_PATIENT_ALT_ID`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_PATIENT_ALT_ID` AS SELECT 
 1 AS `patientKey`,
 1 AS `patientAlternateIDSourceName`,
 1 AS `patientAlternateIDSourceID`,
 1 AS `patientAlternateIDRecordStatusCode`,
 1 AS `patientAlternateIDRecordStatusDesc`,
 1 AS `patientAlternateIDType`,
 1 AS `patientAlternateIDTypeDesc`,
 1 AS `patientAlternateIDValue`,
 1 AS `patientAlternateIDRefusedIndicator`,
 1 AS `patientAlternateIDoriginatingOrgKey`,
 1 AS `patientAlternateIDOriginatingOrgShortName`,
 1 AS `patientAlternateIDOriginatingOrgLongName`,
 1 AS `patientAlternateIDSourceCreateUserValue`,
 1 AS `patientAlternateIDSourceChangeUserValue`,
 1 AS `patientAlternateIDSourceChangeProcessValue`,
 1 AS `patientAlternateIDSourceChangeReasonValue`,
 1 AS `patientAlternateIDSourceCreateTimestamp`,
 1 AS `patientAlternateIDSourceUpdateTimestamp`,
 1 AS `patientAlternateIDCreateTimestamp`,
 1 AS `patientAlternateIDCreateProcessValue`,
 1 AS `patientAlternateIDUpdateTimestamp`,
 1 AS `patientAlternateIDUpdateProcessValue`,
 1 AS `patientAlternateIDDeleteFlag`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_PATIENT_CONTACT`
--

DROP TABLE IF EXISTS `V_PATIENT_CONTACT`;
/*!50001 DROP VIEW IF EXISTS `V_PATIENT_CONTACT`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_PATIENT_CONTACT` AS SELECT 
 1 AS `patientKey`,
 1 AS `patientContactKey`,
 1 AS `patientContactSourceName`,
 1 AS `patientContactSourceID`,
 1 AS `personKey`,
 1 AS `patientContactRecordTypeCode`,
 1 AS `patientContactRecordTypeDesc`,
 1 AS `patientContactRecordSubtypeCode`,
 1 AS `patientContactRecordSubtypeDesc`,
 1 AS `patientContactRecordStatusCode`,
 1 AS `patientContactRecordStatusDesc`,
 1 AS `patientContactFirstName`,
 1 AS `patientContactMiddleName`,
 1 AS `patientContactLastName`,
 1 AS `patientContactPreferredName`,
 1 AS `patientContactNamePrefix`,
 1 AS `patientContactNameSuffix`,
 1 AS `patientContactNameProfessionalSuffix`,
 1 AS `patientContactAuthorizedIndicator`,
 1 AS `patientContactAuthorizedDate`,
 1 AS `patientLanguageCode`,
 1 AS `patientLanguageDesc`,
 1 AS `patientContactSourceCreateUserValue`,
 1 AS `patientContactSourceChangeUserValue`,
 1 AS `patientContactSourceChangeProcessValue`,
 1 AS `patientContactSourceChangeReasonValue`,
 1 AS `patientContactSourceCreateTimestamp`,
 1 AS `patientContactSourceUpdateTimestamp`,
 1 AS `patientContactCreateTimestamp`,
 1 AS `patientContactCreateProcessValue`,
 1 AS `patientContactUpdateTimestamp`,
 1 AS `patientContactUpdateProcessValue`,
 1 AS `patientContactDeleteFlag`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_PATIENT_FUNC`
--

DROP TABLE IF EXISTS `V_PATIENT_FUNC`;
/*!50001 DROP VIEW IF EXISTS `V_PATIENT_FUNC`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_PATIENT_FUNC` AS SELECT 
 1 AS `patientKey`,
 1 AS `pateintFunctionSourceName`,
 1 AS `patientFunctionSourceID`,
 1 AS `patientFunctionRecordStatusCode`,
 1 AS `patientFunctionRecordStatusDesc`,
 1 AS `patientFunctionCode`,
 1 AS `patientFunctionDesc`,
 1 AS `patientFunctionExceptionIndicator`,
 1 AS `patientFunctionExceptionDate`,
 1 AS `patientFunctionExceptionComment`,
 1 AS `patientFunctionSourceCreateUserValue`,
 1 AS `patientFunctionSourceChangeUserValue`,
 1 AS `patientFunctionSourceChangeProcessValue`,
 1 AS `patientFunctionSourceChangeReasonValue`,
 1 AS `patientFunctionSourceCreateTimestamp`,
 1 AS `patientFunctionSourceUpdateTimestamp`,
 1 AS `patientFunctionCreateTimestamp`,
 1 AS `patientFunctionCreateProcessValue`,
 1 AS `patientFunctionUpdateTimestamp`,
 1 AS `patientFunctionUpdateProcessValue`,
 1 AS `patientFunctionDeleteFlag`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_PATIENT_POSTAL_ADDR`
--

DROP TABLE IF EXISTS `V_PATIENT_POSTAL_ADDR`;
/*!50001 DROP VIEW IF EXISTS `V_PATIENT_POSTAL_ADDR`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_PATIENT_POSTAL_ADDR` AS SELECT 
 1 AS `patientKey`,
 1 AS `patientContactKey`,
 1 AS `patientPostalAddressSourceName`,
 1 AS `patientPostalAddressSourceID`,
 1 AS `patientPostalAddressRecordStatusCode`,
 1 AS `patientPostalAddressRecordStatusDesc`,
 1 AS `postalAddressRecordStatusCode`,
 1 AS `postalAddressRecordStatusDesc`,
 1 AS `postalAddressTypeCode`,
 1 AS `postalAddressTypeDesc`,
 1 AS `patientPostalAddressLine1Val`,
 1 AS `patientPostalAddressLine2Val`,
 1 AS `patientPostalAddressLine3Val`,
 1 AS `patientPostalAddressLine4Val`,
 1 AS `patientPostalAddressLine5Val`,
 1 AS `patientPostalAddressAttentionLine`,
 1 AS `patientPostalAddressGeocodeVal`,
 1 AS `patientPostalAddressLatitude`,
 1 AS `patientPostalAddressLongitude`,
 1 AS `patientPostalAddressAltitude`,
 1 AS `patientPostalAddressCountyName`,
 1 AS `patientPostalAddressCityName`,
 1 AS `patientPostalAddressDistrictName`,
 1 AS `patientPostalAddressNeighborhoodName`,
 1 AS `patientPostalAddressPostalCode`,
 1 AS `patientPostalAddressPriorityVal`,
 1 AS `postalAddressCountryCode`,
 1 AS `postalAddressCountryName`,
 1 AS `postalAddressRegionCode`,
 1 AS `postalAddressRegionName`,
 1 AS `postalAddressTimezoneCode`,
 1 AS `postalAddressTimezoneName`,
 1 AS `postalAddressTimezoneText`,
 1 AS `patientPostalAddressUsageCode`,
 1 AS `patientPostalAddressUsageDesc`,
 1 AS `patientPostalAddressPreferredIndicator`,
 1 AS `patientPostalAddressAcceptMailIndicator`,
 1 AS `patientPostalAddressAcceptPackageIndicator`,
 1 AS `patientPostalAddressValidatedIndicator`,
 1 AS `patientPostalAddressValidationReasonCode`,
 1 AS `patientPostalAddressValidationReasonDesc`,
 1 AS `patientPostalAddressLanguageCode`,
 1 AS `patientPostalAddressLanguageDesc`,
 1 AS `patientPostalAddressIDCardDisplayIndicator`,
 1 AS `patientPostalAddressValidationOverrideIndicator`,
 1 AS `patientPostalAddressSeasonStartMonthCode`,
 1 AS `patientPostalAddressSeasonStartMonthDesc`,
 1 AS `patientPostalAddressSeasonEndMonthCode`,
 1 AS `patientPostalAddressSeasonEndMonthDesc`,
 1 AS `patientPostalAddressChangeReasonCode`,
 1 AS `patientPostalAddressChangeReasonDesc`,
 1 AS `patientPostalAddressStartDate`,
 1 AS `patientPostalAddressEndDate`,
 1 AS `patientPostalAddressSourceCreateUserValue`,
 1 AS `patientPostalAddressSourceChangeUserValue`,
 1 AS `patientPostalAddressSourceChangeProcessValue`,
 1 AS `patientPostalAddressSourceChangeReasonValue`,
 1 AS `patientPostalAddressSourceCreateTimestamp`,
 1 AS `patientPostalAddressSourceUpdateTimestamp`,
 1 AS `patientPostalAddressCreateTimestamp`,
 1 AS `patientPostalAddressCreateProcessValue`,
 1 AS `patientPostalAddressUpdateTimestamp`,
 1 AS `patientPostalAddressUpdateProcessValue`,
 1 AS `patientPostalAddressDeleteFlag`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_PATIENT_VIRTUAL_ADDR`
--

DROP TABLE IF EXISTS `V_PATIENT_VIRTUAL_ADDR`;
/*!50001 DROP VIEW IF EXISTS `V_PATIENT_VIRTUAL_ADDR`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_PATIENT_VIRTUAL_ADDR` AS SELECT 
 1 AS `patientKey`,
 1 AS `patientContactKey`,
 1 AS `patientVirtualAddressSourceName`,
 1 AS `patientVirtualAddressSourceID`,
 1 AS `patientVirtualAddressRecordStatusCode`,
 1 AS `patientVirtualAddressRecordStatusDesc`,
 1 AS `virtualAddressRecordStatusCode`,
 1 AS `virtualAddressRecordStatusDesc`,
 1 AS `virtualAddressLandLinePostalAddressKey`,
 1 AS `virtualAddressTypeCode`,
 1 AS `virtualAddressTypeDesc`,
 1 AS `patientVirtualAddressVal`,
 1 AS `patientVirtualAddressExtendedVal`,
 1 AS `patientVirtualAddressPriorityVal`,
 1 AS `virtualAddressCountryCode`,
 1 AS `virtualAddressCountryName`,
 1 AS `patientVirtualAddressUsageCode`,
 1 AS `patientVirtualAddressUsageDesc`,
 1 AS `patientVirtualAddressPreferredIndicator`,
 1 AS `patientVirtualAddressAcceptsTextMessageIndicator`,
 1 AS `patientVirtualAddressAcceptsVoicemailMessageIndicator`,
 1 AS `patientVirtualAddressValidatedIndicator`,
 1 AS `patientVirtualAddressStartDate`,
 1 AS `patientVirtualAddressEndDate`,
 1 AS `patientVirtualAddressSourceCreateUserValue`,
 1 AS `patientVirtualAddressSourceChangeUserValue`,
 1 AS `patientVirtualAddressSourceChangeProcessValue`,
 1 AS `patientVirtualAddressSourceChangeReasonValue`,
 1 AS `patientVirtualAddressSourceCreateTimestamp`,
 1 AS `patientVirtualAddressSourceUpdateTimestamp`,
 1 AS `patientVirtualAddressCreateTimestamp`,
 1 AS `patientVirtualAddressCreateProcessValue`,
 1 AS `patientVirtualAddressUpdateTimestamp`,
 1 AS `patientVirtualAddressUpdateProcessValue`,
 1 AS `patientVirtualAddressDeleteFlag`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_PERS`
--

DROP TABLE IF EXISTS `V_PERS`;
/*!50001 DROP VIEW IF EXISTS `V_PERS`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_PERS` AS SELECT 
 1 AS `personKey`,
 1 AS `personSourceName`,
 1 AS `personSourceID`,
 1 AS `personRecordTypeCode`,
 1 AS `personRecordTypeDesc`,
 1 AS `personRecordSubtypeCode`,
 1 AS `personRecordSubtypeDesc`,
 1 AS `personRecordStatusCode`,
 1 AS `personRecordStatusDesc`,
 1 AS `personFirstName`,
 1 AS `personMiddleName`,
 1 AS `personLastName`,
 1 AS `personPreferredName`,
 1 AS `personCaseExceptionFirstName`,
 1 AS `personCaseExceptionMiddleName`,
 1 AS `personCaseExceptionLastName`,
 1 AS `personCaseExceptionPreferredName`,
 1 AS `personNamePrefix`,
 1 AS `personNameSuffix`,
 1 AS `personNameProfessionalSuffix`,
 1 AS `personBirthDate`,
 1 AS `personDeceasedDate`,
 1 AS `personDeceasedIndicator`,
 1 AS `personGenderCode`,
 1 AS `personGenderDesc`,
 1 AS `personOtherGenderValue`,
 1 AS `personLanguageCode`,
 1 AS `personLanguageDesc`,
 1 AS `personPreferredAddressTypeCode`,
 1 AS `personPreferredAddressTypeDesc`,
 1 AS `personSourceCreateUserValue`,
 1 AS `personSourceChangeUserValue`,
 1 AS `personSourceChangeProcessValue`,
 1 AS `personSourceChangeReasonValue`,
 1 AS `personSourceCreateTimestamp`,
 1 AS `personSourceUpdateTimestamp`,
 1 AS `personCreateTimestamp`,
 1 AS `personCreateProcessValue`,
 1 AS `personUpdateTimestamp`,
 1 AS `personUpdateProcessValue`,
 1 AS `personDeleteFlag`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_PERS_ALT_ID`
--

DROP TABLE IF EXISTS `V_PERS_ALT_ID`;
/*!50001 DROP VIEW IF EXISTS `V_PERS_ALT_ID`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_PERS_ALT_ID` AS SELECT 
 1 AS `personKey`,
 1 AS `personAlternateIDSourceName`,
 1 AS `personAlternateIDSourceID`,
 1 AS `personAlternateIDRecordStatusCode`,
 1 AS `personAlternateIDRecordStatusDesc`,
 1 AS `personAlternateIDType`,
 1 AS `personAlternateIDTypeDesc`,
 1 AS `personAlternateIDValue`,
 1 AS `personRefusedAlternateIDIndicator`,
 1 AS `personAlternateIDoriginatingOrgKey`,
 1 AS `personAlternateIDOriginatingOrgShortName`,
 1 AS `personAlternateIDOriginatingOrgLongName`,
 1 AS `personAlternateIDSourceCreateUserValue`,
 1 AS `personAlternateIDSourceChangeUserValue`,
 1 AS `personAlternateIDSourceChangeProcessValue`,
 1 AS `personAlternateIDSourceChangeReasonValue`,
 1 AS `personAlternateIDSourceCreateTimestamp`,
 1 AS `personAlternateIDSourceUpdateTimestamp`,
 1 AS `personAlternateIDCreateTimestamp`,
 1 AS `personAlternateIDCreateProcessValue`,
 1 AS `personAlternateIDUpdateTimestamp`,
 1 AS `personAlternateIDUpdateProcessValue`,
 1 AS `personAlternateIDDeleteFlag`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_PERS_DEGREE`
--

DROP TABLE IF EXISTS `V_PERS_DEGREE`;
/*!50001 DROP VIEW IF EXISTS `V_PERS_DEGREE`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_PERS_DEGREE` AS SELECT 
 1 AS `personKey`,
 1 AS `personSourceName`,
 1 AS `personSourceID`,
 1 AS `personDegreeRecordStatusCode`,
 1 AS `personDegreeRecordStatusDesc`,
 1 AS `personDegree`,
 1 AS `personDegreeDesc`,
 1 AS `personDegreeSourceCreateUserValue`,
 1 AS `personDegreeSourceChangeUserValue`,
 1 AS `personDegreeSourceChangeProcessValue`,
 1 AS `personDegreeSourceChangeReasonValue`,
 1 AS `personDegreeSourceCreateTimestamp`,
 1 AS `personDegreeSourceUpdateTimestamp`,
 1 AS `personDegreeCreateTimestamp`,
 1 AS `personDegreeCreateProcessValue`,
 1 AS `personDegreeUpdateTimestamp`,
 1 AS `personDegreeUpdateProcessValue`,
 1 AS `personDegreeDeleteFlag`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_PLACE`
--

DROP TABLE IF EXISTS `V_PLACE`;
/*!50001 DROP VIEW IF EXISTS `V_PLACE`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_PLACE` AS SELECT 
 1 AS `placeKey`,
 1 AS `placeSourceName`,
 1 AS `placeSourceID`,
 1 AS `placeRecordTypeCode`,
 1 AS `placeRecordTypeDesc`,
 1 AS `placeRecordSubtypeCode`,
 1 AS `pplaceRecordSubtypeDesc`,
 1 AS `placeRecordStatusCode`,
 1 AS `placeRecordStatusDesc`,
 1 AS `placeShortName`,
 1 AS `placeLongName`,
 1 AS `placeCentroidLatitude`,
 1 AS `placeCentroidLongitude`,
 1 AS `placeCentroidAltitude`,
 1 AS `placeMobileIndicator`,
 1 AS `placeShapeTypeCode`,
 1 AS `placeShapeTypeDesc`,
 1 AS `placeSourceCreateUserValue`,
 1 AS `placeSourceChangeUserValue`,
 1 AS `placeSourceChangeProcessValue`,
 1 AS `placeSourceChangeReasonValue`,
 1 AS `placeSourceCreateTimestamp`,
 1 AS `placeSourceUpdateTimestamp`,
 1 AS `placeCreateTimestamp`,
 1 AS `placeCreateProcessValue`,
 1 AS `placeUpdateTimestamp`,
 1 AS `placeUpdateProcessValue`,
 1 AS `placeDeleteFlag`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_PROC`
--

DROP TABLE IF EXISTS `V_PROC`;
/*!50001 DROP VIEW IF EXISTS `V_PROC`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_PROC` AS SELECT 
 1 AS `procedureKey`,
 1 AS `procedureSourceName`,
 1 AS `procedureSourceID`,
 1 AS `patientKey`,
 1 AS `hcoFacilityKey`,
 1 AS `divisionOrgKey`,
 1 AS `procedureRecordTypeCode`,
 1 AS `procedureRecordTypeDesc`,
 1 AS `procedureRecordSubtypeCode`,
 1 AS `procedureRecordSubtypeDesc`,
 1 AS `procedureRecordStatusCode`,
 1 AS `procedureRecordStatusDesc`,
 1 AS `procedurePrimaryIndicationCode`,
 1 AS `procedurePrimaryIndicationDesc`,
 1 AS `procedureDivisionCode`,
 1 AS `procedureDivisionName`,
 1 AS `procedureOutsideUSIndicator`,
 1 AS `procedureEstimatedStartDateIndicator`,
 1 AS `procedureStartDate`,
 1 AS `procedureEndDate`,
 1 AS `procedureSourceCreateUserValue`,
 1 AS `procedureSourceChangeUserValue`,
 1 AS `procedureSourceChangeProcessValue`,
 1 AS `procedureSourceChangeReasonValue`,
 1 AS `procedureSourceCreateTimestamp`,
 1 AS `procedureSourceUpdateTimestamp`,
 1 AS `procedureCreateTimestamp`,
 1 AS `procedureCreateProcessValue`,
 1 AS `procedureUpdateTimestamp`,
 1 AS `procedureUpdateProcessValue`,
 1 AS `procedureDeleteFlag`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_PROC_DEVICE`
--

DROP TABLE IF EXISTS `V_PROC_DEVICE`;
/*!50001 DROP VIEW IF EXISTS `V_PROC_DEVICE`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_PROC_DEVICE` AS SELECT 
 1 AS `procedureKey`,
 1 AS `procedureDeviceSourceName`,
 1 AS `procedureDeviceSourceID`,
 1 AS `deviceKey`,
 1 AS `procedureDeviceRecordTypeCode`,
 1 AS `procedureDeviceRecordTypeDesc`,
 1 AS `procedureDeviceRecordSubtypeCode`,
 1 AS `procedureDeviceRecordSubtypeDesc`,
 1 AS `procedureDeviceRecordStatusCode`,
 1 AS `procedureDeviceRecordStatusDesc`,
 1 AS `procedureDeviceActivityTypeCode`,
 1 AS `procedureDeviceActivityTypeDesc`,
 1 AS `procedureDeviceActivitySubtypeCode`,
 1 AS `procedureDeviceActivitySubtypeDesc`,
 1 AS `procedureDeviceSourceCreateUserValue`,
 1 AS `procedureDeviceSourceChangeUserValue`,
 1 AS `procedureDeviceSourceChangeProcessValue`,
 1 AS `procedureDeviceSourceChangeReasonValue`,
 1 AS `procedureDeviceSourceCreateTimestamp`,
 1 AS `procedureDeviceSourceUpdateTimestamp`,
 1 AS `procedureDeviceCreateTimestamp`,
 1 AS `procedureDeviceCreateProcessValue`,
 1 AS `procedureDeviceUpdateTimestamp`,
 1 AS `procedureDeviceUpdateProcessValue`,
 1 AS `procedureDeviceDeleteFlag`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_PROC_HCP`
--

DROP TABLE IF EXISTS `V_PROC_HCP`;
/*!50001 DROP VIEW IF EXISTS `V_PROC_HCP`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_PROC_HCP` AS SELECT 
 1 AS `procedureKey`,
 1 AS `procedureHCPSourceName`,
 1 AS `procedureHCPSourceID`,
 1 AS `hcpKey`,
 1 AS `procedureHCPRecordTypeCode`,
 1 AS `procedureHCPRecordTypeDesc`,
 1 AS `procedureHCPRecordSubtypeCode`,
 1 AS `procedureHCPRecordSubtypeDesc`,
 1 AS `procedureHCPRecordStatusCode`,
 1 AS `procedureHCPRecordStatusDesc`,
 1 AS `procedureHCPSourceCreateUserValue`,
 1 AS `procedureHCPSourceChangeUserValue`,
 1 AS `procedureHCPSourceChangeProcessValue`,
 1 AS `procedureHCPSourceChangeReasonValue`,
 1 AS `procedureHCPSourceCreateTimestamp`,
 1 AS `procedureHCPSourceUpdateTimestamp`,
 1 AS `procedureHCPCreateTimestamp`,
 1 AS `procedureHCPCreateProcessValue`,
 1 AS `procedureHCPUpdateTimestamp`,
 1 AS `procedureHCPUpdateProcessValue`,
 1 AS `procedureHCPDeleteFlag`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_PROC_INDICATION`
--

DROP TABLE IF EXISTS `V_PROC_INDICATION`;
/*!50001 DROP VIEW IF EXISTS `V_PROC_INDICATION`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_PROC_INDICATION` AS SELECT 
 1 AS `procedureKey`,
 1 AS `procedureIndicationSourceName`,
 1 AS `procedureIndicationSourceID`,
 1 AS `procedureIndicationCode`,
 1 AS `procedureIndicationDesc`,
 1 AS `procedureIndicationPriorityValue`,
 1 AS `procedureIndicationSourceCreateUserValue`,
 1 AS `procedureIndicationSourceChangeUserValue`,
 1 AS `procedureIndicationSourceChangeProcessValue`,
 1 AS `procedureIndicationSourceChangeReasonValue`,
 1 AS `procedureIndicationSourceCreateTimestamp`,
 1 AS `procedureIndicationSourceUpdateTimestamp`,
 1 AS `procedureIndicationCreateTimestamp`,
 1 AS `procedureIndicationCreateProcessValue`,
 1 AS `procedureIndicationUpdateTimestamp`,
 1 AS `procedureIndicationUpdateProcessValue`,
 1 AS `procedureIndicationDeleteFlag`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_PROD`
--

DROP TABLE IF EXISTS `V_PROD`;
/*!50001 DROP VIEW IF EXISTS `V_PROD`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_PROD` AS SELECT 
 1 AS `productKey`,
 1 AS `productSourceName`,
 1 AS `productSourceID`,
 1 AS `productRecordTypeCode`,
 1 AS `productRecordTypeDesc`,
 1 AS `productRecordSubtypeCode`,
 1 AS `productRecordSubtypeDesc`,
 1 AS `productRecordStatusCode`,
 1 AS `productRecordStatusDesc`,
 1 AS `productMaterialNum`,
 1 AS `productDisplayNum`,
 1 AS `productShortName`,
 1 AS `productLongName`,
 1 AS `productDesc`,
 1 AS `productBrandName`,
 1 AS `productCFN`,
 1 AS `productCFNDesc`,
 1 AS `productMPG`,
 1 AS `productMPGDesc`,
 1 AS `productTypeCode`,
 1 AS `productTypeDesc`,
 1 AS `productSetCode`,
 1 AS `productSetDesc`,
 1 AS `manufacturerOrgKey`,
 1 AS `productManufacturerCode`,
 1 AS `productManufacturerName`,
 1 AS `productDivisionCode`,
 1 AS `productDivisionName`,
 1 AS `productHierarchyLevel1Code`,
 1 AS `productHierarchyLevel1Desc`,
 1 AS `productHierarchyLevel2Code`,
 1 AS `productHierarchyLevel2Desc`,
 1 AS `productHierarchyLevel3Code`,
 1 AS `productHierarchyLevel3Desc`,
 1 AS `productHierarchyLevel4Code`,
 1 AS `productHierarchyLevel4Desc`,
 1 AS `productHierarchyLevel5Code`,
 1 AS `productHierarchyLevel5Desc`,
 1 AS `productHierarchyLevel6Code`,
 1 AS `productHierarchyLevel6Desc`,
 1 AS `productLotSerialCode`,
 1 AS `productLotSerialDesc`,
 1 AS `productLanguageCode`,
 1 AS `productLanguageDesc`,
 1 AS `productUnitOfMeasureCode`,
 1 AS `productUnitOfMeasureDesc`,
 1 AS `productTrackingIndicator`,
 1 AS `productTrackingMethodCode`,
 1 AS `productTrackingMethodDesc`,
 1 AS `productTrackingPurposeCode`,
 1 AS `productTrackingPurposeDesc`,
 1 AS `productSourceCreateUserValue`,
 1 AS `productSourceChangeUserValue`,
 1 AS `productSourceChangeProcessValue`,
 1 AS `productSourceChangeReasonValue`,
 1 AS `productSourceCreateTimestamp`,
 1 AS `productSourceUpdateTimestamp`,
 1 AS `productCreateTimestamp`,
 1 AS `productCreateProcessValue`,
 1 AS `productUpdateTimestamp`,
 1 AS `productUpdateProcessValue`,
 1 AS `productDeleteFlag`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_PROD_UOM`
--

DROP TABLE IF EXISTS `V_PROD_UOM`;
/*!50001 DROP VIEW IF EXISTS `V_PROD_UOM`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_PROD_UOM` AS SELECT 
 1 AS `productKey`,
 1 AS `productUnitOfMeasureSourceName`,
 1 AS `productUnitOfMeasureSourceID`,
 1 AS `productUnitOfMeasureRecordTypeCode`,
 1 AS `productUnitOfMeasureRecordTypeDesc`,
 1 AS `productUnitOfMeasureRecordSubtypeCode`,
 1 AS `productUnitOfMeasureRecordSubtypeDesc`,
 1 AS `productUnitOfMeasureRecordStatusCode`,
 1 AS `productUnitOfMeasureRecordStatusDesc`,
 1 AS `productGTINValue`,
 1 AS `productUnitOfMeasureCode`,
 1 AS `productUnitOfMeasureDesc`,
 1 AS `productUnitOfMeasureSourceCreateUserValue`,
 1 AS `productUnitOfMeasureSourceChangeUserValue`,
 1 AS `productUnitOfMeasureSourceChangeProcessValue`,
 1 AS `productUnitOfMeasureSourceChangeReasonValue`,
 1 AS `productUnitOfMeasureSourceCreateTimestamp`,
 1 AS `productUnitOfMeasureSourceUpdateTimestamp`,
 1 AS `productUnitOfMeasureCreateTimestamp`,
 1 AS `productUnitOfMeasureCreateProcessValue`,
 1 AS `productUnitOfMeasureUpdateTimestamp`,
 1 AS `productUnitOfMeasureUpdateProcessValue`,
 1 AS `productUnitOfMeasureDeleteFlag`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_REF_VAL_MAPPINGS`
--

DROP TABLE IF EXISTS `V_REF_VAL_MAPPINGS`;
/*!50001 DROP VIEW IF EXISTS `V_REF_VAL_MAPPINGS`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_REF_VAL_MAPPINGS` AS SELECT 
 1 AS `CHILD_SOURCE`,
 1 AS `REF_VAL`,
 1 AS `REF_VAL_DESC`,
 1 AS `REF_VAL_RLSHP_TYP_NM`,
 1 AS `PARENT_SOURCE`,
 1 AS `MAPPED_REF_VAL`,
 1 AS `MAPPED_REF_VAL_DESC`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `V_REF_VAL_SETS`
--

DROP TABLE IF EXISTS `V_REF_VAL_SETS`;
/*!50001 DROP VIEW IF EXISTS `V_REF_VAL_SETS`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `V_REF_VAL_SETS` AS SELECT 
 1 AS `REF_VAL`,
 1 AS `REF_VAL_DESC`,
 1 AS `REF_VAL_RLSHP_TYP_NM`,
 1 AS `SOURCE`,
 1 AS `REF_SET_VAL`,
 1 AS `REF_SET_DESC`,
 1 AS `HEX_REF_VAL_RKEY`,
 1 AS `HEX_SOURCE_KEY`*/;
SET character_set_client = @saved_cs_client;

--
-- Final view structure for view `V_ASSIGN_DEVICE_PARAM_VAL`
--

/*!50001 DROP VIEW IF EXISTS `V_ASSIGN_DEVICE_PARAM_VAL`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_ASSIGN_DEVICE_PARAM_VAL` AS select `devparam`.`DEVICE_REGIST_KEY` AS `deviceRegistrationKey`,`src`.`SOURCE` AS `deviceParameterSourceName`,`devparam`.`SOURCE_ID` AS `deviceParameterSourceID`,`stat`.`REF_VAL` AS `deviceParameterRecordStatusCode`,`stat`.`REF_VAL_DESC` AS `deviceParameterRecordStatusDesc`,`param`.`REF_VAL` AS `deviceParameterCode`,`param`.`REF_VAL_DESC` AS `deviceParameterDesc`,`devparam`.`STRING_VAL` AS `deviceParameterTextValue`,`devparam`.`SOURCE_CREATE_USER_VAL` AS `deviceParameterSourceCreateUserValue`,`devparam`.`SOURCE_CHG_USER_VAL` AS `deviceParameterSourceChangeUserValue`,`devparam`.`SOURCE_CHG_PRCS_VAL` AS `deviceParameterSourceChangeProcessValue`,`devparam`.`SOURCE_CHG_REASN_VAL` AS `deviceParameterSourceChangeReasonValue`,`devparam`.`SOURCE_CREATE_TS` AS `deviceParameterSourceCreateTimestamp`,`devparam`.`SOURCE_UPD_TS` AS `deviceParameterSourceUpdateTimestamp`,`devparam`.`CREATE_TS` AS `deviceParameterCreateTimestamp`,`devparam`.`CREATE_PRCS_VAL` AS `deviceParameterCreateProcessValue`,`devparam`.`UPD_TS` AS `deviceParameterUpdateTimestamp`,`devparam`.`UPD_PRCS_VAL` AS `deviceParameterUpdateProcessValue`,`devparam`.`DEL_FLAG` AS `deviceParameterDeleteFlag` from (((`ASSIGN_DEVICE_PARAM_VAL` `devparam` join `SOURCE` `src` on((`src`.`SOURCE_KEY` = `devparam`.`SOURCE_KEY`))) join `REF_VAL` `stat` on((`stat`.`REF_VAL_RKEY` = `devparam`.`STAT_RKEY`))) left join `REF_VAL` `param` on((`param`.`REF_VAL_RKEY` = `devparam`.`PARAM_RKEY`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_CUST_ACCT`
--

/*!50001 DROP VIEW IF EXISTS `V_CUST_ACCT`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_CUST_ACCT` AS select `cust`.`CUST_ACCT_KEY` AS `customerAccountKey`,`src`.`SOURCE` AS `customerAccountSourceName`,`cust`.`SOURCE_ID` AS `customerAccountSourceID`,`typ`.`REF_VAL` AS `customerAccountRecordTypeCode`,`typ`.`REF_VAL_DESC` AS `customerAccountRecordTypeDesc`,`styp`.`REF_VAL` AS `customerAccountRecordSubtypeCode`,`styp`.`REF_VAL_DESC` AS `customerAccountRecordSubtypeDesc`,`stat`.`REF_VAL` AS `customerAccountRecordStatusCode`,`stat`.`REF_VAL_DESC` AS `customerAccountRecordStatusDesc`,`cust`.`CUST_ACCT_NUM` AS `customerAccountNum`,`cust`.`CUST_SHORT_NM` AS `customerAccountShortName`,`cust`.`CUST_LONG_NM` AS `customerAccountLongName`,`cust`.`CUST_ALT_NM` AS `customerAccountAlternateName`,`cust`.`CUST_PREF_NM` AS `customerAccountPreferredName`,`lang`.`REF_VAL` AS `customerAccountLanguageCode`,`lang`.`REF_VAL_DESC` AS `customerAccountLanguageDesc`,`cust`.`SOURCE_CREATE_USER_VAL` AS `customerAccountSourceCreateUserValue`,`cust`.`SOURCE_CHG_USER_VAL` AS `customerAccountSourceChangeUserValue`,`cust`.`SOURCE_CHG_PRCS_VAL` AS `customerAccountSourceChangeProcessValue`,`cust`.`SOURCE_CHG_REASN_VAL` AS `customerAccountSourceChangeReasonValue`,`cust`.`SOURCE_CREATE_TS` AS `customerAccountSourceCreateTimestamp`,`cust`.`SOURCE_UPD_TS` AS `customerAccountSourceUpdateTimestamp`,`cust`.`CREATE_TS` AS `customerAccountCreateTimestamp`,`cust`.`CREATE_PRCS_VAL` AS `customerAccountCreateProcessValue`,`cust`.`UPD_TS` AS `customerAccountUpdateTimestamp`,`cust`.`UPD_PRCS_VAL` AS `customerAccountUpdateProcessValue`,`cust`.`DEL_FLAG` AS `customerAccountDeleteFlag` from (((((`CUST_ACCT` `cust` join `SOURCE` `src` on((`src`.`SOURCE_KEY` = `cust`.`SOURCE_KEY`))) join `REF_VAL` `typ` on((`typ`.`REF_VAL_RKEY` = `cust`.`REC_TYP_RKEY`))) left join `REF_VAL` `styp` on((`styp`.`REF_VAL_RKEY` = `cust`.`REC_SUBTYP_RKEY`))) join `REF_VAL` `stat` on((`stat`.`REF_VAL_RKEY` = `cust`.`STAT_RKEY`))) join `REF_VAL` `lang` on((`lang`.`REF_VAL_RKEY` = `cust`.`LANG_RKEY`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_CUST_ACCT_POSTAL_ADDR`
--

/*!50001 DROP VIEW IF EXISTS `V_CUST_ACCT_POSTAL_ADDR`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_CUST_ACCT_POSTAL_ADDR` AS select `custpaddr`.`CUST_ACCT_KEY` AS `customerAccountKey`,`src`.`SOURCE` AS `customerAccountPostalAddressSourceName`,`custpaddr`.`SOURCE_ID` AS `customerAccountPostalAddressSourceID`,`stat`.`REF_VAL` AS `customerAccountPostalAddressRecordStatusCode`,`stat`.`REF_VAL_DESC` AS `customerAccountPostalAddressRecordStatusDesc`,`paddrstat`.`REF_VAL` AS `postalAddressRecordStatusCode`,`paddrstat`.`REF_VAL_DESC` AS `postalAddressRecordStatusDesc`,`addrtyp`.`REF_VAL` AS `postalAddressTypeCode`,`addrtyp`.`REF_VAL_DESC` AS `postalAddressTypeDesc`,`paddr`.`LN1_VAL` AS `customerAccountPostalAddressLine1Val`,`paddr`.`LN2_VAL` AS `customerAccountPostalAddressLine2Val`,`paddr`.`LN3_VAL` AS `customerAccountPostalAddressLine3Val`,`paddr`.`LN4_VAL` AS `customerAccountPostalAddressLine4Val`,`paddr`.`LN5_VAL` AS `customerAccountPostalAddressLine5Val`,`paddr`.`ATTN_LN_VAL` AS `customerAccountPostalAddressAttentionLine`,`paddr`.`GEOCODE_VAL` AS `customerAccountPostalAddressGeocodeVal`,`paddr`.`LAT_VAL` AS `customerAccountPostalAddressLatitude`,`paddr`.`LON_VAL` AS `customerAccountPostalAddressLongitude`,`paddr`.`ALT_VAL` AS `customerAccountPostalAddressAltitude`,`paddr`.`COUNTY_NM` AS `customerAccountPostalAddressCountyName`,`paddr`.`CITY_NM` AS `customerAccountPostalAddressCityName`,`paddr`.`DISTRICT_NM` AS `customerAccountPostalAddressDistrictName`,`paddr`.`NEIGHBRHD_NM` AS `customerAccountPostalAddressNeighborhoodName`,`paddr`.`POSTAL_CD_VAL` AS `customerAccountPostalAddressPostalCode`,`custpaddr`.`PRIORITY_VAL` AS `customerAccountPostalAddressPriorityVal`,`cntry`.`PLACE_SHORT_NM` AS `postalAddressCountryCode`,`cntry`.`PLACE_LONG_NM` AS `postalAddressCountryName`,`reg`.`PLACE_SHORT_NM` AS `postalAddressRegionCode`,`reg`.`PLACE_LONG_NM` AS `postalAddressRegionName`,`tz`.`PLACE_SHORT_NM` AS `postalAddressTimezoneCode`,`tz`.`PLACE_LONG_NM` AS `postalAddressTimezoneName`,`paddr`.`TZ_TXT` AS `postalAddressTimezoneText`,`addrusg`.`REF_VAL` AS `customerAccountPostalAddressUsageCode`,`addrusg`.`REF_VAL_DESC` AS `customerAccountPostalAddressUsageDesc`,`prefind`.`REF_VAL` AS `customerAccountPostalAddressPreferredIndicator`,`mailind`.`REF_VAL` AS `customerAccountPostalAddressAcceptMailIndicator`,`pkgind`.`REF_VAL` AS `customerAccountPostalAddressAcceptPackageIndicator`,`validind`.`REF_VAL` AS `customerAccountPostalAddressValidatedIndicator`,`validrsn`.`REF_VAL` AS `customerAccountPostalAddressValidationReasonCode`,`validrsn`.`REF_VAL_DESC` AS `customerAccountPostalAddressValidationReasonDesc`,`lang`.`REF_VAL` AS `customerAccountPostalAddressLanguageCode`,`lang`.`REF_VAL_DESC` AS `customerAccountPostalAddressLanguageDesc`,cast(`custpaddr`.`EFF_START_TS` as date) AS `customerAccountPostalAddressStartDate`,cast(`custpaddr`.`EFF_END_TS` as date) AS `customerAccountPostalAddressEndDate`,`custpaddr`.`SOURCE_CREATE_USER_VAL` AS `customerAccountPostalAddressSourceCreateUserValue`,`custpaddr`.`SOURCE_CHG_USER_VAL` AS `customerAccountPostalAddressSourceChangeUserValue`,`custpaddr`.`SOURCE_CHG_PRCS_VAL` AS `customerAccountPostalAddressSourceChangeProcessValue`,`custpaddr`.`SOURCE_CHG_REASN_VAL` AS `customerAccountPostalAddressSourceChangeReasonValue`,`custpaddr`.`SOURCE_CREATE_TS` AS `customerAccountPostalAddressSourceCreateTimestamp`,`custpaddr`.`SOURCE_UPD_TS` AS `customerAccountPostalAddressSourceUpdateTimestamp`,`custpaddr`.`CREATE_TS` AS `customerAccountPostalAddressCreateTimestamp`,`custpaddr`.`CREATE_PRCS_VAL` AS `customerAccountPostalAddressCreateProcessValue`,`custpaddr`.`UPD_TS` AS `customerAccountPostalAddressUpdateTimestamp`,`custpaddr`.`UPD_PRCS_VAL` AS `customerAccountPostalAddressUpdateProcessValue`,`custpaddr`.`DEL_FLAG` AS `customerAccountPostalAddressDeleteFlag` from (((((((((((((((`CUST_ACCT_POSTAL_ADDR` `custpaddr` join `POSTAL_ADDR` `paddr` on((`paddr`.`POSTAL_ADDR_KEY` = `custpaddr`.`POSTAL_ADDR_KEY`))) join `SOURCE` `src` on((`src`.`SOURCE_KEY` = `custpaddr`.`SOURCE_KEY`))) join `REF_VAL` `stat` on((`stat`.`REF_VAL_RKEY` = `custpaddr`.`STAT_RKEY`))) join `REF_VAL` `paddrstat` on((`paddrstat`.`REF_VAL_RKEY` = `paddr`.`STAT_RKEY`))) join `REF_VAL` `addrusg` on((`addrusg`.`REF_VAL_RKEY` = `custpaddr`.`ADDR_USAGE_TYP_RKEY`))) join `REF_VAL` `prefind` on((`prefind`.`REF_VAL_RKEY` = `paddr`.`ADDR_TYP_RKEY`))) join `REF_VAL` `addrtyp` on((`addrtyp`.`REF_VAL_RKEY` = `paddr`.`ADDR_TYP_RKEY`))) join `REF_VAL` `validind` on((`validind`.`REF_VAL_RKEY` = `paddr`.`VALID_IND_RKEY`))) left join `REF_VAL` `validrsn` on((`validrsn`.`REF_VAL_RKEY` = `paddr`.`VALID_REASN_RKEY`))) left join `REF_VAL` `lang` on((`lang`.`REF_VAL_RKEY` = `paddr`.`LANG_RKEY`))) join `REF_VAL` `mailind` on((`mailind`.`REF_VAL_RKEY` = `paddr`.`ACCEPT_MAIL_IND_RKEY`))) join `REF_VAL` `pkgind` on((`pkgind`.`REF_VAL_RKEY` = `paddr`.`ACCEPT_PKG_IND_RKEY`))) join `PLACE` `cntry` on((`cntry`.`PLACE_KEY` = `paddr`.`CNTRY_PLACE_KEY`))) join `PLACE` `reg` on((`reg`.`PLACE_KEY` = `paddr`.`REGION_PLACE_KEY`))) left join `PLACE` `tz` on((`tz`.`PLACE_KEY` = `paddr`.`TZ_PLACE_KEY`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_CUST_ACCT_VIRTUAL_ADDR`
--

/*!50001 DROP VIEW IF EXISTS `V_CUST_ACCT_VIRTUAL_ADDR`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_CUST_ACCT_VIRTUAL_ADDR` AS select `custvaddr`.`CUST_ACCT_KEY` AS `customerAccountKey`,`src`.`SOURCE` AS `customerAccountVirtualAddressSourceName`,`custvaddr`.`SOURCE_ID` AS `customerAccountVirtualAddressSourceID`,`stat`.`REF_VAL` AS `customerAccountVirtualAddressRecordStatusCode`,`stat`.`REF_VAL_DESC` AS `customerAccountVirtualAddressRecordStatusDesc`,`vaddrstat`.`REF_VAL` AS `virtualAddressRecordStatusCode`,`vaddrstat`.`REF_VAL_DESC` AS `virtualAddressRecordStatusDesc`,`vaddr`.`LAND_LINE_POSTAL_ADDR_KEY` AS `virtualAddressLandLinePostalAddressKey`,`addrtyp`.`REF_VAL` AS `virtualAddressTypeCode`,`addrtyp`.`REF_VAL_DESC` AS `virtualAddressTypeDesc`,`vaddr`.`VIRTUAL_ADDR_VAL` AS `customerAccountVirtualAddressVal`,`vaddr`.`VIRTUAL_ADDR_EXT_VAL` AS `customerAccountVirtualAddressExtendedVal`,`custvaddr`.`PRIORITY_VAL` AS `customerAccountVirtualAddressPriorityVal`,`plc`.`PLACE_SHORT_NM` AS `virtualAddressCountryCode`,`plc`.`PLACE_LONG_NM` AS `virtualAddressCountryName`,`addrusg`.`REF_VAL` AS `customerAccountVirtualAddressUsageCode`,`addrusg`.`REF_VAL_DESC` AS `customerAccountVirtualAddressUsageDesc`,`prefind`.`REF_VAL` AS `customerAccountVirtualAddressPreferredIndicator`,`txtind`.`REF_VAL` AS `customerAccountVirtualAddressAcceptsTextMessageIndicator`,`vmind`.`REF_VAL` AS `customerAccountVirtualAddressAcceptsVoicemailMessageIndicator`,`validind`.`REF_VAL` AS `customerAccountVirtualAddressValidatedIndicator`,cast(`custvaddr`.`EFF_START_TS` as date) AS `customerAccountVirtualAddressStartDate`,cast(`custvaddr`.`EFF_END_TS` as date) AS `customerAccountVirtualAddressEndDate`,`custvaddr`.`SOURCE_CREATE_USER_VAL` AS `customerAccountVirtualAddressSourceCreateUserValue`,`custvaddr`.`SOURCE_CHG_USER_VAL` AS `customerAccountVirtualAddressSourceChangeUserValue`,`custvaddr`.`SOURCE_CHG_PRCS_VAL` AS `customerAccountVirtualAddressSourceChangeProcessValue`,`custvaddr`.`SOURCE_CHG_REASN_VAL` AS `customerAccountVirtualAddressSourceChangeReasonValue`,`custvaddr`.`SOURCE_CREATE_TS` AS `customerAccountVirtualAddressSourceCreateTimestamp`,`custvaddr`.`SOURCE_UPD_TS` AS `customerAccountVirtualAddressSourceUpdateTimestamp`,`custvaddr`.`CREATE_TS` AS `customerAccountVirtualAddressCreateTimestamp`,`custvaddr`.`CREATE_PRCS_VAL` AS `customerAccountVirtualAddressCreateProcessValue`,`custvaddr`.`UPD_TS` AS `customerAccountVirtualAddressUpdateTimestamp`,`custvaddr`.`UPD_PRCS_VAL` AS `customerAccountVirtualAddressUpdateProcessValue`,`custvaddr`.`DEL_FLAG` AS `customerAccountVirtualAddressDeleteFlag` from (((((((((((`CUST_ACCT_VIRTUAL_ADDR` `custvaddr` join `VIRTUAL_ADDR` `vaddr` on((`vaddr`.`VIRTUAL_ADDR_KEY` = `custvaddr`.`VIRTUAL_ADDR_KEY`))) join `SOURCE` `src` on((`src`.`SOURCE_KEY` = `custvaddr`.`SOURCE_KEY`))) join `REF_VAL` `stat` on((`stat`.`REF_VAL_RKEY` = `custvaddr`.`STAT_RKEY`))) join `REF_VAL` `vaddrstat` on((`vaddrstat`.`REF_VAL_RKEY` = `vaddr`.`STAT_RKEY`))) join `REF_VAL` `addrusg` on((`addrusg`.`REF_VAL_RKEY` = `custvaddr`.`ADDR_USAGE_TYP_RKEY`))) join `REF_VAL` `prefind` on((`prefind`.`REF_VAL_RKEY` = `vaddr`.`ADDR_TYP_RKEY`))) join `REF_VAL` `addrtyp` on((`addrtyp`.`REF_VAL_RKEY` = `vaddr`.`ADDR_TYP_RKEY`))) join `REF_VAL` `validind` on((`validind`.`REF_VAL_RKEY` = `vaddr`.`VALID_IND_RKEY`))) join `REF_VAL` `vmind` on((`vmind`.`REF_VAL_RKEY` = `custvaddr`.`ACCEPT_VOICE_MSG_IND_RKEY`))) join `REF_VAL` `txtind` on((`txtind`.`REF_VAL_RKEY` = `custvaddr`.`ACCEPT_TXT_MSG_IND_RKEY`))) left join `PLACE` `plc` on((`plc`.`PLACE_KEY` = `vaddr`.`CNTRY_PLACE_KEY`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_DEVICE`
--

/*!50001 DROP VIEW IF EXISTS `V_DEVICE`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_DEVICE` AS select `dev`.`DEVICE_INSTANCE_KEY` AS `deviceKey`,`src`.`SOURCE` AS `deviceSourceName`,`dev`.`SOURCE_ID` AS `deviceSourceID`,`matl`.`MATL_KEY` AS `productKey`,`dev`.`DEVICE_MFG_ORG_KEY` AS `manufacturerOrgKey`,`typ`.`REF_VAL` AS `deviceRecordTypeCode`,`typ`.`REF_VAL_DESC` AS `deviceRecordTypeDesc`,`styp`.`REF_VAL` AS `deviceRecordSubtypeCode`,`styp`.`REF_VAL_DESC` AS `deviceRecordSubtypeDesc`,`stat`.`REF_VAL` AS `deviceRecordStatusCode`,`stat`.`REF_VAL_DESC` AS `deviceRecordStatusDesc`,`dev`.`LOT_SERIAL_NUM` AS `deviceLotSerialNum`,`unkser`.`REF_VAL` AS `deviceUnknownSerialNumIndicator`,`mfg`.`ORG_SHORT_NM` AS `deviceManufacturerCode`,`mfg`.`ORG_LONG_NM` AS `deviceManufacturerName`,`mostrecent`.`LAST_ACT_TYP` AS `deviceLastActivityType`,`mostrecent`.`LAST_ACT_SUBTYP` AS `deviceLastActivitySubtype`,(case when (`prodset`.`MATL_KEY` is null) then 'N' else 'Y' end) AS `devicePrimaryImplantableFlag`,cast(`impldt`.`FIRST_IMPLANT_TS` as date) AS `deviceImplantDate`,cast(`expldt`.`LAST_EXPLANT_TS` as date) AS `deviceExplantDate`,`dev`.`MFG_DT` AS `deviceManufactureDate`,`dev`.`USE_BEFORE_DT` AS `deviceUseBeforeDate`,`dev`.`SOURCE_CREATE_USER_VAL` AS `deviceSourceCreateUserValue`,`dev`.`SOURCE_CHG_USER_VAL` AS `deviceSourceChangeUserValue`,`dev`.`SOURCE_CHG_PRCS_VAL` AS `deviceSourceChangeProcessValue`,`dev`.`SOURCE_CHG_REASN_VAL` AS `deviceSourceChangeReasonValue`,`dev`.`SOURCE_CREATE_TS` AS `deviceSourceCreateTimestamp`,`dev`.`SOURCE_UPD_TS` AS `deviceSourceUpdateTimestamp`,`dev`.`CREATE_TS` AS `deviceCreateTimestamp`,`dev`.`CREATE_PRCS_VAL` AS `deviceCreateProcessValue`,`dev`.`UPD_TS` AS `deviceUpdateTimestamp`,`dev`.`UPD_PRCS_VAL` AS `deviceUpdateProcessValue`,`dev`.`DEL_FLAG` AS `deviceDeleteFlag` from ((((((((((((`DEVICE_INSTANCE` `dev` join `MATL` `matl` on((`matl`.`MATL_KEY` = `dev`.`PROD_MATL_KEY`))) left join `ORG` `mfg` on((`mfg`.`ORG_KEY` = `dev`.`DEVICE_MFG_ORG_KEY`))) join `SOURCE` `src` on((`src`.`SOURCE_KEY` = `dev`.`SOURCE_KEY`))) join `REF_VAL` `typ` on((`typ`.`REF_VAL_RKEY` = `dev`.`REC_TYP_RKEY`))) left join `REF_VAL` `styp` on((`styp`.`REF_VAL_RKEY` = `dev`.`REC_SUBTYP_RKEY`))) join `REF_VAL` `stat` on((`stat`.`REF_VAL_RKEY` = `dev`.`STAT_RKEY`))) join `REF_VAL` `unkser` on((`unkser`.`REF_VAL_RKEY` = `dev`.`UNK_SERIAL_NUM_IND_RKEY`))) left join `V_DEVICE_FIRST_IMPL` `impldt` on((`impldt`.`DEVICE_INSTANCE_KEY` = `dev`.`DEVICE_INSTANCE_KEY`))) left join `V_DEVICE_LAST_EXPL` `expldt` on((`expldt`.`DEVICE_INSTANCE_KEY` = `dev`.`DEVICE_INSTANCE_KEY`))) left join `V_DEVICE_LAST_ACT` `mostrecent` on((`mostrecent`.`DEVICE_INSTANCE_KEY` = `dev`.`DEVICE_INSTANCE_KEY`))) left join `V_DEVICE_PROD_TYP` `prodtyp` on((`matl`.`MATL_KEY` = `prodtyp`.`MATL_KEY`))) left join `V_DEVICE_PROD_SET` `prodset` on((`prodtyp`.`REL_MATL_KEY` = `prodset`.`MATL_KEY`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_DEVICE_FIRST_IMPL`
--

/*!50001 DROP VIEW IF EXISTS `V_DEVICE_FIRST_IMPL`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_DEVICE_FIRST_IMPL` AS select `procdev`.`DEVICE_INSTANCE_KEY` AS `DEVICE_INSTANCE_KEY`,min(`me`.`EFF_START_TS`) AS `FIRST_IMPLANT_TS` from (((`MEDL_EVNT` `me` join `PROC` `proc` on((`me`.`MEDL_EVNT_KEY` = `proc`.`MEDL_EVNT_KEY`))) join `PROC_DEVICE_INSTANCE` `procdev` on((`procdev`.`MEDL_EVNT_KEY` = `proc`.`MEDL_EVNT_KEY`))) join `REF_VAL` `acttyp` on((`acttyp`.`REF_VAL_RKEY` = `procdev`.`ACT_TYP_RKEY`))) where (`acttyp`.`REF_VAL` = 'IMPLANTED') group by `procdev`.`DEVICE_INSTANCE_KEY` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_DEVICE_LAST_ACT`
--

/*!50001 DROP VIEW IF EXISTS `V_DEVICE_LAST_ACT`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_DEVICE_LAST_ACT` AS select `procdev`.`DEVICE_INSTANCE_KEY` AS `DEVICE_INSTANCE_KEY`,`acttyp`.`REF_VAL` AS `LAST_ACT_TYP`,`actstyp`.`REF_VAL` AS `LAST_ACT_SUBTYP` from (((`PROC_DEVICE_INSTANCE` `procdev` join `V_DEVICE_MOST_RECENT_ME` `mostrecent` on(((`mostrecent`.`DEVICE_INSTANCE_KEY` = `procdev`.`DEVICE_INSTANCE_KEY`) and (`mostrecent`.`MOST_RECENT_MEDL_EVNT_KEY` = `procdev`.`MEDL_EVNT_KEY`)))) join `REF_VAL` `acttyp` on((`acttyp`.`REF_VAL_RKEY` = `procdev`.`ACT_TYP_RKEY`))) join `REF_VAL` `actstyp` on((`actstyp`.`REF_VAL_RKEY` = `procdev`.`ACT_SUBTYP_RKEY`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_DEVICE_LAST_EXPL`
--

/*!50001 DROP VIEW IF EXISTS `V_DEVICE_LAST_EXPL`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_DEVICE_LAST_EXPL` AS select `procdev`.`DEVICE_INSTANCE_KEY` AS `DEVICE_INSTANCE_KEY`,max(`me`.`EFF_START_TS`) AS `LAST_EXPLANT_TS` from (((`MEDL_EVNT` `me` join `PROC` `proc` on((`me`.`MEDL_EVNT_KEY` = `proc`.`MEDL_EVNT_KEY`))) join `PROC_DEVICE_INSTANCE` `procdev` on((`procdev`.`MEDL_EVNT_KEY` = `proc`.`MEDL_EVNT_KEY`))) join `REF_VAL` `acttyp` on((`acttyp`.`REF_VAL_RKEY` = `procdev`.`ACT_TYP_RKEY`))) where (`acttyp`.`REF_VAL` = 'EXPLANTED') group by `procdev`.`DEVICE_INSTANCE_KEY` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_DEVICE_MOST_RECENT_ME`
--

/*!50001 DROP VIEW IF EXISTS `V_DEVICE_MOST_RECENT_ME`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_DEVICE_MOST_RECENT_ME` AS select `procdev`.`DEVICE_INSTANCE_KEY` AS `DEVICE_INSTANCE_KEY`,max(`me`.`MEDL_EVNT_KEY`) AS `MOST_RECENT_MEDL_EVNT_KEY` from ((`MEDL_EVNT` `me` join `PROC` `proc` on((`me`.`MEDL_EVNT_KEY` = `proc`.`MEDL_EVNT_KEY`))) join `PROC_DEVICE_INSTANCE` `procdev` on((`procdev`.`MEDL_EVNT_KEY` = `proc`.`MEDL_EVNT_KEY`))) group by `procdev`.`DEVICE_INSTANCE_KEY` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_DEVICE_PROD_SET`
--

/*!50001 DROP VIEW IF EXISTS `V_DEVICE_PROD_SET`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_DEVICE_PROD_SET` AS select `MR11`.`MATL_KEY` AS `MATL_KEY`,`MR11`.`REL_MATL_KEY` AS `REL_MATL_KEY`,`M11`.`MATL_NUM` AS `MATL_NUM`,`M11`.`MATL_DESC` AS `MATL_DESC` from ((`MATL` `M11` join `MATL_RLSHP` `MR11` on((`M11`.`MATL_KEY` = `MR11`.`REL_MATL_KEY`))) join `REF_VAL` `RV11` on(((`MR11`.`REC_SUBTYP_RKEY` = `RV11`.`REF_VAL_RKEY`) and (`RV11`.`REF_VAL` = 'PRSET')))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_DEVICE_PROD_TYP`
--

/*!50001 DROP VIEW IF EXISTS `V_DEVICE_PROD_TYP`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_DEVICE_PROD_TYP` AS select `MR9`.`MATL_KEY` AS `MATL_KEY`,`MR9`.`REL_MATL_KEY` AS `REL_MATL_KEY`,`M9`.`MATL_NUM` AS `MATL_NUM`,`M9`.`MATL_DESC` AS `MATL_DESC` from ((`MATL` `M9` join `MATL_RLSHP` `MR9` on((`M9`.`MATL_KEY` = `MR9`.`REL_MATL_KEY`))) join `REF_VAL` `RV9` on(((`MR9`.`REC_SUBTYP_RKEY` = `RV9`.`REF_VAL_RKEY`) and (`RV9`.`REF_VAL` = 'PRTYP')))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_DEVICE_REGIST`
--

/*!50001 DROP VIEW IF EXISTS `V_DEVICE_REGIST`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_DEVICE_REGIST` AS select `regist`.`DEVICE_REGIST_KEY` AS `deviceRegistrationKey`,`src`.`SOURCE` AS `deviceRegistrationSourceName`,`regist`.`SOURCE_ID` AS `deviceRegistrationSourceID`,`regist`.`DEVICE_INSTANCE_KEY` AS `deviceKey`,`regist`.`PATIENT_KEY` AS `patientKey`,`typ`.`REF_VAL` AS `deviceRegistrationRecordTypeCode`,`typ`.`REF_VAL_DESC` AS `deviceRegistrationRecordTypeDesc`,`styp`.`REF_VAL` AS `pdeviceRegistrationRecordSubtypeCode`,`styp`.`REF_VAL_DESC` AS `deviceRegistrationRecordSubtypeDesc`,`stat`.`REF_VAL` AS `deviceRegistrationRecordStatusCode`,`stat`.`REF_VAL_DESC` AS `deviceRegistrationRecordStatusDesc`,`regist`.`FOLLOWUP_HCP_KEY` AS `followupHCPKey`,`regist`.`FOLLOWUP_ORG_KEY` AS `followupOrgKey`,`devdisp`.`REF_VAL` AS `deviceDispositionCode`,`devdisp`.`REF_VAL_DESC` AS `deviceDispositionDesc`,`regist`.`SOURCE_CREATE_USER_VAL` AS `deviceRegistrationSourceCreateUserValue`,`regist`.`SOURCE_CHG_USER_VAL` AS `deviceRegistrationSourceChangeUserValue`,`regist`.`SOURCE_CHG_PRCS_VAL` AS `deviceRegistrationSourceChangeProcessValue`,`regist`.`SOURCE_CHG_REASN_VAL` AS `deviceRegistrationSourceChangeReasonValue`,`regist`.`SOURCE_CREATE_TS` AS `deviceRegistrationSourceCreateTimestamp`,`regist`.`SOURCE_UPD_TS` AS `deviceRegistrationSourceUpdateTimestamp`,`regist`.`CREATE_TS` AS `deviceRegistrationCreateTimestamp`,`regist`.`CREATE_PRCS_VAL` AS `deviceRegistrationCreateProcessValue`,`regist`.`UPD_TS` AS `deviceRegistrationUpdateTimestamp`,`regist`.`UPD_PRCS_VAL` AS `deviceRegistrationUpdateProcessValue`,`regist`.`DEL_FLAG` AS `deviceRegistrationDeleteFlag` from ((((((((`DEVICE_REGIST` `regist` left join `PATIENT` `pat` on((`pat`.`PATIENT_KEY` = `regist`.`PATIENT_KEY`))) left join `ORG` `org` on((`org`.`ORG_KEY` = `regist`.`FOLLOWUP_ORG_KEY`))) left join `HCP` `hcp` on((`hcp`.`HCP_KEY` = `regist`.`FOLLOWUP_HCP_KEY`))) join `SOURCE` `src` on((`src`.`SOURCE_KEY` = `regist`.`SOURCE_KEY`))) join `REF_VAL` `typ` on((`typ`.`REF_VAL_RKEY` = `regist`.`REC_TYP_RKEY`))) left join `REF_VAL` `styp` on((`styp`.`REF_VAL_RKEY` = `regist`.`REC_SUBTYP_RKEY`))) join `REF_VAL` `stat` on((`stat`.`REF_VAL_RKEY` = `regist`.`STAT_RKEY`))) left join `REF_VAL` `devdisp` on((`devdisp`.`REF_VAL_RKEY` = `regist`.`DEVICE_DISP_RKEY`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_EDS_COLUMNS`
--

/*!50001 DROP VIEW IF EXISTS `V_EDS_COLUMNS`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_EDS_COLUMNS` AS select `columns`.`TABLE_CATALOG` AS `TABLE_CATALOG`,`columns`.`TABLE_SCHEMA` AS `TABLE_SCHEMA`,`columns`.`TABLE_NAME` AS `TABLE_NAME`,`columns`.`COLUMN_NAME` AS `COLUMN_NAME`,`columns`.`ORDINAL_POSITION` AS `ORDINAL_POSITION`,`columns`.`COLUMN_DEFAULT` AS `COLUMN_DEFAULT`,`columns`.`IS_NULLABLE` AS `IS_NULLABLE`,`columns`.`DATA_TYPE` AS `DATA_TYPE`,`columns`.`CHARACTER_MAXIMUM_LENGTH` AS `CHARACTER_MAXIMUM_LENGTH`,`columns`.`CHARACTER_OCTET_LENGTH` AS `CHARACTER_OCTET_LENGTH`,`columns`.`NUMERIC_PRECISION` AS `NUMERIC_PRECISION`,`columns`.`NUMERIC_SCALE` AS `NUMERIC_SCALE`,`columns`.`DATETIME_PRECISION` AS `DATETIME_PRECISION`,`columns`.`CHARACTER_SET_NAME` AS `CHARACTER_SET_NAME`,`columns`.`COLLATION_NAME` AS `COLLATION_NAME`,`columns`.`COLUMN_TYPE` AS `COLUMN_TYPE`,`columns`.`COLUMN_KEY` AS `COLUMN_KEY`,`columns`.`EXTRA` AS `EXTRA`,`columns`.`PRIVILEGES` AS `PRIVILEGES`,`columns`.`COLUMN_COMMENT` AS `COLUMN_COMMENT`,`columns`.`GENERATION_EXPRESSION` AS `GENERATION_EXPRESSION`,`columns`.`SRS_ID` AS `SRS_ID` from `information_schema`.`COLUMNS` `columns` where (`columns`.`TABLE_SCHEMA` = 'EDS') */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_EDS_TABLES`
--

/*!50001 DROP VIEW IF EXISTS `V_EDS_TABLES`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_EDS_TABLES` AS select `tables`.`TABLE_CATALOG` AS `TABLE_CATALOG`,`tables`.`TABLE_SCHEMA` AS `TABLE_SCHEMA`,`tables`.`TABLE_NAME` AS `TABLE_NAME`,`tables`.`TABLE_COMMENT` AS `TABLE_COMMENT`,`tables`.`TABLE_ROWS` AS `TABLE_ROWS`,`tables`.`UPDATE_TIME` AS `UPDATE_TIME` from `information_schema`.`TABLES` `tables` where (`tables`.`TABLE_SCHEMA` = 'EDS') */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_EMPL`
--

/*!50001 DROP VIEW IF EXISTS `V_EMPL`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_EMPL` AS select `emp`.`PERS_KEY` AS `personKey`,`org`.`ORG_KEY` AS `orgKey`,`src`.`SOURCE` AS `employeeSourceName`,`pers`.`SOURCE_ID` AS `employeeSourceID`,`typ`.`REF_VAL` AS `employeeRecordTypeCode`,`typ`.`REF_VAL_DESC` AS `employeeRecordTypeDesc`,`styp`.`REF_VAL` AS `employeeRecordSubtypeCode`,`styp`.`REF_VAL_DESC` AS `employeeRecordSubtypeDesc`,`stat`.`REF_VAL` AS `employeeRecordStatusCode`,`stat`.`REF_VAL_DESC` AS `employeeRecordStatusDesc`,`pers`.`CASE_EXCPTN_FIRST_NM` AS `employeeFirstName`,`pers`.`CASE_EXCPTN_MIDDLE_NM` AS `employeeMiddleName`,`pers`.`CASE_EXCPTN_LAST_NM` AS `employeeLastName`,`pers`.`CASE_EXCPTN_PERS_PREF_NM` AS `employeePreferredName`,`emp`.`TITLE_NM` AS `employeeTitle`,`org`.`ORG_SHORT_NM` AS `employeeEmployerOrgShortName`,`org`.`ORG_LONG_NM` AS `employeeEmployerOrgLongName`,`pers`.`BIRTH_DT` AS `employeeBirthDate`,`gend`.`REF_VAL` AS `employeeGenderCode`,`gend`.`REF_VAL_DESC` AS `employeeGenderDesc`,`pers`.`OTHER_GENDER_VAL` AS `employeeOtherGenderValue`,`lang`.`REF_VAL` AS `employeeLanguageCode`,`lang`.`REF_VAL_DESC` AS `employeeLanguageDesc`,cast(`emp`.`EFF_START_TS` as date) AS `empStartDate`,cast(`emp`.`EFF_END_TS` as date) AS `empEndDate`,`emp`.`SOURCE_CREATE_USER_VAL` AS `employeeSourceCreateUserValue`,`emp`.`SOURCE_CHG_USER_VAL` AS `employeeSourceChangeUserValue`,`emp`.`SOURCE_CHG_PRCS_VAL` AS `employeeSourceChangeProcessValue`,`emp`.`SOURCE_CHG_REASN_VAL` AS `employeeSourceChangeReasonValue`,`emp`.`SOURCE_CREATE_TS` AS `employeeSourceCreateTimestamp`,`emp`.`SOURCE_UPD_TS` AS `employeeSourceUpdateTimestamp`,`emp`.`CREATE_TS` AS `employeeCreateTimestamp`,`emp`.`CREATE_PRCS_VAL` AS `employeeCreateProcessValue`,`emp`.`UPD_TS` AS `employeeUpdateTimestamp`,`emp`.`UPD_PRCS_VAL` AS `employeeUpdateProcessValue`,`emp`.`DEL_FLAG` AS `employeeDeleteFlag` from ((((((((`EMPL` `emp` join `PERS` `pers` on((`pers`.`PERS_KEY` = `emp`.`PERS_KEY`))) join `ORG` `org` on((`org`.`ORG_KEY` = `emp`.`ORG_KEY`))) join `SOURCE` `src` on((`src`.`SOURCE_KEY` = `emp`.`SOURCE_KEY`))) join `REF_VAL` `typ` on((`typ`.`REF_VAL_RKEY` = `emp`.`REC_TYP_RKEY`))) left join `REF_VAL` `styp` on((`styp`.`REF_VAL_RKEY` = `emp`.`REC_SUBTYP_RKEY`))) join `REF_VAL` `stat` on((`stat`.`REF_VAL_RKEY` = `emp`.`STAT_RKEY`))) left join `REF_VAL` `gend` on((`gend`.`REF_VAL_RKEY` = `pers`.`GENDER_RKEY`))) left join `REF_VAL` `lang` on((`lang`.`REF_VAL_RKEY` = `pers`.`LANG_RKEY`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_HCO_FCLTY`
--

/*!50001 DROP VIEW IF EXISTS `V_HCO_FCLTY`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_HCO_FCLTY` AS select `fclty`.`HCO_FCLTY_KEY` AS `hcoFacilityKey`,`src`.`SOURCE` AS `facilitySourceName`,`fclty`.`SOURCE_ID` AS `facilitySourceID`,`org`.`ORG_KEY` AS `orgKey`,`plc`.`PLACE_KEY` AS `placeKey`,`cust`.`CUST_ACCT_KEY` AS `customerAccountKey`,`typ`.`REF_VAL` AS `facilityRecordTypeCode`,`typ`.`REF_VAL_DESC` AS `facilityRecordTypeDesc`,`styp`.`REF_VAL` AS `facilityRecordSubtypeCode`,`styp`.`REF_VAL_DESC` AS `facilityRecordSubtypeDesc`,`stat`.`REF_VAL` AS `facilityRecordStatusCode`,`stat`.`REF_VAL_DESC` AS `facilityRecordStatusDesc`,`fclty`.`HCO_FCLTY_NM` AS `facilityName`,`fclty`.`HCO_FCLTY_PREF_NM` AS `facilityPreferredName`,`cust`.`CUST_ACCT_NUM` AS `facilityCustomerAccountNum`,`lang`.`REF_VAL` AS `facilityLanguageCode`,`lang`.`REF_VAL_DESC` AS `facilityLanguageDesc`,`addrtyp`.`REF_VAL` AS `facilityPreferredAddressTypeCode`,`addrtyp`.`REF_VAL_DESC` AS `facilityPreferredAddressTypeDesc`,`fclty`.`COMMENT_TXT` AS `facilityComment`,cast(`fclty`.`EFF_START_TS` as date) AS `facilityStartDate`,cast(`fclty`.`EFF_END_TS` as date) AS `facilityEndDate`,`fclty`.`SOURCE_CREATE_USER_VAL` AS `facilitySourceCreateUserValue`,`fclty`.`SOURCE_CHG_USER_VAL` AS `facilitySourceChangeUserValue`,`fclty`.`SOURCE_CHG_PRCS_VAL` AS `facilitySourceChangeProcessValue`,`fclty`.`SOURCE_CHG_REASN_VAL` AS `facilitySourceChangeReasonValue`,`fclty`.`SOURCE_CREATE_TS` AS `facilitySourceCreateTimestamp`,`fclty`.`SOURCE_UPD_TS` AS `facilitySourceUpdateTimestamp`,`fclty`.`CREATE_TS` AS `facilityCreateTimestamp`,`fclty`.`CREATE_PRCS_VAL` AS `facilityCreateProcessValue`,`fclty`.`UPD_TS` AS `facilityUpdateTimestamp`,`fclty`.`UPD_PRCS_VAL` AS `facilityUpdateProcessValue`,`fclty`.`DEL_FLAG` AS `facilityDeleteFlag` from (((((((((`HCO_FCLTY` `fclty` join `ORG` `org` on((`org`.`ORG_KEY` = `fclty`.`ORG_KEY`))) join `PLACE` `plc` on((`plc`.`PLACE_KEY` = `fclty`.`PLACE_KEY`))) left join `CUST_ACCT` `cust` on((`cust`.`CUST_ACCT_KEY` = `fclty`.`CUST_ACCT_KEY`))) join `SOURCE` `src` on((`src`.`SOURCE_KEY` = `fclty`.`SOURCE_KEY`))) join `REF_VAL` `typ` on((`typ`.`REF_VAL_RKEY` = `fclty`.`REC_TYP_RKEY`))) left join `REF_VAL` `styp` on((`styp`.`REF_VAL_RKEY` = `fclty`.`REC_SUBTYP_RKEY`))) join `REF_VAL` `stat` on((`stat`.`REF_VAL_RKEY` = `fclty`.`STAT_RKEY`))) left join `REF_VAL` `lang` on((`lang`.`REF_VAL_RKEY` = `fclty`.`LANG_RKEY`))) left join `REF_VAL` `addrtyp` on((`addrtyp`.`REF_VAL_RKEY` = `fclty`.`ADDR_TYP_RKEY`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_HCO_FCLTY_POSTAL_ADDR`
--

/*!50001 DROP VIEW IF EXISTS `V_HCO_FCLTY_POSTAL_ADDR`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_HCO_FCLTY_POSTAL_ADDR` AS select `fcltypaddr`.`HCO_FCLTY_KEY` AS `hcoFacilityKey`,`src`.`SOURCE` AS `hcoFacilitySourceName`,`fcltypaddr`.`SOURCE_ID` AS `hcoFacilitySourceID`,`stat`.`REF_VAL` AS `hcoFacilityPostalAddressRecordStatusCode`,`stat`.`REF_VAL_DESC` AS `hcoFacilityPostalAddressRecordStatusDesc`,`paddrstat`.`REF_VAL` AS `postalAddressRecordStatusCode`,`paddrstat`.`REF_VAL_DESC` AS `postalAddressRecordStatusDesc`,`addrtyp`.`REF_VAL` AS `postalAddressTypeCode`,`addrtyp`.`REF_VAL_DESC` AS `postalAddressTypeDesc`,`paddr`.`LN1_VAL` AS `hcoFacilityPostalAddressLine1Val`,`paddr`.`LN2_VAL` AS `hcoFacilityPostalAddressLine2Val`,`paddr`.`LN3_VAL` AS `hcoFacilityPostalAddressLine3Val`,`paddr`.`LN4_VAL` AS `hcoFacilityPostalAddressLine4Val`,`paddr`.`LN5_VAL` AS `hcoFacilityPostalAddressLine5Val`,`paddr`.`ATTN_LN_VAL` AS `hcoFacilityPostalAddressAttentionLine`,`paddr`.`GEOCODE_VAL` AS `hcoFacilityPostalAddressGeocodeVal`,`paddr`.`LAT_VAL` AS `hcoFacilityPostalAddressLatitude`,`paddr`.`LON_VAL` AS `hcoFacilityPostalAddressLongitude`,`paddr`.`ALT_VAL` AS `hcoFacilityPostalAddressAltitude`,`paddr`.`COUNTY_NM` AS `hcoFacilityPostalAddressCountyName`,`paddr`.`CITY_NM` AS `hcoFacilityPostalAddressCityName`,`paddr`.`DISTRICT_NM` AS `hcoFacilityPostalAddressDistrictName`,`paddr`.`NEIGHBRHD_NM` AS `hcoFacilityPostalAddressNeighborhoodName`,`paddr`.`POSTAL_CD_VAL` AS `hcoFacilityPostalAddressPostalCode`,`fcltypaddr`.`PRIORITY_VAL` AS `hcoFacilityPostalAddressPriorityVal`,`cntry`.`PLACE_SHORT_NM` AS `postalAddressCountryCode`,`cntry`.`PLACE_LONG_NM` AS `postalAddressCountryName`,`reg`.`PLACE_SHORT_NM` AS `postalAddressRegionCode`,`reg`.`PLACE_LONG_NM` AS `postalAddressRegionName`,`tz`.`PLACE_SHORT_NM` AS `postalAddressTimezoneCode`,`tz`.`PLACE_LONG_NM` AS `postalAddressTimezoneName`,`paddr`.`TZ_TXT` AS `postalAddressTimezoneText`,`addrusg`.`REF_VAL` AS `hcoFacilityPostalAddressUsageCode`,`addrusg`.`REF_VAL_DESC` AS `hcoFacilityPostalAddressUsageDesc`,`prefind`.`REF_VAL` AS `hcoFacilityPostalAddressPreferredIndicator`,`mailind`.`REF_VAL` AS `hcoFacilityPostalAddressAcceptMailIndicator`,`pkgind`.`REF_VAL` AS `hcoFacilityPostalAddressAcceptPackageIndicator`,`validind`.`REF_VAL` AS `hcoFacilityPostalAddressValidatedIndicator`,`validrsn`.`REF_VAL` AS `hcoFacilityPostalAddressValidationReasonCode`,`validrsn`.`REF_VAL_DESC` AS `hcoFacilityPostalAddressValidationReasonDesc`,`lang`.`REF_VAL` AS `hcoFacilityPostalAddressLanguageCode`,`lang`.`REF_VAL_DESC` AS `hcoFacilityPostalAddressLanguageDesc`,cast(`fcltypaddr`.`EFF_START_TS` as date) AS `hcoFacilityPostalAddressStartDate`,cast(`fcltypaddr`.`EFF_END_TS` as date) AS `hcoFacilityPostalAddressEndDate`,`fcltypaddr`.`SOURCE_CREATE_USER_VAL` AS `hcoFacilityPostalAddressSourceCreateUserValue`,`fcltypaddr`.`SOURCE_CHG_USER_VAL` AS `hcoFacilityPostalAddressSourceChangeUserValue`,`fcltypaddr`.`SOURCE_CHG_PRCS_VAL` AS `hcoFacilityPostalAddressSourceChangeProcessValue`,`fcltypaddr`.`SOURCE_CHG_REASN_VAL` AS `hcoFacilityPostalAddressSourceChangeReasonValue`,`fcltypaddr`.`SOURCE_CREATE_TS` AS `hcoFacilityPostalAddressSourceCreateTimestamp`,`fcltypaddr`.`SOURCE_UPD_TS` AS `hcoFacilityPostalAddressSourceUpdateTimestamp`,`fcltypaddr`.`CREATE_TS` AS `hcoFacilityPostalAddressCreateTimestamp`,`fcltypaddr`.`CREATE_PRCS_VAL` AS `hcoFacilityPostalAddressCreateProcessValue`,`fcltypaddr`.`UPD_TS` AS `hcoFacilityPostalAddressUpdateTimestamp`,`fcltypaddr`.`UPD_PRCS_VAL` AS `hcoFacilityPostalAddressUpdateProcessValue`,`fcltypaddr`.`DEL_FLAG` AS `hcoFacilityPostalAddressDeleteFlag` from (((((((((((((((`HCO_FCLTY_POSTAL_ADDR` `fcltypaddr` join `SOURCE` `src` on((`src`.`SOURCE_KEY` = `fcltypaddr`.`SOURCE_KEY`))) join `POSTAL_ADDR` `paddr` on((`paddr`.`POSTAL_ADDR_KEY` = `fcltypaddr`.`POSTAL_ADDR_KEY`))) join `REF_VAL` `stat` on((`stat`.`REF_VAL_RKEY` = `fcltypaddr`.`STAT_RKEY`))) join `REF_VAL` `paddrstat` on((`paddrstat`.`REF_VAL_RKEY` = `paddr`.`STAT_RKEY`))) join `REF_VAL` `addrusg` on((`addrusg`.`REF_VAL_RKEY` = `fcltypaddr`.`ADDR_USAGE_TYP_RKEY`))) join `REF_VAL` `prefind` on((`prefind`.`REF_VAL_RKEY` = `paddr`.`ADDR_TYP_RKEY`))) join `REF_VAL` `addrtyp` on((`addrtyp`.`REF_VAL_RKEY` = `paddr`.`ADDR_TYP_RKEY`))) join `REF_VAL` `validind` on((`validind`.`REF_VAL_RKEY` = `paddr`.`VALID_IND_RKEY`))) left join `REF_VAL` `validrsn` on((`validrsn`.`REF_VAL_RKEY` = `paddr`.`VALID_REASN_RKEY`))) left join `REF_VAL` `lang` on((`lang`.`REF_VAL_RKEY` = `paddr`.`LANG_RKEY`))) join `REF_VAL` `mailind` on((`mailind`.`REF_VAL_RKEY` = `paddr`.`ACCEPT_MAIL_IND_RKEY`))) join `REF_VAL` `pkgind` on((`pkgind`.`REF_VAL_RKEY` = `paddr`.`ACCEPT_PKG_IND_RKEY`))) join `PLACE` `cntry` on((`cntry`.`PLACE_KEY` = `paddr`.`CNTRY_PLACE_KEY`))) join `PLACE` `reg` on((`reg`.`PLACE_KEY` = `paddr`.`REGION_PLACE_KEY`))) left join `PLACE` `tz` on((`tz`.`PLACE_KEY` = `paddr`.`TZ_PLACE_KEY`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_HCO_FCLTY_VIRTUAL_ADDR`
--

/*!50001 DROP VIEW IF EXISTS `V_HCO_FCLTY_VIRTUAL_ADDR`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_HCO_FCLTY_VIRTUAL_ADDR` AS select `fcltyvaddr`.`HCO_FCLTY_KEY` AS `hcoFacilityKey`,`src`.`SOURCE` AS `hcoFacilitySourceName`,`fcltyvaddr`.`SOURCE_ID` AS `hcoFacilitySourceID`,`stat`.`REF_VAL` AS `hcoFacilityVirtualAddressRecordStatusCode`,`stat`.`REF_VAL_DESC` AS `hcoFacilityVirtualAddressRecordStatusDesc`,`vaddrstat`.`REF_VAL` AS `virtualAddressRecordStatusCode`,`vaddrstat`.`REF_VAL_DESC` AS `virtualAddressRecordStatusDesc`,`vaddr`.`LAND_LINE_POSTAL_ADDR_KEY` AS `virtualAddressLandLinePostalAddressKey`,`addrtyp`.`REF_VAL` AS `virtualAddressTypeCode`,`addrtyp`.`REF_VAL_DESC` AS `virtualAddressTypeDesc`,`vaddr`.`VIRTUAL_ADDR_VAL` AS `hcoFacilityVirtualAddressVal`,`vaddr`.`VIRTUAL_ADDR_EXT_VAL` AS `hcoFacilityVirtualAddressExtendedVal`,`fcltyvaddr`.`PRIORITY_VAL` AS `hcoFacilityVirtualAddressPriorityVal`,`plc`.`PLACE_SHORT_NM` AS `virtualAddressCountryCode`,`plc`.`PLACE_LONG_NM` AS `virtualAddressCountryName`,`addrusg`.`REF_VAL` AS `hcoFacilityVirtualAddressUsageCode`,`addrusg`.`REF_VAL_DESC` AS `hcoFacilityVirtualAddressUsageDesc`,`prefind`.`REF_VAL` AS `hcoFacilityVirtualAddressPreferredIndicator`,`txtind`.`REF_VAL` AS `hcoFacilityVirtualAddressAcceptsTextMessageIndicator`,`vmind`.`REF_VAL` AS `hcoFacilityVirtualAddressAcceptsVoicemailMessageIndicator`,`validind`.`REF_VAL` AS `hcoFacilityVirtualAddressValidatedIndicator`,cast(`fcltyvaddr`.`EFF_START_TS` as date) AS `hcoFacilityVirtualAddressStartDate`,cast(`fcltyvaddr`.`EFF_END_TS` as date) AS `hcoFacilityVirtualAddressEndDate`,`fcltyvaddr`.`SOURCE_CREATE_USER_VAL` AS `hcoFacilityVirtualAddressSourceCreateUserValue`,`fcltyvaddr`.`SOURCE_CHG_USER_VAL` AS `hcoFacilityVirtualAddressSourceChangeUserValue`,`fcltyvaddr`.`SOURCE_CHG_PRCS_VAL` AS `hcoFacilityVirtualAddressSourceChangeProcessValue`,`fcltyvaddr`.`SOURCE_CHG_REASN_VAL` AS `hcoFacilityVirtualAddressSourceChangeReasonValue`,`fcltyvaddr`.`SOURCE_CREATE_TS` AS `hcoFacilityVirtualAddressSourceCreateTimestamp`,`fcltyvaddr`.`SOURCE_UPD_TS` AS `hcoFacilityVirtualAddressSourceUpdateTimestamp`,`fcltyvaddr`.`CREATE_TS` AS `hcoFacilityVirtualAddressCreateTimestamp`,`fcltyvaddr`.`CREATE_PRCS_VAL` AS `hcoFacilityVirtualAddressCreateProcessValue`,`fcltyvaddr`.`UPD_TS` AS `hcoFacilityVirtualAddressUpdateTimestamp`,`fcltyvaddr`.`UPD_PRCS_VAL` AS `hcoFacilityVirtualAddressUpdateProcessValue`,`fcltyvaddr`.`DEL_FLAG` AS `hcoFacilityVirtualAddressDeleteFlag` from (((((((((((`HCO_FCLTY_VIRTUAL_ADDR` `fcltyvaddr` join `SOURCE` `src` on((`src`.`SOURCE_KEY` = `fcltyvaddr`.`SOURCE_KEY`))) join `VIRTUAL_ADDR` `vaddr` on((`vaddr`.`VIRTUAL_ADDR_KEY` = `fcltyvaddr`.`VIRTUAL_ADDR_KEY`))) join `REF_VAL` `stat` on((`stat`.`REF_VAL_RKEY` = `fcltyvaddr`.`STAT_RKEY`))) join `REF_VAL` `vaddrstat` on((`vaddrstat`.`REF_VAL_RKEY` = `vaddr`.`STAT_RKEY`))) join `REF_VAL` `addrusg` on((`addrusg`.`REF_VAL_RKEY` = `fcltyvaddr`.`ADDR_USAGE_TYP_RKEY`))) join `REF_VAL` `prefind` on((`prefind`.`REF_VAL_RKEY` = `vaddr`.`ADDR_TYP_RKEY`))) join `REF_VAL` `addrtyp` on((`addrtyp`.`REF_VAL_RKEY` = `vaddr`.`ADDR_TYP_RKEY`))) join `REF_VAL` `validind` on((`validind`.`REF_VAL_RKEY` = `vaddr`.`VALID_IND_RKEY`))) join `REF_VAL` `vmind` on((`vmind`.`REF_VAL_RKEY` = `fcltyvaddr`.`ACCEPT_VOICE_MSG_IND_RKEY`))) join `REF_VAL` `txtind` on((`txtind`.`REF_VAL_RKEY` = `fcltyvaddr`.`ACCEPT_TXT_MSG_IND_RKEY`))) left join `PLACE` `plc` on((`plc`.`PLACE_KEY` = `vaddr`.`CNTRY_PLACE_KEY`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_HCO_SPCLTY`
--

/*!50001 DROP VIEW IF EXISTS `V_HCO_SPCLTY`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_HCO_SPCLTY` AS select `hcospec`.`ORG_KEY` AS `orgKey`,`src`.`SOURCE` AS `hcoSpecialtySourceName`,`hcospec`.`SOURCE_ID` AS `hcoSpecialtySourceID`,`stat`.`REF_VAL` AS `hcoSpecialtyRecordStatusCode`,`stat`.`REF_VAL_DESC` AS `hcoSpecialtyRecordStatusDesc`,`spec`.`REF_VAL` AS `hcoSpecialtyCode`,`spec`.`REF_VAL_DESC` AS `hcoSpecialtyDesc`,`hcospec`.`PRIORITY_VAL` AS `hcoSpecialtyPriorityValue`,`hcospec`.`SOURCE_CREATE_USER_VAL` AS `hcoSpecialtySourceCreateUserValue`,`hcospec`.`SOURCE_CHG_USER_VAL` AS `hcoSpecialtySourceChangeUserValue`,`hcospec`.`SOURCE_CHG_PRCS_VAL` AS `hcoSpecialtySourceChangeProcessValue`,`hcospec`.`SOURCE_CHG_REASN_VAL` AS `hcoSpecialtySourceChangeReasonValue`,`hcospec`.`SOURCE_CREATE_TS` AS `hcoSpecialtySourceCreateTimestamp`,`hcospec`.`SOURCE_UPD_TS` AS `hcoSpecialtySourceUpdateTimestamp`,`hcospec`.`CREATE_TS` AS `hcoSpecialtyCreateTimestamp`,`hcospec`.`CREATE_PRCS_VAL` AS `hcoSpecialtyCreateProcessValue`,`hcospec`.`UPD_TS` AS `hcoSpecialtyUpdateTimestamp`,`hcospec`.`UPD_PRCS_VAL` AS `hcoSpecialtyUpdateProcessValue`,`hcospec`.`DEL_FLAG` AS `hcoSpecialtyDeleteFlag` from ((((`HCO_SPCLTY` `hcospec` join `ORG` `org` on((`org`.`ORG_KEY` = `hcospec`.`ORG_KEY`))) join `SOURCE` `src` on((`src`.`SOURCE_KEY` = `hcospec`.`SOURCE_KEY`))) join `REF_VAL` `stat` on((`stat`.`REF_VAL_RKEY` = `hcospec`.`STAT_RKEY`))) join `REF_VAL` `spec` on((`spec`.`REF_VAL_RKEY` = `hcospec`.`SPCLTY_RKEY`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_HCP`
--

/*!50001 DROP VIEW IF EXISTS `V_HCP`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_HCP` AS select `hcp`.`HCP_KEY` AS `hcpKey`,`src`.`SOURCE` AS `hcpSourceName`,`hcp`.`SOURCE_ID` AS `hcpSourceID`,`pers`.`PERS_KEY` AS `personKey`,`org`.`ORG_KEY` AS `orgKey`,`typ`.`REF_VAL` AS `hcpRecordTypeCode`,`typ`.`REF_VAL_DESC` AS `hcpRecordTypeDesc`,`styp`.`REF_VAL` AS `hcpRecordSubtypeCode`,`styp`.`REF_VAL_DESC` AS `hcpRecordSubtypeDesc`,`stat`.`REF_VAL` AS `hcpRecordStatusCode`,`stat`.`REF_VAL_DESC` AS `hcpRecordStatusDesc`,`statrsn`.`REF_VAL` AS `hcpRecordStatusReasonCode`,`statrsn`.`REF_VAL_DESC` AS `hcpRecordStatusReasonDesc`,`pers`.`CASE_EXCPTN_FIRST_NM` AS `hcpFirstName`,`pers`.`CASE_EXCPTN_MIDDLE_NM` AS `hcpMiddleName`,`pers`.`CASE_EXCPTN_LAST_NM` AS `hcpLastName`,`pers`.`CASE_EXCPTN_PERS_PREF_NM` AS `hcpPreferredName`,`prefix`.`REF_VAL` AS `personNamePrefix`,`suffix`.`REF_VAL` AS `personNameSuffix`,`psuffix`.`REF_VAL` AS `personNameProfessionalSuffix`,`noproc`.`REF_VAL` AS `hcpNoProceduresIndicator`,`noflwup`.`REF_VAL` AS `hcpNoFollowupIndicator`,`lang`.`REF_VAL` AS `hcpPrimaryLanguageCode`,`lang`.`REF_VAL_DESC` AS `hcpPrimaryLanguageDesc`,`seclang`.`REF_VAL` AS `hcpSecondaryLanguageCode`,`seclang`.`REF_VAL_DESC` AS `hcpSecondaryLanguageDesc`,`addrtyp`.`REF_VAL` AS `hcpPreferredAddressTypeCode`,`addrtyp`.`REF_VAL_DESC` AS `hcpPreferredAddressTypeDesc`,`hcporig`.`REF_VAL` AS `hcpOriginatorCode`,`hcporig`.`REF_VAL_DESC` AS `hcpOriginatorDesc`,`origorg`.`ORG_SHORT_NM` AS `hcpOriginatingNationShortName`,`origorg`.`ORG_LONG_NM` AS `hcpOriginatingNationLongName`,`hcp`.`COMMENT_TXT` AS `hcpComment`,cast(`hcp`.`EFF_START_TS` as date) AS `hcpStartDate`,cast(`hcp`.`EFF_END_TS` as date) AS `hcpEndDate`,`hcp`.`SOURCE_CREATE_USER_VAL` AS `hcpSourceCreateUserValue`,`hcp`.`SOURCE_CHG_USER_VAL` AS `hcpSourceChangeUserValue`,`hcp`.`SOURCE_CHG_PRCS_VAL` AS `hcpSourceChangeProcessValue`,`hcp`.`SOURCE_CHG_REASN_VAL` AS `hcpSourceChangeReasonValue`,`hcp`.`SOURCE_CREATE_TS` AS `hcpSourceCreateTimestamp`,`hcp`.`SOURCE_UPD_TS` AS `hcpSourceUpdateTimestamp`,`hcp`.`CREATE_TS` AS `hcpCreateTimestamp`,`hcp`.`CREATE_PRCS_VAL` AS `hcpCreateProcessValue`,`hcp`.`UPD_TS` AS `hcpUpdateTimestamp`,`hcp`.`UPD_PRCS_VAL` AS `hcpUpdateProcessValue`,`hcp`.`DEL_FLAG` AS `hcpDeleteFlag` from (((((((((((((((((`HCP` `hcp` join `SOURCE` `src` on((`src`.`SOURCE_KEY` = `hcp`.`SOURCE_KEY`))) join `PERS` `pers` on((`pers`.`PERS_KEY` = `hcp`.`PERS_KEY`))) join `ORG` `org` on((`org`.`ORG_KEY` = `hcp`.`ORG_KEY`))) join `REF_VAL` `typ` on((`typ`.`REF_VAL_RKEY` = `hcp`.`REC_TYP_RKEY`))) left join `REF_VAL` `styp` on((`styp`.`REF_VAL_RKEY` = `hcp`.`REC_SUBTYP_RKEY`))) join `REF_VAL` `stat` on((`stat`.`REF_VAL_RKEY` = `hcp`.`STAT_RKEY`))) left join `REF_VAL` `statrsn` on((`statrsn`.`REF_VAL_RKEY` = `hcp`.`STAT_REASN_RKEY`))) left join `ORG` `origorg` on((`origorg`.`ORG_KEY` = `hcp`.`ORIGIN_NATION_ORG_KEY`))) left join `REF_VAL` `lang` on((`lang`.`REF_VAL_RKEY` = `hcp`.`PRIM_LANG_RKEY`))) left join `REF_VAL` `seclang` on((`seclang`.`REF_VAL_RKEY` = `hcp`.`SEC_LANG_RKEY`))) left join `REF_VAL` `addrtyp` on((`addrtyp`.`REF_VAL_RKEY` = `hcp`.`ADDR_TYP_RKEY`))) left join `REF_VAL` `prefix` on((`prefix`.`REF_VAL_RKEY` = `pers`.`NAME_PREFIX_RKEY`))) left join `REF_VAL` `suffix` on((`suffix`.`REF_VAL_RKEY` = `pers`.`NAME_SUFFIX_RKEY`))) left join `REF_VAL` `psuffix` on((`psuffix`.`REF_VAL_RKEY` = `pers`.`PROF_SUFFIX_RKEY`))) left join `REF_VAL` `hcporig` on((`hcporig`.`REF_VAL_RKEY` = `hcp`.`HCP_ORIG_RKEY`))) left join `REF_VAL` `noproc` on((`noproc`.`REF_VAL_RKEY` = `hcp`.`NO_PROC_IND_RKEY`))) left join `REF_VAL` `noflwup` on((`noflwup`.`REF_VAL_RKEY` = `hcp`.`NO_FOLLOWUP_IND_RKEY`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_HCP_ALT_ID`
--

/*!50001 DROP VIEW IF EXISTS `V_HCP_ALT_ID`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_HCP_ALT_ID` AS select `hcpaltid`.`HCP_KEY` AS `hcpKey`,`src`.`SOURCE` AS `hcpAlternateIDSourceName`,`hcpaltid`.`SOURCE_ID` AS `hcpAlternateIDSourceID`,`stat`.`REF_VAL` AS `hcpAlternateIDRecordStatusCode`,`stat`.`REF_VAL_DESC` AS `hcpAlternateIDRecordStatusDesc`,`idtyp`.`REF_VAL` AS `hcpAlternateIDType`,`idtyp`.`REF_VAL_DESC` AS `hcpAlternateIDTypeDesc`,`hcpaltid`.`ALT_ID_VAL` AS `hcpAlternateIDValue`,`origorg`.`ORG_KEY` AS `hcpAlternateIDoriginatingOrgKey`,`origorg`.`ORG_SHORT_NM` AS `hcpAlternateIDOriginatingOrgShortName`,`origorg`.`ORG_LONG_NM` AS `hcpAlternateIDOriginatingOrgLongName`,`hcpaltid`.`SOURCE_CREATE_USER_VAL` AS `hcpAlternateIDSourceCreateUserValue`,`hcpaltid`.`SOURCE_CHG_USER_VAL` AS `hcpAlternateIDSourceChangeUserValue`,`hcpaltid`.`SOURCE_CHG_PRCS_VAL` AS `hcpAlternateIDSourceChangeProcessValue`,`hcpaltid`.`SOURCE_CHG_REASN_VAL` AS `hcpAlternateIDSourceChangeReasonValue`,`hcpaltid`.`SOURCE_CREATE_TS` AS `hcpAlternateIDSourceCreateTimestamp`,`hcpaltid`.`SOURCE_UPD_TS` AS `hcpAlternateIDSourceUpdateTimestamp`,`hcpaltid`.`CREATE_TS` AS `hcpAlternateIDCreateTimestamp`,`hcpaltid`.`CREATE_PRCS_VAL` AS `hcpAlternateIDCreateProcessValue`,`hcpaltid`.`UPD_TS` AS `hcpAlternateIDUpdateTimestamp`,`hcpaltid`.`UPD_PRCS_VAL` AS `hcpAlternateIDUpdateProcessValue`,`hcpaltid`.`DEL_FLAG` AS `hcpAlternateIDDeleteFlag` from (((((`HCP_ALT_ID` `hcpaltid` join `HCP` `hcp` on((`hcp`.`HCP_KEY` = `hcpaltid`.`HCP_KEY`))) join `SOURCE` `src` on((`src`.`SOURCE_KEY` = `hcpaltid`.`SOURCE_KEY`))) join `REF_VAL` `stat` on((`stat`.`REF_VAL_RKEY` = `hcpaltid`.`STAT_RKEY`))) join `REF_VAL` `idtyp` on((`idtyp`.`REF_VAL_RKEY` = `hcpaltid`.`ALT_ID_TYP_RKEY`))) left join `ORG` `origorg` on((`origorg`.`ORG_KEY` = `hcpaltid`.`ORIGIN_ORG_KEY`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_HCP_POSTAL_ADDR`
--

/*!50001 DROP VIEW IF EXISTS `V_HCP_POSTAL_ADDR`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_HCP_POSTAL_ADDR` AS select `hcppaddr`.`HCP_KEY` AS `hcpKey`,`src`.`SOURCE` AS `hcpPostalAddressSourceName`,`hcppaddr`.`SOURCE_ID` AS `hcpPostalAddressSourceID`,`stat`.`REF_VAL` AS `hcpPostalAddressRecordStatusCode`,`stat`.`REF_VAL_DESC` AS `hcpPostalAddressRecordStatusDesc`,`paddrstat`.`REF_VAL` AS `postalAddressRecordStatusCode`,`paddrstat`.`REF_VAL_DESC` AS `postalAddressRecordStatusDesc`,`addrtyp`.`REF_VAL` AS `postalAddressTypeCode`,`addrtyp`.`REF_VAL_DESC` AS `postalAddressTypeDesc`,`paddr`.`LN1_VAL` AS `hcpPostalAddressLine1Val`,`paddr`.`LN2_VAL` AS `hcpPostalAddressLine2Val`,`paddr`.`LN3_VAL` AS `hcpPostalAddressLine3Val`,`paddr`.`LN4_VAL` AS `hcpPostalAddressLine4Val`,`paddr`.`LN5_VAL` AS `hcpPostalAddressLine5Val`,`paddr`.`ATTN_LN_VAL` AS `hcpPostalAddressAttentionLine`,`paddr`.`GEOCODE_VAL` AS `phcpPostalAddressGeocodeVal`,`paddr`.`LAT_VAL` AS `hcpPostalAddressLatitude`,`paddr`.`LON_VAL` AS `hcpPostalAddressLongitude`,`paddr`.`ALT_VAL` AS `hcpPostalAddressAltitude`,`paddr`.`COUNTY_NM` AS `hcpPostalAddressCountyName`,`paddr`.`CITY_NM` AS `hcpPostalAddressCityName`,`paddr`.`DISTRICT_NM` AS `hcpPostalAddressDistrictName`,`paddr`.`NEIGHBRHD_NM` AS `hcpPostalAddressNeighborhoodName`,`paddr`.`POSTAL_CD_VAL` AS `hcpPostalAddressPostalCode`,`hcppaddr`.`PRIORITY_VAL` AS `hcpPostalAddressPriorityVal`,`cntry`.`PLACE_SHORT_NM` AS `postalAddressCountryCode`,`cntry`.`PLACE_LONG_NM` AS `postalAddressCountryName`,`reg`.`PLACE_SHORT_NM` AS `postalAddressRegionCode`,`reg`.`PLACE_LONG_NM` AS `postalAddressRegionName`,`tz`.`PLACE_SHORT_NM` AS `postalAddressTimezoneCode`,`tz`.`PLACE_LONG_NM` AS `postalAddressTimezoneName`,`paddr`.`TZ_TXT` AS `postalAddressTimezoneText`,`addrusg`.`REF_VAL` AS `hcpPostalAddressUsageCode`,`addrusg`.`REF_VAL_DESC` AS `hcpPostalAddressUsageDesc`,`prefind`.`REF_VAL` AS `hcpPostalAddressPreferredIndicator`,`mailind`.`REF_VAL` AS `hcpPostalAddressAcceptMailIndicator`,`pkgind`.`REF_VAL` AS `hcpPostalAddressAcceptPackageIndicator`,`validind`.`REF_VAL` AS `hcpPostalAddressValidatedIndicator`,`validrsn`.`REF_VAL` AS `hcpPostalAddressValidationReasonCode`,`validrsn`.`REF_VAL_DESC` AS `hcpPostalAddressValidationReasonDesc`,`lang`.`REF_VAL` AS `hcpPostalAddressLanguageCode`,`lang`.`REF_VAL_DESC` AS `hcpPostalAddressLanguageDesc`,cast(`hcppaddr`.`EFF_START_TS` as date) AS `hcpPostalAddressStartDate`,cast(`hcppaddr`.`EFF_END_TS` as date) AS `hcpPostalAddressEndDate`,`hcppaddr`.`SOURCE_CREATE_USER_VAL` AS `hcpPostalAddressSourceCreateUserValue`,`hcppaddr`.`SOURCE_CHG_USER_VAL` AS `hcpPostalAddressSourceChangeUserValue`,`hcppaddr`.`SOURCE_CHG_PRCS_VAL` AS `hcpPostalAddressSourceChangeProcessValue`,`hcppaddr`.`SOURCE_CHG_REASN_VAL` AS `hcpPostalAddressSourceChangeReasonValue`,`hcppaddr`.`SOURCE_CREATE_TS` AS `hcpPostalAddressSourceCreateTimestamp`,`hcppaddr`.`SOURCE_UPD_TS` AS `hcpPostalAddressSourceUpdateTimestamp`,`hcppaddr`.`CREATE_TS` AS `hcpPostalAddressCreateTimestamp`,`hcppaddr`.`CREATE_PRCS_VAL` AS `hcpPostalAddressCreateProcessValue`,`hcppaddr`.`UPD_TS` AS `hcpPostalAddressUpdateTimestamp`,`hcppaddr`.`UPD_PRCS_VAL` AS `hcpPostalAddressUpdateProcessValue`,`hcppaddr`.`DEL_FLAG` AS `hcpPostalAddressDeleteFlag` from (((((((((((((((`HCP_POSTAL_ADDR` `hcppaddr` join `POSTAL_ADDR` `paddr` on((`paddr`.`POSTAL_ADDR_KEY` = `hcppaddr`.`POSTAL_ADDR_KEY`))) join `SOURCE` `src` on((`src`.`SOURCE_KEY` = `hcppaddr`.`SOURCE_KEY`))) join `REF_VAL` `stat` on((`stat`.`REF_VAL_RKEY` = `hcppaddr`.`STAT_RKEY`))) join `REF_VAL` `paddrstat` on((`paddrstat`.`REF_VAL_RKEY` = `paddr`.`STAT_RKEY`))) join `REF_VAL` `addrusg` on((`addrusg`.`REF_VAL_RKEY` = `hcppaddr`.`ADDR_USAGE_TYP_RKEY`))) join `REF_VAL` `prefind` on((`prefind`.`REF_VAL_RKEY` = `paddr`.`ADDR_TYP_RKEY`))) join `REF_VAL` `addrtyp` on((`addrtyp`.`REF_VAL_RKEY` = `paddr`.`ADDR_TYP_RKEY`))) join `REF_VAL` `validind` on((`validind`.`REF_VAL_RKEY` = `paddr`.`VALID_IND_RKEY`))) left join `REF_VAL` `validrsn` on((`validrsn`.`REF_VAL_RKEY` = `paddr`.`VALID_REASN_RKEY`))) left join `REF_VAL` `lang` on((`lang`.`REF_VAL_RKEY` = `paddr`.`LANG_RKEY`))) join `REF_VAL` `mailind` on((`mailind`.`REF_VAL_RKEY` = `paddr`.`ACCEPT_MAIL_IND_RKEY`))) join `REF_VAL` `pkgind` on((`pkgind`.`REF_VAL_RKEY` = `paddr`.`ACCEPT_PKG_IND_RKEY`))) join `PLACE` `cntry` on((`cntry`.`PLACE_KEY` = `paddr`.`CNTRY_PLACE_KEY`))) join `PLACE` `reg` on((`reg`.`PLACE_KEY` = `paddr`.`REGION_PLACE_KEY`))) left join `PLACE` `tz` on((`tz`.`PLACE_KEY` = `paddr`.`TZ_PLACE_KEY`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_HCP_SPCLTY`
--

/*!50001 DROP VIEW IF EXISTS `V_HCP_SPCLTY`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_HCP_SPCLTY` AS select `hcpspec`.`HCP_KEY` AS `hcpKey`,`src`.`SOURCE` AS `hcpSpecialtySourceName`,`hcpspec`.`SOURCE_ID` AS `hcpSpecialtySourceID`,`stat`.`REF_VAL` AS `hcpSpecialtyRecordStatusCode`,`stat`.`REF_VAL_DESC` AS `hcpSpecialtyRecordStatusDesc`,`spec`.`REF_VAL` AS `hcpSpecialtyCode`,`spec`.`REF_VAL_DESC` AS `hcpSpecialtyDesc`,`hcpspec`.`PRIORITY_VAL` AS `hcpSpecialtyPriorityValue`,`hcpspec`.`SOURCE_CREATE_USER_VAL` AS `hcpSpecialtySourceCreateUserValue`,`hcpspec`.`SOURCE_CHG_USER_VAL` AS `hcpSpecialtySourceChangeUserValue`,`hcpspec`.`SOURCE_CHG_PRCS_VAL` AS `hcpSpecialtySourceChangeProcessValue`,`hcpspec`.`SOURCE_CHG_REASN_VAL` AS `hcpSpecialtySourceChangeReasonValue`,`hcpspec`.`SOURCE_CREATE_TS` AS `hcpSpecialtySourceCreateTimestamp`,`hcpspec`.`SOURCE_UPD_TS` AS `hcpSpecialtySourceUpdateTimestamp`,`hcpspec`.`CREATE_TS` AS `hcpSpecialtyCreateTimestamp`,`hcpspec`.`CREATE_PRCS_VAL` AS `hcpSpecialtyCreateProcessValue`,`hcpspec`.`UPD_TS` AS `hcpSpecialtyUpdateTimestamp`,`hcpspec`.`UPD_PRCS_VAL` AS `hcpSpecialtyUpdateProcessValue`,`hcpspec`.`DEL_FLAG` AS `hcpSpecialtyDeleteFlag` from ((((`HCP_SPCLTY` `hcpspec` join `HCP` `hcp` on((`hcp`.`HCP_KEY` = `hcpspec`.`HCP_KEY`))) join `SOURCE` `src` on((`src`.`SOURCE_KEY` = `hcpspec`.`SOURCE_KEY`))) join `REF_VAL` `stat` on((`stat`.`REF_VAL_RKEY` = `hcpspec`.`STAT_RKEY`))) join `REF_VAL` `spec` on((`spec`.`REF_VAL_RKEY` = `hcpspec`.`SPCLTY_RKEY`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_HCP_VIRTUAL_ADDR`
--

/*!50001 DROP VIEW IF EXISTS `V_HCP_VIRTUAL_ADDR`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_HCP_VIRTUAL_ADDR` AS select `hcpvaddr`.`HCP_KEY` AS `hcpKey`,`src`.`SOURCE` AS `hcpVirtualAddressSourceName`,`hcpvaddr`.`SOURCE_ID` AS `hcpVirtualAddressSourceID`,`stat`.`REF_VAL` AS `hcpVirtualAddressRecordStatusCode`,`stat`.`REF_VAL_DESC` AS `hcpVirtualAddressRecordStatusDesc`,`vaddrstat`.`REF_VAL` AS `virtualAddressRecordStatusCode`,`vaddrstat`.`REF_VAL_DESC` AS `virtualAddressRecordStatusDesc`,`vaddr`.`LAND_LINE_POSTAL_ADDR_KEY` AS `virtualAddressLandLinePostalAddressKey`,`addrtyp`.`REF_VAL` AS `virtualAddressTypeCode`,`addrtyp`.`REF_VAL_DESC` AS `virtualAddressTypeDesc`,`vaddr`.`VIRTUAL_ADDR_VAL` AS `hcpVirtualAddressVal`,`vaddr`.`VIRTUAL_ADDR_EXT_VAL` AS `hcpVirtualAddressExtendedVal`,`hcpvaddr`.`PRIORITY_VAL` AS `hcpVirtualAddressPriorityVal`,`plc`.`PLACE_SHORT_NM` AS `virtualAddressCountryCode`,`plc`.`PLACE_LONG_NM` AS `virtualAddressCountryName`,`addrusg`.`REF_VAL` AS `hcpVirtualAddressUsageCode`,`addrusg`.`REF_VAL_DESC` AS `hcpVirtualAddressUsageDesc`,`prefind`.`REF_VAL` AS `hcpVirtualAddressPreferredIndicator`,`txtind`.`REF_VAL` AS `hcpVirtualAddressAcceptsTextMessageIndicator`,`vmind`.`REF_VAL` AS `hcpVirtualAddressAcceptsVoicemailMessageIndicator`,`validind`.`REF_VAL` AS `hcpVirtualAddressValidatedIndicator`,cast(`hcpvaddr`.`EFF_START_TS` as date) AS `hcpVirtualAddressStartDate`,cast(`hcpvaddr`.`EFF_END_TS` as date) AS `hcpVirtualAddressEndDate`,`hcpvaddr`.`SOURCE_CREATE_USER_VAL` AS `hcpVirtualAddressSourceCreateUserValue`,`hcpvaddr`.`SOURCE_CHG_USER_VAL` AS `hcpVirtualAddressSourceChangeUserValue`,`hcpvaddr`.`SOURCE_CHG_PRCS_VAL` AS `hcpVirtualAddressSourceChangeProcessValue`,`hcpvaddr`.`SOURCE_CHG_REASN_VAL` AS `hcpVirtualAddressSourceChangeReasonValue`,`hcpvaddr`.`SOURCE_CREATE_TS` AS `hcpVirtualAddressSourceCreateTimestamp`,`hcpvaddr`.`SOURCE_UPD_TS` AS `hcpVirtualAddressSourceUpdateTimestamp`,`hcpvaddr`.`CREATE_TS` AS `hcpVirtualAddressCreateTimestamp`,`hcpvaddr`.`CREATE_PRCS_VAL` AS `hcpVirtualAddressCreateProcessValue`,`hcpvaddr`.`UPD_TS` AS `hcpVirtualAddressUpdateTimestamp`,`hcpvaddr`.`UPD_PRCS_VAL` AS `hcpVirtualAddressUpdateProcessValue`,`hcpvaddr`.`DEL_FLAG` AS `hcpVirtualAddressDeleteFlag` from (((((((((((`HCP_VIRTUAL_ADDR` `hcpvaddr` join `VIRTUAL_ADDR` `vaddr` on((`vaddr`.`VIRTUAL_ADDR_KEY` = `hcpvaddr`.`VIRTUAL_ADDR_KEY`))) join `SOURCE` `src` on((`src`.`SOURCE_KEY` = `hcpvaddr`.`SOURCE_KEY`))) join `REF_VAL` `stat` on((`stat`.`REF_VAL_RKEY` = `hcpvaddr`.`STAT_RKEY`))) join `REF_VAL` `vaddrstat` on((`vaddrstat`.`REF_VAL_RKEY` = `vaddr`.`STAT_RKEY`))) join `REF_VAL` `addrusg` on((`addrusg`.`REF_VAL_RKEY` = `hcpvaddr`.`ADDR_USAGE_TYP_RKEY`))) join `REF_VAL` `prefind` on((`prefind`.`REF_VAL_RKEY` = `vaddr`.`ADDR_TYP_RKEY`))) join `REF_VAL` `addrtyp` on((`addrtyp`.`REF_VAL_RKEY` = `vaddr`.`ADDR_TYP_RKEY`))) join `REF_VAL` `validind` on((`validind`.`REF_VAL_RKEY` = `vaddr`.`VALID_IND_RKEY`))) join `REF_VAL` `vmind` on((`vmind`.`REF_VAL_RKEY` = `hcpvaddr`.`ACCEPT_VOICE_MSG_IND_RKEY`))) join `REF_VAL` `txtind` on((`txtind`.`REF_VAL_RKEY` = `hcpvaddr`.`ACCEPT_TXT_MSG_IND_RKEY`))) left join `PLACE` `plc` on((`plc`.`PLACE_KEY` = `vaddr`.`CNTRY_PLACE_KEY`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_MATL_CFN`
--

/*!50001 DROP VIEW IF EXISTS `V_MATL_CFN`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_MATL_CFN` AS select `MR2`.`MATL_KEY` AS `MATL_KEY`,`MR2`.`REL_MATL_KEY` AS `REL_MATL_KEY`,`M2`.`MATL_NUM` AS `MATL_NUM`,`M2`.`MATL_DESC` AS `MATL_DESC` from ((`MATL` `M2` join `MATL_RLSHP` `MR2` on((`M2`.`MATL_KEY` = `MR2`.`REL_MATL_KEY`))) join `REF_VAL` `RV2` on(((`MR2`.`REC_SUBTYP_RKEY` = `RV2`.`REF_VAL_RKEY`) and (`RV2`.`REF_VAL` = 'CFN')))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_MATL_MPG`
--

/*!50001 DROP VIEW IF EXISTS `V_MATL_MPG`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_MATL_MPG` AS select `MR10`.`MATL_KEY` AS `MATL_KEY`,`MR10`.`REL_MATL_KEY` AS `REL_MATL_KEY`,`M10`.`MATL_NUM` AS `MATL_NUM`,`M10`.`MATL_DESC` AS `MATL_DESC` from ((`MATL` `M10` join `MATL_RLSHP` `MR10` on((`M10`.`MATL_KEY` = `MR10`.`REL_MATL_KEY`))) join `REF_VAL` `RV10` on(((`MR10`.`REC_SUBTYP_RKEY` = `RV10`.`REF_VAL_RKEY`) and (`RV10`.`REF_VAL` = 'MPG')))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_MATL_PH1`
--

/*!50001 DROP VIEW IF EXISTS `V_MATL_PH1`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_MATL_PH1` AS select `MR3`.`MATL_KEY` AS `MATL_KEY`,`MR3`.`REL_MATL_KEY` AS `REL_MATL_KEY`,`M3`.`MATL_NUM` AS `MATL_NUM`,`M3`.`MATL_DESC` AS `MATL_DESC` from ((`MATL` `M3` join `MATL_RLSHP` `MR3` on((`M3`.`MATL_KEY` = `MR3`.`REL_MATL_KEY`))) join `REF_VAL` `RV3` on(((`MR3`.`REC_SUBTYP_RKEY` = `RV3`.`REF_VAL_RKEY`) and (`RV3`.`REF_VAL` = 'PH_1')))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_MATL_PH2`
--

/*!50001 DROP VIEW IF EXISTS `V_MATL_PH2`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_MATL_PH2` AS select `MR4`.`MATL_KEY` AS `MATL_KEY`,`MR4`.`REL_MATL_KEY` AS `REL_MATL_KEY`,`M4`.`MATL_NUM` AS `MATL_NUM`,`M4`.`MATL_DESC` AS `MATL_DESC` from ((`MATL` `M4` join `MATL_RLSHP` `MR4` on((`M4`.`MATL_KEY` = `MR4`.`REL_MATL_KEY`))) join `REF_VAL` `RV4` on(((`MR4`.`REC_SUBTYP_RKEY` = `RV4`.`REF_VAL_RKEY`) and (`RV4`.`REF_VAL` = 'PH_2')))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_MATL_PH3`
--

/*!50001 DROP VIEW IF EXISTS `V_MATL_PH3`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_MATL_PH3` AS select `MR5`.`MATL_KEY` AS `MATL_KEY`,`MR5`.`REL_MATL_KEY` AS `REL_MATL_KEY`,`M5`.`MATL_NUM` AS `MATL_NUM`,`M5`.`MATL_DESC` AS `MATL_DESC` from ((`MATL` `M5` join `MATL_RLSHP` `MR5` on((`M5`.`MATL_KEY` = `MR5`.`REL_MATL_KEY`))) join `REF_VAL` `RV5` on(((`MR5`.`REC_SUBTYP_RKEY` = `RV5`.`REF_VAL_RKEY`) and (`RV5`.`REF_VAL` = 'PH_3')))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_MATL_PH4`
--

/*!50001 DROP VIEW IF EXISTS `V_MATL_PH4`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_MATL_PH4` AS select `MR6`.`MATL_KEY` AS `MATL_KEY`,`MR6`.`REL_MATL_KEY` AS `REL_MATL_KEY`,`M6`.`MATL_NUM` AS `MATL_NUM`,`M6`.`MATL_DESC` AS `MATL_DESC` from ((`MATL` `M6` join `MATL_RLSHP` `MR6` on((`M6`.`MATL_KEY` = `MR6`.`REL_MATL_KEY`))) join `REF_VAL` `RV6` on(((`MR6`.`REC_SUBTYP_RKEY` = `RV6`.`REF_VAL_RKEY`) and (`RV6`.`REF_VAL` = 'PH_4')))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_MATL_PH5`
--

/*!50001 DROP VIEW IF EXISTS `V_MATL_PH5`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_MATL_PH5` AS select `MR7`.`MATL_KEY` AS `MATL_KEY`,`MR7`.`REL_MATL_KEY` AS `REL_MATL_KEY`,`M7`.`MATL_NUM` AS `MATL_NUM`,`M7`.`MATL_DESC` AS `MATL_DESC` from ((`MATL` `M7` join `MATL_RLSHP` `MR7` on((`M7`.`MATL_KEY` = `MR7`.`REL_MATL_KEY`))) join `REF_VAL` `RV7` on(((`MR7`.`REC_SUBTYP_RKEY` = `RV7`.`REF_VAL_RKEY`) and (`RV7`.`REF_VAL` = 'PH_5')))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_MATL_PH6`
--

/*!50001 DROP VIEW IF EXISTS `V_MATL_PH6`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_MATL_PH6` AS select `MR8`.`MATL_KEY` AS `MATL_KEY`,`MR8`.`REL_MATL_KEY` AS `REL_MATL_KEY`,`M8`.`MATL_NUM` AS `MATL_NUM`,`M8`.`MATL_DESC` AS `MATL_DESC` from ((`MATL` `M8` join `MATL_RLSHP` `MR8` on((`M8`.`MATL_KEY` = `MR8`.`REL_MATL_KEY`))) join `REF_VAL` `RV8` on(((`MR8`.`REC_SUBTYP_RKEY` = `RV8`.`REF_VAL_RKEY`) and (`RV8`.`REF_VAL` = 'PH_6')))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_MATL_PROD_SET`
--

/*!50001 DROP VIEW IF EXISTS `V_MATL_PROD_SET`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_MATL_PROD_SET` AS select `MR11`.`MATL_KEY` AS `MATL_KEY`,`MR11`.`REL_MATL_KEY` AS `REL_MATL_KEY`,`M11`.`MATL_NUM` AS `MATL_NUM`,`M11`.`MATL_DESC` AS `MATL_DESC` from ((`MATL` `M11` join `MATL_RLSHP` `MR11` on((`M11`.`MATL_KEY` = `MR11`.`REL_MATL_KEY`))) join `REF_VAL` `RV11` on(((`MR11`.`REC_SUBTYP_RKEY` = `RV11`.`REF_VAL_RKEY`) and (`RV11`.`REF_VAL` = 'PRSET')))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_MATL_PROD_TYP`
--

/*!50001 DROP VIEW IF EXISTS `V_MATL_PROD_TYP`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_MATL_PROD_TYP` AS select `MR9`.`MATL_KEY` AS `MATL_KEY`,`MR9`.`REL_MATL_KEY` AS `REL_MATL_KEY`,`M9`.`MATL_NUM` AS `MATL_NUM`,`M9`.`MATL_DESC` AS `MATL_DESC` from ((`MATL` `M9` join `MATL_RLSHP` `MR9` on((`M9`.`MATL_KEY` = `MR9`.`REL_MATL_KEY`))) join `REF_VAL` `RV9` on(((`MR9`.`REC_SUBTYP_RKEY` = `RV9`.`REF_VAL_RKEY`) and (`RV9`.`REF_VAL` = 'PRTYP')))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_ORG`
--

/*!50001 DROP VIEW IF EXISTS `V_ORG`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_ORG` AS select `org`.`ORG_KEY` AS `orgKey`,`src`.`SOURCE` AS `orgSourceName`,`org`.`SOURCE_ID` AS `orgSourceID`,`typ`.`REF_VAL` AS `orgRecordTypeCode`,`typ`.`REF_VAL_DESC` AS `orgRecordTypeDesc`,`styp`.`REF_VAL` AS `orgRecordSubtypeCode`,`styp`.`REF_VAL_DESC` AS `orgRecordSubtypeDesc`,`stat`.`REF_VAL` AS `orgRecordStatusCode`,`stat`.`REF_VAL_DESC` AS `orgRecordStatusDesc`,`statrsn`.`REF_VAL` AS `orgRecordStatusReasonCode`,`statrsn`.`REF_VAL_DESC` AS `orgRecordStatusReasonDesc`,`org`.`ORG_SHORT_NM` AS `orgShortName`,`org`.`ORG_LONG_NM` AS `orgLongName`,`org`.`ORG_ALT_NM` AS `orgAlternateName`,`org`.`ORG_PREF_NM` AS `orgPreferredName`,`origorg`.`ORG_SHORT_NM` AS `orgOriginatingNationShortName`,`origorg`.`ORG_LONG_NM` AS `orgOriginatingNationLongName`,`noproc`.`REF_VAL` AS `orgNoProceduresIndicator`,`noflwup`.`REF_VAL` AS `orgNoFollowupIndicator`,`lang`.`REF_VAL` AS `orgLanguageCode`,`lang`.`REF_VAL_DESC` AS `orgLanguageDesc`,`org`.`SOURCE_CREATE_USER_VAL` AS `orgSourceCreateUserValue`,`org`.`SOURCE_CHG_USER_VAL` AS `orgSourceChangeUserValue`,`org`.`SOURCE_CHG_PRCS_VAL` AS `orgSourceChangeProcessValue`,`org`.`SOURCE_CHG_REASN_VAL` AS `orgSourceChangeReasonValue`,`org`.`SOURCE_CREATE_TS` AS `orgSourceCreateTimestamp`,`org`.`SOURCE_UPD_TS` AS `orgSourceUpdateTimestamp`,`org`.`CREATE_TS` AS `orgCreateTimestamp`,`org`.`CREATE_PRCS_VAL` AS `orgCreateProcessValue`,`org`.`UPD_TS` AS `orgUpdateTimestamp`,`org`.`UPD_PRCS_VAL` AS `orgUpdateProcessValue`,`org`.`DEL_FLAG` AS `orgDeleteFlag` from (((((((((`ORG` `org` join `SOURCE` `src` on((`src`.`SOURCE_KEY` = `org`.`SOURCE_KEY`))) join `REF_VAL` `typ` on((`typ`.`REF_VAL_RKEY` = `org`.`REC_TYP_RKEY`))) left join `REF_VAL` `styp` on((`styp`.`REF_VAL_RKEY` = `org`.`REC_SUBTYP_RKEY`))) join `REF_VAL` `stat` on((`stat`.`REF_VAL_RKEY` = `org`.`STAT_RKEY`))) left join `REF_VAL` `statrsn` on((`statrsn`.`REF_VAL_RKEY` = `org`.`STAT_REASN_RKEY`))) left join `ORG` `origorg` on((`origorg`.`ORG_KEY` = `org`.`ORIGIN_NATION_ORG_KEY`))) left join `REF_VAL` `lang` on((`lang`.`REF_VAL_RKEY` = `org`.`LANG_RKEY`))) left join `REF_VAL` `noproc` on((`noproc`.`REF_VAL_RKEY` = `org`.`NO_PROC_IND_RKEY`))) left join `REF_VAL` `noflwup` on((`noflwup`.`REF_VAL_RKEY` = `org`.`NO_FOLLOWUP_IND_RKEY`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_ORG_ALT_ID`
--

/*!50001 DROP VIEW IF EXISTS `V_ORG_ALT_ID`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_ORG_ALT_ID` AS select `oaltid`.`ORG_KEY` AS `orgKey`,`src`.`SOURCE` AS `orgAlternateIDSourceName`,`oaltid`.`SOURCE_ID` AS `orgAlternateIDSourceID`,`stat`.`REF_VAL` AS `orgAlternateIDRecordStatusCode`,`stat`.`REF_VAL_DESC` AS `orgAlternateIDRecordStatusDesc`,`idtyp`.`REF_VAL` AS `orgAlternateIDType`,`idtyp`.`REF_VAL_DESC` AS `orgAlternateIDTypeDesc`,`oaltid`.`ALT_ID_VAL` AS `orgAlternateIDValue`,`refused`.`REF_VAL` AS `orgRefusedAlternateIDIndicator`,`origorg`.`ORG_KEY` AS `orgAlternateIDoriginatingOrgKey`,`origorg`.`ORG_SHORT_NM` AS `orgAlternateIDOriginatingOrgShortName`,`origorg`.`ORG_LONG_NM` AS `orgAlternateIDOriginatingOrgLongName`,`oaltid`.`SOURCE_CREATE_USER_VAL` AS `orgAlternateIDSourceCreateUserValue`,`oaltid`.`SOURCE_CHG_USER_VAL` AS `orgAlternateIDSourceChangeUserValue`,`oaltid`.`SOURCE_CHG_PRCS_VAL` AS `orgAlternateIDSourceChangeProcessValue`,`oaltid`.`SOURCE_CHG_REASN_VAL` AS `orgAlternateIDSourceChangeReasonValue`,`oaltid`.`SOURCE_CREATE_TS` AS `orgAlternateIDSourceCreateTimestamp`,`oaltid`.`SOURCE_UPD_TS` AS `orgAlternateIDSourceUpdateTimestamp`,`oaltid`.`CREATE_TS` AS `orgAlternateIDCreateTimestamp`,`oaltid`.`CREATE_PRCS_VAL` AS `orgAlternateIDCreateProcessValue`,`oaltid`.`UPD_TS` AS `orgAlternateIDUpdateTimestamp`,`oaltid`.`UPD_PRCS_VAL` AS `orgAlternateIDUpdateProcessValue`,`oaltid`.`DEL_FLAG` AS `orgAlternateIDDeleteFlag` from ((((((`ORG_ALT_ID` `oaltid` join `ORG` `org` on((`org`.`ORG_KEY` = `oaltid`.`ORG_KEY`))) join `SOURCE` `src` on((`src`.`SOURCE_KEY` = `oaltid`.`SOURCE_KEY`))) join `REF_VAL` `stat` on((`stat`.`REF_VAL_RKEY` = `oaltid`.`STAT_RKEY`))) join `REF_VAL` `idtyp` on((`idtyp`.`REF_VAL_RKEY` = `oaltid`.`ALT_ID_TYP_RKEY`))) left join `ORG` `origorg` on((`origorg`.`ORG_KEY` = `oaltid`.`ORIGIN_ORG_KEY`))) join `REF_VAL` `refused` on((`refused`.`REF_VAL_RKEY` = `oaltid`.`REFUSED_IND_RKEY`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_PATIENT`
--

/*!50001 DROP VIEW IF EXISTS `V_PATIENT`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_PATIENT` AS select `pat`.`PATIENT_KEY` AS `patientKey`,`src`.`SOURCE` AS `patientSourceName`,`pat`.`SOURCE_ID` AS `patientSourceID`,`pat`.`PERS_KEY` AS `personKey`,`pat`.`ORG_KEY` AS `orgKey`,`mdm`.`REF_VAL` AS `patientMDMStatusCode`,`mdm`.`REF_VAL_DESC` AS `patientMDMStatusDesc`,`typ`.`REF_VAL` AS `patientRecordTypeCode`,`typ`.`REF_VAL_DESC` AS `patientRecordTypeDesc`,`styp`.`REF_VAL` AS `patientRecordSubtypeCode`,`styp`.`REF_VAL_DESC` AS `patientRecordSubtypeDesc`,`stat`.`REF_VAL` AS `patientRecordStatusCode`,`stat`.`REF_VAL_DESC` AS `patientRecordStatusDesc`,`pers`.`FIRST_NM` AS `personFirstName`,`pers`.`MIDDLE_NM` AS `personMiddleName`,`pers`.`LAST_NM` AS `personLastName`,`pers`.`PERS_PREF_NM` AS `personPreferredName`,`pers`.`CASE_EXCPTN_FIRST_NM` AS `personCaseExceptionFirstName`,`pers`.`CASE_EXCPTN_MIDDLE_NM` AS `personCaseExceptionMiddleName`,`pers`.`CASE_EXCPTN_LAST_NM` AS `personCaseExceptionLastName`,`pers`.`CASE_EXCPTN_PERS_PREF_NM` AS `personCaseExceptionPreferredName`,`prefix`.`REF_VAL` AS `patientNamePrefix`,`suffix`.`REF_VAL` AS `patientNameSuffix`,`psuffix`.`REF_VAL` AS `patientNameProfessionalSuffix`,`origorg`.`SOURCE_ID` AS `orgOriginatingNationCode`,`origorg`.`ORG_SHORT_NM` AS `orgOriginatingNationShortName`,`origorg`.`ORG_LONG_NM` AS `orgOriginatingNationLongName`,`pers`.`BIRTH_DT` AS `patientBirthDate`,`pers`.`DECEASED_DT` AS `patientDeceasedDate`,`decind`.`REF_VAL` AS `patientDeceasedIndicatorCode`,`decind`.`REF_VAL_DESC` AS `patientDeceasedIndicatorDesc`,`gend`.`REF_VAL` AS `patientGenderCode`,`gend`.`REF_VAL_DESC` AS `patientGenderDesc`,`pers`.`OTHER_GENDER_VAL` AS `patientOtherGenderValue`,`lang`.`REF_VAL` AS `patientLanguageCode`,`lang`.`REF_VAL_DESC` AS `patientLanguageDesc`,`addrtyp`.`REF_VAL` AS `patientPreferredAddressTypeCode`,`addrtyp`.`REF_VAL_DESC` AS `patientPreferredAddressTypeDesc`,`confind`.`REF_VAL` AS `patientConfidentialIndicator`,`confrsn`.`REF_VAL` AS `patientConfidentialReasonCode`,`confrsn`.`REF_VAL_DESC` AS `patientConfidentialReasonDesc`,`pat`.`CONF_QUES_TXT` AS `patientConfidentialQuestion`,`pat`.`CONF_ANSWER_TXT` AS `patientConfidentialAnswer`,`pat`.`COMMENT_TXT` AS `patientComment`,`pat`.`SOURCE_CREATE_USER_VAL` AS `patientSourceCreateUserValue`,`pat`.`SOURCE_CHG_USER_VAL` AS `patientSourceChangeUserValue`,`pat`.`SOURCE_CHG_PRCS_VAL` AS `patientSourceChangeProcessValue`,`pat`.`SOURCE_CHG_REASN_VAL` AS `patientSourceChangeReasonValue`,`pat`.`SOURCE_CREATE_TS` AS `patientSourceCreateTimestamp`,`pat`.`SOURCE_UPD_TS` AS `patientSourceUpdateTimestamp`,`pat`.`CREATE_TS` AS `patientCreateTimestamp`,`pat`.`CREATE_PRCS_VAL` AS `patientCreateProcessValue`,`pat`.`UPD_TS` AS `patientUpdateTimestamp`,`pat`.`UPD_PRCS_VAL` AS `patientUpdateProcessValue`,`pat`.`DEL_FLAG` AS `patientDeleteFlag` from ((((((((((((((((`PATIENT` `pat` join `PERS` `pers` on((`pers`.`PERS_KEY` = `pat`.`PERS_KEY`))) join `SOURCE` `src` on((`src`.`SOURCE_KEY` = `pat`.`SOURCE_KEY`))) join `REF_VAL` `typ` on((`typ`.`REF_VAL_RKEY` = `pat`.`REC_TYP_RKEY`))) left join `REF_VAL` `styp` on((`styp`.`REF_VAL_RKEY` = `pat`.`REC_SUBTYP_RKEY`))) join `REF_VAL` `stat` on((`stat`.`REF_VAL_RKEY` = `pat`.`STAT_RKEY`))) left join `ORG` `origorg` on((`origorg`.`ORG_KEY` = `pat`.`ORIGIN_NATION_ORG_KEY`))) left join `REF_VAL` `gend` on((`gend`.`REF_VAL_RKEY` = `pers`.`GENDER_RKEY`))) left join `REF_VAL` `lang` on((`lang`.`REF_VAL_RKEY` = `pat`.`LANG_RKEY`))) left join `REF_VAL` `confind` on((`confind`.`REF_VAL_RKEY` = `pat`.`CONF_IND_RKEY`))) left join `REF_VAL` `confrsn` on((`confrsn`.`REF_VAL_RKEY` = `pat`.`CONF_REASN_RKEY`))) left join `REF_VAL` `addrtyp` on((`addrtyp`.`REF_VAL_RKEY` = `pat`.`ADDR_TYP_RKEY`))) left join `REF_VAL` `prefix` on((`prefix`.`REF_VAL_RKEY` = `pers`.`NAME_PREFIX_RKEY`))) left join `REF_VAL` `suffix` on((`suffix`.`REF_VAL_RKEY` = `pers`.`NAME_SUFFIX_RKEY`))) left join `REF_VAL` `psuffix` on((`psuffix`.`REF_VAL_RKEY` = `pers`.`PROF_SUFFIX_RKEY`))) left join `REF_VAL` `decind` on((`decind`.`REF_VAL_RKEY` = `pers`.`DECEASED_IND_RKEY`))) left join `REF_VAL` `mdm` on((`mdm`.`REF_VAL_RKEY` = `pat`.`MDM_GOV_STAT_RKEY`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_PATIENT_ALT_ID`
--

/*!50001 DROP VIEW IF EXISTS `V_PATIENT_ALT_ID`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_PATIENT_ALT_ID` AS select `pataltid`.`PATIENT_KEY` AS `patientKey`,`src`.`SOURCE` AS `patientAlternateIDSourceName`,`pataltid`.`SOURCE_ID` AS `patientAlternateIDSourceID`,`stat`.`REF_VAL` AS `patientAlternateIDRecordStatusCode`,`stat`.`REF_VAL_DESC` AS `patientAlternateIDRecordStatusDesc`,`idtyp`.`REF_VAL` AS `patientAlternateIDType`,`idtyp`.`REF_VAL_DESC` AS `patientAlternateIDTypeDesc`,`pataltid`.`ALT_ID_VAL` AS `patientAlternateIDValue`,`refind`.`REF_VAL` AS `patientAlternateIDRefusedIndicator`,`origorg`.`ORG_KEY` AS `patientAlternateIDoriginatingOrgKey`,`origorg`.`ORG_SHORT_NM` AS `patientAlternateIDOriginatingOrgShortName`,`origorg`.`ORG_LONG_NM` AS `patientAlternateIDOriginatingOrgLongName`,`pataltid`.`SOURCE_CREATE_USER_VAL` AS `patientAlternateIDSourceCreateUserValue`,`pataltid`.`SOURCE_CHG_USER_VAL` AS `patientAlternateIDSourceChangeUserValue`,`pataltid`.`SOURCE_CHG_PRCS_VAL` AS `patientAlternateIDSourceChangeProcessValue`,`pataltid`.`SOURCE_CHG_REASN_VAL` AS `patientAlternateIDSourceChangeReasonValue`,`pataltid`.`SOURCE_CREATE_TS` AS `patientAlternateIDSourceCreateTimestamp`,`pataltid`.`SOURCE_UPD_TS` AS `patientAlternateIDSourceUpdateTimestamp`,`pataltid`.`CREATE_TS` AS `patientAlternateIDCreateTimestamp`,`pataltid`.`CREATE_PRCS_VAL` AS `patientAlternateIDCreateProcessValue`,`pataltid`.`UPD_TS` AS `patientAlternateIDUpdateTimestamp`,`pataltid`.`UPD_PRCS_VAL` AS `patientAlternateIDUpdateProcessValue`,`pataltid`.`DEL_FLAG` AS `patientAlternateIDDeleteFlag` from (((((`PATIENT_ALT_ID` `pataltid` left join `REF_VAL` `stat` on((`stat`.`REF_VAL_RKEY` = `pataltid`.`STAT_RKEY`))) join `SOURCE` `src` on((`src`.`SOURCE_KEY` = `pataltid`.`SOURCE_KEY`))) join `REF_VAL` `idtyp` on((`idtyp`.`REF_VAL_RKEY` = `pataltid`.`ALT_ID_TYP_RKEY`))) left join `ORG` `origorg` on((`origorg`.`ORG_KEY` = `pataltid`.`ORIGIN_ORG_KEY`))) join `REF_VAL` `refind` on((`refind`.`REF_VAL_RKEY` = `pataltid`.`REFUSED_IND_RKEY`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_PATIENT_CONTACT`
--

/*!50001 DROP VIEW IF EXISTS `V_PATIENT_CONTACT`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_PATIENT_CONTACT` AS select `patcont`.`PATIENT_KEY` AS `patientKey`,`patcont`.`PATIENT_CONTACT_KEY` AS `patientContactKey`,`src`.`SOURCE` AS `patientContactSourceName`,`patcont`.`SOURCE_ID` AS `patientContactSourceID`,`patcont`.`PERS_KEY` AS `personKey`,`typ`.`REF_VAL` AS `patientContactRecordTypeCode`,`typ`.`REF_VAL_DESC` AS `patientContactRecordTypeDesc`,`styp`.`REF_VAL` AS `patientContactRecordSubtypeCode`,`styp`.`REF_VAL_DESC` AS `patientContactRecordSubtypeDesc`,`stat`.`REF_VAL` AS `patientContactRecordStatusCode`,`stat`.`REF_VAL_DESC` AS `patientContactRecordStatusDesc`,`pers`.`CASE_EXCPTN_FIRST_NM` AS `patientContactFirstName`,`pers`.`CASE_EXCPTN_MIDDLE_NM` AS `patientContactMiddleName`,`pers`.`CASE_EXCPTN_LAST_NM` AS `patientContactLastName`,`pers`.`CASE_EXCPTN_PERS_PREF_NM` AS `patientContactPreferredName`,`prefix`.`REF_VAL` AS `patientContactNamePrefix`,`suffix`.`REF_VAL` AS `patientContactNameSuffix`,`psuffix`.`REF_VAL` AS `patientContactNameProfessionalSuffix`,`authind`.`REF_VAL` AS `patientContactAuthorizedIndicator`,`patcont`.`AUTH_DT` AS `patientContactAuthorizedDate`,`lang`.`REF_VAL` AS `patientLanguageCode`,`lang`.`REF_VAL_DESC` AS `patientLanguageDesc`,`patcont`.`SOURCE_CREATE_USER_VAL` AS `patientContactSourceCreateUserValue`,`patcont`.`SOURCE_CHG_USER_VAL` AS `patientContactSourceChangeUserValue`,`patcont`.`SOURCE_CHG_PRCS_VAL` AS `patientContactSourceChangeProcessValue`,`patcont`.`SOURCE_CHG_REASN_VAL` AS `patientContactSourceChangeReasonValue`,`patcont`.`SOURCE_CREATE_TS` AS `patientContactSourceCreateTimestamp`,`patcont`.`SOURCE_UPD_TS` AS `patientContactSourceUpdateTimestamp`,`patcont`.`CREATE_TS` AS `patientContactCreateTimestamp`,`patcont`.`CREATE_PRCS_VAL` AS `patientContactCreateProcessValue`,`patcont`.`UPD_TS` AS `patientContactUpdateTimestamp`,`patcont`.`UPD_PRCS_VAL` AS `patientContactUpdateProcessValue`,`patcont`.`DEL_FLAG` AS `patientContactDeleteFlag` from ((((((((((`PATIENT_CONTACT` `patcont` join `PERS` `pers` on((`pers`.`PERS_KEY` = `patcont`.`PERS_KEY`))) join `SOURCE` `src` on((`src`.`SOURCE_KEY` = `patcont`.`SOURCE_KEY`))) join `REF_VAL` `typ` on((`typ`.`REF_VAL_RKEY` = `patcont`.`REC_TYP_RKEY`))) left join `REF_VAL` `styp` on((`styp`.`REF_VAL_RKEY` = `patcont`.`REC_SUBTYP_RKEY`))) join `REF_VAL` `stat` on((`stat`.`REF_VAL_RKEY` = `patcont`.`STAT_RKEY`))) join `REF_VAL` `lang` on((`lang`.`REF_VAL_RKEY` = `patcont`.`LANG_RKEY`))) join `REF_VAL` `authind` on((`authind`.`REF_VAL_RKEY` = `patcont`.`AUTH_IND_RKEY`))) left join `REF_VAL` `prefix` on((`prefix`.`REF_VAL_RKEY` = `pers`.`NAME_PREFIX_RKEY`))) left join `REF_VAL` `suffix` on((`suffix`.`REF_VAL_RKEY` = `pers`.`NAME_SUFFIX_RKEY`))) left join `REF_VAL` `psuffix` on((`psuffix`.`REF_VAL_RKEY` = `pers`.`PROF_SUFFIX_RKEY`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_PATIENT_FUNC`
--

/*!50001 DROP VIEW IF EXISTS `V_PATIENT_FUNC`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_PATIENT_FUNC` AS select `patfunc`.`PATIENT_KEY` AS `patientKey`,`src`.`SOURCE` AS `pateintFunctionSourceName`,`patfunc`.`SOURCE_ID` AS `patientFunctionSourceID`,`stat`.`REF_VAL` AS `patientFunctionRecordStatusCode`,`stat`.`REF_VAL_DESC` AS `patientFunctionRecordStatusDesc`,`func`.`REF_VAL` AS `patientFunctionCode`,`func`.`REF_VAL_DESC` AS `patientFunctionDesc`,`excind`.`REF_VAL` AS `patientFunctionExceptionIndicator`,`patfunc`.`FUNC_EXCPTN_DT` AS `patientFunctionExceptionDate`,`patfunc`.`EXCPTN_COMMENT_TXT` AS `patientFunctionExceptionComment`,`patfunc`.`SOURCE_CREATE_USER_VAL` AS `patientFunctionSourceCreateUserValue`,`patfunc`.`SOURCE_CHG_USER_VAL` AS `patientFunctionSourceChangeUserValue`,`patfunc`.`SOURCE_CHG_PRCS_VAL` AS `patientFunctionSourceChangeProcessValue`,`patfunc`.`SOURCE_CHG_REASN_VAL` AS `patientFunctionSourceChangeReasonValue`,`patfunc`.`SOURCE_CREATE_TS` AS `patientFunctionSourceCreateTimestamp`,`patfunc`.`SOURCE_UPD_TS` AS `patientFunctionSourceUpdateTimestamp`,`patfunc`.`CREATE_TS` AS `patientFunctionCreateTimestamp`,`patfunc`.`CREATE_PRCS_VAL` AS `patientFunctionCreateProcessValue`,`patfunc`.`UPD_TS` AS `patientFunctionUpdateTimestamp`,`patfunc`.`UPD_PRCS_VAL` AS `patientFunctionUpdateProcessValue`,`patfunc`.`DEL_FLAG` AS `patientFunctionDeleteFlag` from ((((`PATIENT_FUNC` `patfunc` join `SOURCE` `src` on((`src`.`SOURCE_KEY` = `patfunc`.`SOURCE_KEY`))) join `REF_VAL` `stat` on((`stat`.`REF_VAL_RKEY` = `patfunc`.`STAT_RKEY`))) join `REF_VAL` `excind` on((`excind`.`REF_VAL_RKEY` = `patfunc`.`EXCPTN_IND_RKEY`))) left join `REF_VAL` `func` on((`func`.`REF_VAL_RKEY` = `patfunc`.`FUNC_RKEY`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_PATIENT_POSTAL_ADDR`
--

/*!50001 DROP VIEW IF EXISTS `V_PATIENT_POSTAL_ADDR`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_PATIENT_POSTAL_ADDR` AS select `patpaddr`.`PATIENT_KEY` AS `patientKey`,`patpaddr`.`PATIENT_CONTACT_KEY` AS `patientContactKey`,`src`.`SOURCE` AS `patientPostalAddressSourceName`,`patpaddr`.`SOURCE_ID` AS `patientPostalAddressSourceID`,`stat`.`REF_VAL` AS `patientPostalAddressRecordStatusCode`,`stat`.`REF_VAL_DESC` AS `patientPostalAddressRecordStatusDesc`,`paddrstat`.`REF_VAL` AS `postalAddressRecordStatusCode`,`paddrstat`.`REF_VAL_DESC` AS `postalAddressRecordStatusDesc`,`addrtyp`.`REF_VAL` AS `postalAddressTypeCode`,`addrtyp`.`REF_VAL_DESC` AS `postalAddressTypeDesc`,`paddr`.`LN1_VAL` AS `patientPostalAddressLine1Val`,`paddr`.`LN2_VAL` AS `patientPostalAddressLine2Val`,`paddr`.`LN3_VAL` AS `patientPostalAddressLine3Val`,`paddr`.`LN4_VAL` AS `patientPostalAddressLine4Val`,`paddr`.`LN5_VAL` AS `patientPostalAddressLine5Val`,`paddr`.`ATTN_LN_VAL` AS `patientPostalAddressAttentionLine`,`paddr`.`GEOCODE_VAL` AS `patientPostalAddressGeocodeVal`,`paddr`.`LAT_VAL` AS `patientPostalAddressLatitude`,`paddr`.`LON_VAL` AS `patientPostalAddressLongitude`,`paddr`.`ALT_VAL` AS `patientPostalAddressAltitude`,`paddr`.`COUNTY_NM` AS `patientPostalAddressCountyName`,`paddr`.`CITY_NM` AS `patientPostalAddressCityName`,`paddr`.`DISTRICT_NM` AS `patientPostalAddressDistrictName`,`paddr`.`NEIGHBRHD_NM` AS `patientPostalAddressNeighborhoodName`,`paddr`.`POSTAL_CD_VAL` AS `patientPostalAddressPostalCode`,`patpaddr`.`PRIORITY_VAL` AS `patientPostalAddressPriorityVal`,`cntry`.`PLACE_SHORT_NM` AS `postalAddressCountryCode`,`cntry`.`PLACE_LONG_NM` AS `postalAddressCountryName`,`reg`.`PLACE_SHORT_NM` AS `postalAddressRegionCode`,`reg`.`PLACE_LONG_NM` AS `postalAddressRegionName`,`tz`.`PLACE_SHORT_NM` AS `postalAddressTimezoneCode`,`tz`.`PLACE_LONG_NM` AS `postalAddressTimezoneName`,`paddr`.`TZ_TXT` AS `postalAddressTimezoneText`,`addrusg`.`REF_VAL` AS `patientPostalAddressUsageCode`,`addrusg`.`REF_VAL_DESC` AS `patientPostalAddressUsageDesc`,`prefind`.`REF_VAL` AS `patientPostalAddressPreferredIndicator`,`mailind`.`REF_VAL` AS `patientPostalAddressAcceptMailIndicator`,`pkgind`.`REF_VAL` AS `patientPostalAddressAcceptPackageIndicator`,`validind`.`REF_VAL` AS `patientPostalAddressValidatedIndicator`,`validrsn`.`REF_VAL` AS `patientPostalAddressValidationReasonCode`,`validrsn`.`REF_VAL_DESC` AS `patientPostalAddressValidationReasonDesc`,`lang`.`REF_VAL` AS `patientPostalAddressLanguageCode`,`lang`.`REF_VAL_DESC` AS `patientPostalAddressLanguageDesc`,`idcrdind`.`REF_VAL` AS `patientPostalAddressIDCardDisplayIndicator`,`ovrdind`.`REF_VAL` AS `patientPostalAddressValidationOverrideIndicator`,`seasstrt`.`REF_VAL` AS `patientPostalAddressSeasonStartMonthCode`,`seasstrt`.`REF_VAL_DESC` AS `patientPostalAddressSeasonStartMonthDesc`,`seasend`.`REF_VAL` AS `patientPostalAddressSeasonEndMonthCode`,`seasend`.`REF_VAL_DESC` AS `patientPostalAddressSeasonEndMonthDesc`,`addrchgrsn`.`REF_VAL` AS `patientPostalAddressChangeReasonCode`,`addrchgrsn`.`REF_VAL_DESC` AS `patientPostalAddressChangeReasonDesc`,cast(`patpaddr`.`EFF_START_TS` as date) AS `patientPostalAddressStartDate`,cast(`patpaddr`.`EFF_END_TS` as date) AS `patientPostalAddressEndDate`,`patpaddr`.`SOURCE_CREATE_USER_VAL` AS `patientPostalAddressSourceCreateUserValue`,`patpaddr`.`SOURCE_CHG_USER_VAL` AS `patientPostalAddressSourceChangeUserValue`,`patpaddr`.`SOURCE_CHG_PRCS_VAL` AS `patientPostalAddressSourceChangeProcessValue`,`patpaddr`.`SOURCE_CHG_REASN_VAL` AS `patientPostalAddressSourceChangeReasonValue`,`patpaddr`.`SOURCE_CREATE_TS` AS `patientPostalAddressSourceCreateTimestamp`,`patpaddr`.`SOURCE_UPD_TS` AS `patientPostalAddressSourceUpdateTimestamp`,`patpaddr`.`CREATE_TS` AS `patientPostalAddressCreateTimestamp`,`patpaddr`.`CREATE_PRCS_VAL` AS `patientPostalAddressCreateProcessValue`,`patpaddr`.`UPD_TS` AS `patientPostalAddressUpdateTimestamp`,`patpaddr`.`UPD_PRCS_VAL` AS `patientPostalAddressUpdateProcessValue`,`patpaddr`.`DEL_FLAG` AS `patientPostalAddressDeleteFlag` from ((((((((((((((((((((`PATIENT_POSTAL_ADDR` `patpaddr` join `POSTAL_ADDR` `paddr` on((`paddr`.`POSTAL_ADDR_KEY` = `patpaddr`.`POSTAL_ADDR_KEY`))) join `SOURCE` `src` on((`src`.`SOURCE_KEY` = `patpaddr`.`SOURCE_KEY`))) join `REF_VAL` `stat` on((`stat`.`REF_VAL_RKEY` = `patpaddr`.`STAT_RKEY`))) join `REF_VAL` `paddrstat` on((`paddrstat`.`REF_VAL_RKEY` = `paddr`.`STAT_RKEY`))) join `REF_VAL` `addrusg` on((`addrusg`.`REF_VAL_RKEY` = `patpaddr`.`ADDR_USAGE_TYP_RKEY`))) join `REF_VAL` `prefind` on((`prefind`.`REF_VAL_RKEY` = `patpaddr`.`PREF_IND_RKEY`))) join `REF_VAL` `addrtyp` on((`addrtyp`.`REF_VAL_RKEY` = `paddr`.`ADDR_TYP_RKEY`))) join `REF_VAL` `validind` on((`validind`.`REF_VAL_RKEY` = `paddr`.`VALID_IND_RKEY`))) left join `REF_VAL` `validrsn` on((`validrsn`.`REF_VAL_RKEY` = `paddr`.`VALID_REASN_RKEY`))) left join `REF_VAL` `lang` on((`lang`.`REF_VAL_RKEY` = `paddr`.`LANG_RKEY`))) join `REF_VAL` `mailind` on((`mailind`.`REF_VAL_RKEY` = `paddr`.`ACCEPT_MAIL_IND_RKEY`))) join `REF_VAL` `pkgind` on((`pkgind`.`REF_VAL_RKEY` = `paddr`.`ACCEPT_PKG_IND_RKEY`))) join `PLACE` `cntry` on((`cntry`.`PLACE_KEY` = `paddr`.`CNTRY_PLACE_KEY`))) join `PLACE` `reg` on((`reg`.`PLACE_KEY` = `paddr`.`REGION_PLACE_KEY`))) left join `PLACE` `tz` on((`tz`.`PLACE_KEY` = `paddr`.`TZ_PLACE_KEY`))) left join `REF_VAL` `ovrdind` on((`ovrdind`.`REF_VAL_RKEY` = `patpaddr`.`ADDR_VALID_OVRD_IND_RKEY`))) left join `REF_VAL` `idcrdind` on((`idcrdind`.`REF_VAL_RKEY` = `patpaddr`.`ID_CARD_DISPL_IND_RKEY`))) left join `REF_VAL` `seasstrt` on((`seasstrt`.`REF_VAL_RKEY` = `patpaddr`.`SEASON_START_MTH_RKEY`))) left join `REF_VAL` `seasend` on((`seasend`.`REF_VAL_RKEY` = `patpaddr`.`SEASON_END_MTH_RKEY`))) left join `REF_VAL` `addrchgrsn` on((`addrchgrsn`.`REF_VAL_RKEY` = `patpaddr`.`ADDR_CHG_REASN_RKEY`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_PATIENT_VIRTUAL_ADDR`
--

/*!50001 DROP VIEW IF EXISTS `V_PATIENT_VIRTUAL_ADDR`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_PATIENT_VIRTUAL_ADDR` AS select `patvaddr`.`PATIENT_KEY` AS `patientKey`,`patvaddr`.`PATIENT_CONTACT_KEY` AS `patientContactKey`,`src`.`SOURCE` AS `patientVirtualAddressSourceName`,`patvaddr`.`SOURCE_ID` AS `patientVirtualAddressSourceID`,`stat`.`REF_VAL` AS `patientVirtualAddressRecordStatusCode`,`stat`.`REF_VAL_DESC` AS `patientVirtualAddressRecordStatusDesc`,`vaddrstat`.`REF_VAL` AS `virtualAddressRecordStatusCode`,`vaddrstat`.`REF_VAL_DESC` AS `virtualAddressRecordStatusDesc`,`vaddr`.`LAND_LINE_POSTAL_ADDR_KEY` AS `virtualAddressLandLinePostalAddressKey`,`addrtyp`.`REF_VAL` AS `virtualAddressTypeCode`,`addrtyp`.`REF_VAL_DESC` AS `virtualAddressTypeDesc`,`vaddr`.`VIRTUAL_ADDR_VAL` AS `patientVirtualAddressVal`,`vaddr`.`VIRTUAL_ADDR_EXT_VAL` AS `patientVirtualAddressExtendedVal`,`patvaddr`.`PRIORITY_VAL` AS `patientVirtualAddressPriorityVal`,`plc`.`PLACE_SHORT_NM` AS `virtualAddressCountryCode`,`plc`.`PLACE_LONG_NM` AS `virtualAddressCountryName`,`addrusg`.`REF_VAL` AS `patientVirtualAddressUsageCode`,`addrusg`.`REF_VAL_DESC` AS `patientVirtualAddressUsageDesc`,`prefind`.`REF_VAL` AS `patientVirtualAddressPreferredIndicator`,`txtind`.`REF_VAL` AS `patientVirtualAddressAcceptsTextMessageIndicator`,`vmind`.`REF_VAL` AS `patientVirtualAddressAcceptsVoicemailMessageIndicator`,`validind`.`REF_VAL` AS `patientVirtualAddressValidatedIndicator`,cast(`patvaddr`.`EFF_START_TS` as date) AS `patientVirtualAddressStartDate`,cast(`patvaddr`.`EFF_END_TS` as date) AS `patientVirtualAddressEndDate`,`patvaddr`.`SOURCE_CREATE_USER_VAL` AS `patientVirtualAddressSourceCreateUserValue`,`patvaddr`.`SOURCE_CHG_USER_VAL` AS `patientVirtualAddressSourceChangeUserValue`,`patvaddr`.`SOURCE_CHG_PRCS_VAL` AS `patientVirtualAddressSourceChangeProcessValue`,`patvaddr`.`SOURCE_CHG_REASN_VAL` AS `patientVirtualAddressSourceChangeReasonValue`,`patvaddr`.`SOURCE_CREATE_TS` AS `patientVirtualAddressSourceCreateTimestamp`,`patvaddr`.`SOURCE_UPD_TS` AS `patientVirtualAddressSourceUpdateTimestamp`,`patvaddr`.`CREATE_TS` AS `patientVirtualAddressCreateTimestamp`,`patvaddr`.`CREATE_PRCS_VAL` AS `patientVirtualAddressCreateProcessValue`,`patvaddr`.`UPD_TS` AS `patientVirtualAddressUpdateTimestamp`,`patvaddr`.`UPD_PRCS_VAL` AS `patientVirtualAddressUpdateProcessValue`,`patvaddr`.`DEL_FLAG` AS `patientVirtualAddressDeleteFlag` from (((((((((((`PATIENT_VIRTUAL_ADDR` `patvaddr` join `VIRTUAL_ADDR` `vaddr` on((`vaddr`.`VIRTUAL_ADDR_KEY` = `patvaddr`.`VIRTUAL_ADDR_KEY`))) join `SOURCE` `src` on((`src`.`SOURCE_KEY` = `patvaddr`.`SOURCE_KEY`))) join `REF_VAL` `stat` on((`stat`.`REF_VAL_RKEY` = `patvaddr`.`STAT_RKEY`))) join `REF_VAL` `vaddrstat` on((`vaddrstat`.`REF_VAL_RKEY` = `vaddr`.`STAT_RKEY`))) join `REF_VAL` `addrusg` on((`addrusg`.`REF_VAL_RKEY` = `patvaddr`.`ADDR_USAGE_TYP_RKEY`))) join `REF_VAL` `prefind` on((`prefind`.`REF_VAL_RKEY` = `patvaddr`.`PREF_IND_RKEY`))) join `REF_VAL` `addrtyp` on((`addrtyp`.`REF_VAL_RKEY` = `vaddr`.`ADDR_TYP_RKEY`))) join `REF_VAL` `validind` on((`validind`.`REF_VAL_RKEY` = `vaddr`.`VALID_IND_RKEY`))) left join `REF_VAL` `vmind` on((`vmind`.`REF_VAL_RKEY` = `patvaddr`.`ACCEPT_VOICE_MSG_IND_RKEY`))) left join `REF_VAL` `txtind` on((`txtind`.`REF_VAL_RKEY` = `patvaddr`.`ACCEPT_TXT_MSG_IND_RKEY`))) left join `PLACE` `plc` on((`plc`.`PLACE_KEY` = `vaddr`.`CNTRY_PLACE_KEY`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_PERS`
--

/*!50001 DROP VIEW IF EXISTS `V_PERS`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_PERS` AS select `pers`.`PERS_KEY` AS `personKey`,`src`.`SOURCE` AS `personSourceName`,`pers`.`SOURCE_ID` AS `personSourceID`,`typ`.`REF_VAL` AS `personRecordTypeCode`,`typ`.`REF_VAL_DESC` AS `personRecordTypeDesc`,`styp`.`REF_VAL` AS `personRecordSubtypeCode`,`styp`.`REF_VAL_DESC` AS `personRecordSubtypeDesc`,`stat`.`REF_VAL` AS `personRecordStatusCode`,`stat`.`REF_VAL_DESC` AS `personRecordStatusDesc`,`pers`.`FIRST_NM` AS `personFirstName`,`pers`.`MIDDLE_NM` AS `personMiddleName`,`pers`.`LAST_NM` AS `personLastName`,`pers`.`PERS_PREF_NM` AS `personPreferredName`,`pers`.`CASE_EXCPTN_FIRST_NM` AS `personCaseExceptionFirstName`,`pers`.`CASE_EXCPTN_MIDDLE_NM` AS `personCaseExceptionMiddleName`,`pers`.`CASE_EXCPTN_LAST_NM` AS `personCaseExceptionLastName`,`pers`.`CASE_EXCPTN_PERS_PREF_NM` AS `personCaseExceptionPreferredName`,`prefix`.`REF_VAL` AS `personNamePrefix`,`suffix`.`REF_VAL` AS `personNameSuffix`,`psuffix`.`REF_VAL` AS `personNameProfessionalSuffix`,`pers`.`BIRTH_DT` AS `personBirthDate`,`pers`.`DECEASED_DT` AS `personDeceasedDate`,`decind`.`REF_VAL` AS `personDeceasedIndicator`,`gend`.`REF_VAL` AS `personGenderCode`,`gend`.`REF_VAL_DESC` AS `personGenderDesc`,`pers`.`OTHER_GENDER_VAL` AS `personOtherGenderValue`,`lang`.`REF_VAL` AS `personLanguageCode`,`lang`.`REF_VAL_DESC` AS `personLanguageDesc`,`addrtyp`.`REF_VAL` AS `personPreferredAddressTypeCode`,`addrtyp`.`REF_VAL_DESC` AS `personPreferredAddressTypeDesc`,`pers`.`SOURCE_CREATE_USER_VAL` AS `personSourceCreateUserValue`,`pers`.`SOURCE_CHG_USER_VAL` AS `personSourceChangeUserValue`,`pers`.`SOURCE_CHG_PRCS_VAL` AS `personSourceChangeProcessValue`,`pers`.`SOURCE_CHG_REASN_VAL` AS `personSourceChangeReasonValue`,`pers`.`SOURCE_CREATE_TS` AS `personSourceCreateTimestamp`,`pers`.`SOURCE_UPD_TS` AS `personSourceUpdateTimestamp`,`pers`.`CREATE_TS` AS `personCreateTimestamp`,`pers`.`CREATE_PRCS_VAL` AS `personCreateProcessValue`,`pers`.`UPD_TS` AS `personUpdateTimestamp`,`pers`.`UPD_PRCS_VAL` AS `personUpdateProcessValue`,`pers`.`DEL_FLAG` AS `personDeleteFlag` from (((((((((((`PERS` `pers` join `SOURCE` `src` on((`src`.`SOURCE_KEY` = `pers`.`SOURCE_KEY`))) join `REF_VAL` `typ` on((`typ`.`REF_VAL_RKEY` = `pers`.`REC_TYP_RKEY`))) left join `REF_VAL` `styp` on((`styp`.`REF_VAL_RKEY` = `pers`.`REC_SUBTYP_RKEY`))) join `REF_VAL` `stat` on((`stat`.`REF_VAL_RKEY` = `pers`.`STAT_RKEY`))) left join `REF_VAL` `gend` on((`gend`.`REF_VAL_RKEY` = `pers`.`GENDER_RKEY`))) left join `REF_VAL` `lang` on((`lang`.`REF_VAL_RKEY` = `pers`.`LANG_RKEY`))) left join `REF_VAL` `addrtyp` on((`addrtyp`.`REF_VAL_RKEY` = `pers`.`ADDR_TYP_RKEY`))) left join `REF_VAL` `prefix` on((`prefix`.`REF_VAL_RKEY` = `pers`.`NAME_PREFIX_RKEY`))) left join `REF_VAL` `suffix` on((`suffix`.`REF_VAL_RKEY` = `pers`.`NAME_SUFFIX_RKEY`))) left join `REF_VAL` `psuffix` on((`psuffix`.`REF_VAL_RKEY` = `pers`.`PROF_SUFFIX_RKEY`))) left join `REF_VAL` `decind` on((`decind`.`REF_VAL_RKEY` = `pers`.`DECEASED_IND_RKEY`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_PERS_ALT_ID`
--

/*!50001 DROP VIEW IF EXISTS `V_PERS_ALT_ID`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_PERS_ALT_ID` AS select `paltid`.`PERS_KEY` AS `personKey`,`src`.`SOURCE` AS `personAlternateIDSourceName`,`paltid`.`SOURCE_ID` AS `personAlternateIDSourceID`,`stat`.`REF_VAL` AS `personAlternateIDRecordStatusCode`,`stat`.`REF_VAL_DESC` AS `personAlternateIDRecordStatusDesc`,`idtyp`.`REF_VAL` AS `personAlternateIDType`,`idtyp`.`REF_VAL_DESC` AS `personAlternateIDTypeDesc`,`paltid`.`ALT_ID_VAL` AS `personAlternateIDValue`,`refused`.`REF_VAL` AS `personRefusedAlternateIDIndicator`,`origorg`.`ORG_KEY` AS `personAlternateIDoriginatingOrgKey`,`origorg`.`ORG_SHORT_NM` AS `personAlternateIDOriginatingOrgShortName`,`origorg`.`ORG_LONG_NM` AS `personAlternateIDOriginatingOrgLongName`,`paltid`.`SOURCE_CREATE_USER_VAL` AS `personAlternateIDSourceCreateUserValue`,`paltid`.`SOURCE_CHG_USER_VAL` AS `personAlternateIDSourceChangeUserValue`,`paltid`.`SOURCE_CHG_PRCS_VAL` AS `personAlternateIDSourceChangeProcessValue`,`paltid`.`SOURCE_CHG_REASN_VAL` AS `personAlternateIDSourceChangeReasonValue`,`paltid`.`SOURCE_CREATE_TS` AS `personAlternateIDSourceCreateTimestamp`,`paltid`.`SOURCE_UPD_TS` AS `personAlternateIDSourceUpdateTimestamp`,`paltid`.`CREATE_TS` AS `personAlternateIDCreateTimestamp`,`paltid`.`CREATE_PRCS_VAL` AS `personAlternateIDCreateProcessValue`,`paltid`.`UPD_TS` AS `personAlternateIDUpdateTimestamp`,`paltid`.`UPD_PRCS_VAL` AS `personAlternateIDUpdateProcessValue`,`paltid`.`DEL_FLAG` AS `personAlternateIDDeleteFlag` from ((((((`PERS_ALT_ID` `paltid` join `PERS` `pers` on((`pers`.`PERS_KEY` = `paltid`.`PERS_KEY`))) join `SOURCE` `src` on((`src`.`SOURCE_KEY` = `paltid`.`SOURCE_KEY`))) join `REF_VAL` `stat` on((`stat`.`REF_VAL_RKEY` = `paltid`.`STAT_RKEY`))) join `REF_VAL` `idtyp` on((`idtyp`.`REF_VAL_RKEY` = `paltid`.`ALT_ID_TYP_RKEY`))) join `REF_VAL` `refused` on((`refused`.`REF_VAL_RKEY` = `paltid`.`REFUSED_IND_RKEY`))) left join `ORG` `origorg` on((`origorg`.`ORG_KEY` = `paltid`.`ORIGIN_ORG_KEY`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_PERS_DEGREE`
--

/*!50001 DROP VIEW IF EXISTS `V_PERS_DEGREE`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_PERS_DEGREE` AS select `pdeg`.`PERS_KEY` AS `personKey`,`src`.`SOURCE` AS `personSourceName`,`pdeg`.`SOURCE_ID` AS `personSourceID`,`stat`.`REF_VAL` AS `personDegreeRecordStatusCode`,`stat`.`REF_VAL_DESC` AS `personDegreeRecordStatusDesc`,`deg`.`REF_VAL` AS `personDegree`,`deg`.`REF_VAL_DESC` AS `personDegreeDesc`,`pdeg`.`SOURCE_CREATE_USER_VAL` AS `personDegreeSourceCreateUserValue`,`pdeg`.`SOURCE_CHG_USER_VAL` AS `personDegreeSourceChangeUserValue`,`pdeg`.`SOURCE_CHG_PRCS_VAL` AS `personDegreeSourceChangeProcessValue`,`pdeg`.`SOURCE_CHG_REASN_VAL` AS `personDegreeSourceChangeReasonValue`,`pdeg`.`SOURCE_CREATE_TS` AS `personDegreeSourceCreateTimestamp`,`pdeg`.`SOURCE_UPD_TS` AS `personDegreeSourceUpdateTimestamp`,`pdeg`.`CREATE_TS` AS `personDegreeCreateTimestamp`,`pdeg`.`CREATE_PRCS_VAL` AS `personDegreeCreateProcessValue`,`pdeg`.`UPD_TS` AS `personDegreeUpdateTimestamp`,`pdeg`.`UPD_PRCS_VAL` AS `personDegreeUpdateProcessValue`,`pdeg`.`DEL_FLAG` AS `personDegreeDeleteFlag` from ((((`PERS_DEGREE` `pdeg` join `PERS` `pers` on((`pers`.`PERS_KEY` = `pdeg`.`PERS_KEY`))) join `SOURCE` `src` on((`src`.`SOURCE_KEY` = `pdeg`.`SOURCE_KEY`))) join `REF_VAL` `stat` on((`stat`.`REF_VAL_RKEY` = `pers`.`STAT_RKEY`))) join `REF_VAL` `deg` on((`deg`.`REF_VAL_RKEY` = `pdeg`.`DEGREE_RKEY`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_PLACE`
--

/*!50001 DROP VIEW IF EXISTS `V_PLACE`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_PLACE` AS select `plc`.`PLACE_KEY` AS `placeKey`,`src`.`SOURCE` AS `placeSourceName`,`plc`.`SOURCE_ID` AS `placeSourceID`,`typ`.`REF_VAL` AS `placeRecordTypeCode`,`typ`.`REF_VAL_DESC` AS `placeRecordTypeDesc`,`styp`.`REF_VAL` AS `placeRecordSubtypeCode`,`styp`.`REF_VAL_DESC` AS `pplaceRecordSubtypeDesc`,`stat`.`REF_VAL` AS `placeRecordStatusCode`,`stat`.`REF_VAL_DESC` AS `placeRecordStatusDesc`,`plc`.`PLACE_SHORT_NM` AS `placeShortName`,`plc`.`PLACE_LONG_NM` AS `placeLongName`,`plc`.`CENTROID_LAT_VAL` AS `placeCentroidLatitude`,`plc`.`CENTROID_LON_VAL` AS `placeCentroidLongitude`,`plc`.`CENTROID_ALT_VAL` AS `placeCentroidAltitude`,`mobind`.`REF_VAL` AS `placeMobileIndicator`,`shapetyp`.`REF_VAL` AS `placeShapeTypeCode`,`shapetyp`.`REF_VAL_DESC` AS `placeShapeTypeDesc`,`plc`.`SOURCE_CREATE_USER_VAL` AS `placeSourceCreateUserValue`,`plc`.`SOURCE_CHG_USER_VAL` AS `placeSourceChangeUserValue`,`plc`.`SOURCE_CHG_PRCS_VAL` AS `placeSourceChangeProcessValue`,`plc`.`SOURCE_CHG_REASN_VAL` AS `placeSourceChangeReasonValue`,`plc`.`SOURCE_CREATE_TS` AS `placeSourceCreateTimestamp`,`plc`.`SOURCE_UPD_TS` AS `placeSourceUpdateTimestamp`,`plc`.`CREATE_TS` AS `placeCreateTimestamp`,`plc`.`CREATE_PRCS_VAL` AS `placeCreateProcessValue`,`plc`.`UPD_TS` AS `placeUpdateTimestamp`,`plc`.`UPD_PRCS_VAL` AS `placeUpdateProcessValue`,`plc`.`DEL_FLAG` AS `placeDeleteFlag` from ((((((`PLACE` `plc` join `SOURCE` `src` on((`src`.`SOURCE_KEY` = `plc`.`SOURCE_KEY`))) join `REF_VAL` `typ` on((`typ`.`REF_VAL_RKEY` = `plc`.`REC_TYP_RKEY`))) left join `REF_VAL` `styp` on((`styp`.`REF_VAL_RKEY` = `plc`.`REC_SUBTYP_RKEY`))) join `REF_VAL` `stat` on((`stat`.`REF_VAL_RKEY` = `plc`.`STAT_RKEY`))) left join `REF_VAL` `mobind` on((`mobind`.`REF_VAL_RKEY` = `plc`.`MOBILE_IND_RKEY`))) join `REF_VAL` `shapetyp` on((`shapetyp`.`REF_VAL_RKEY` = `plc`.`SHAPE_TYP_RKEY`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_PROC`
--

/*!50001 DROP VIEW IF EXISTS `V_PROC`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_PROC` AS select `me`.`MEDL_EVNT_KEY` AS `procedureKey`,`src`.`SOURCE` AS `procedureSourceName`,`me`.`SOURCE_ID` AS `procedureSourceID`,`pat`.`PATIENT_KEY` AS `patientKey`,`fclty`.`HCO_FCLTY_KEY` AS `hcoFacilityKey`,`divsn`.`ORG_KEY` AS `divisionOrgKey`,`typ`.`REF_VAL` AS `procedureRecordTypeCode`,`typ`.`REF_VAL_DESC` AS `procedureRecordTypeDesc`,`styp`.`REF_VAL` AS `procedureRecordSubtypeCode`,`styp`.`REF_VAL_DESC` AS `procedureRecordSubtypeDesc`,`stat`.`REF_VAL` AS `procedureRecordStatusCode`,`stat`.`REF_VAL_DESC` AS `procedureRecordStatusDesc`,`dx`.`REF_VAL` AS `procedurePrimaryIndicationCode`,`dx`.`REF_VAL_DESC` AS `procedurePrimaryIndicationDesc`,`divsn`.`ORG_SHORT_NM` AS `procedureDivisionCode`,`divsn`.`ORG_LONG_NM` AS `procedureDivisionName`,`ous`.`REF_VAL` AS `procedureOutsideUSIndicator`,`est`.`REF_VAL` AS `procedureEstimatedStartDateIndicator`,cast(`me`.`EFF_START_TS` as date) AS `procedureStartDate`,cast(`me`.`EFF_END_TS` as date) AS `procedureEndDate`,`me`.`SOURCE_CREATE_USER_VAL` AS `procedureSourceCreateUserValue`,`me`.`SOURCE_CHG_USER_VAL` AS `procedureSourceChangeUserValue`,`me`.`SOURCE_CHG_PRCS_VAL` AS `procedureSourceChangeProcessValue`,`me`.`SOURCE_CHG_REASN_VAL` AS `procedureSourceChangeReasonValue`,`me`.`SOURCE_CREATE_TS` AS `procedureSourceCreateTimestamp`,`me`.`SOURCE_UPD_TS` AS `procedureSourceUpdateTimestamp`,`me`.`CREATE_TS` AS `procedureCreateTimestamp`,`me`.`CREATE_PRCS_VAL` AS `procedureCreateProcessValue`,`me`.`UPD_TS` AS `procedureUpdateTimestamp`,`me`.`UPD_PRCS_VAL` AS `procedureUpdateProcessValue`,`me`.`DEL_FLAG` AS `procedureDeleteFlag` from ((((((((((((`MEDL_EVNT` `me` join `PROC` `proc` on((`me`.`MEDL_EVNT_KEY` = `proc`.`MEDL_EVNT_KEY`))) join `PATIENT` `pat` on((`me`.`PATIENT_KEY` = `pat`.`PATIENT_KEY`))) left join `HCO_FCLTY` `fclty` on((`me`.`HCO_FCLTY_KEY` = `fclty`.`HCO_FCLTY_KEY`))) left join `ORG` `divsn` on((`divsn`.`ORG_KEY` = `me`.`DIV_ORG_KEY`))) join `SOURCE` `src` on((`src`.`SOURCE_KEY` = `me`.`SOURCE_KEY`))) join `REF_VAL` `typ` on((`typ`.`REF_VAL_RKEY` = `me`.`REC_TYP_RKEY`))) left join `REF_VAL` `styp` on((`styp`.`REF_VAL_RKEY` = `me`.`REC_SUBTYP_RKEY`))) join `REF_VAL` `stat` on((`stat`.`REF_VAL_RKEY` = `me`.`STAT_RKEY`))) left join `REF_VAL` `est` on((`est`.`REF_VAL_RKEY` = `proc`.`EST_START_DT_IND_RKEY`))) left join `REF_VAL` `ous` on((`ous`.`REF_VAL_RKEY` = `proc`.`OUTSIDE_US_IND_RKEY`))) left join `PROC_INDICATION` `procind` on(((`procind`.`MEDL_EVNT_KEY` = `proc`.`MEDL_EVNT_KEY`) and (`procind`.`PRIORITY_VAL` = 1)))) left join `REF_VAL` `dx` on((`dx`.`REF_VAL_RKEY` = `procind`.`INDICATION_RKEY`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_PROC_DEVICE`
--

/*!50001 DROP VIEW IF EXISTS `V_PROC_DEVICE`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_PROC_DEVICE` AS select `procdev`.`MEDL_EVNT_KEY` AS `procedureKey`,`src`.`SOURCE` AS `procedureDeviceSourceName`,`procdev`.`SOURCE_ID` AS `procedureDeviceSourceID`,`dev`.`DEVICE_INSTANCE_KEY` AS `deviceKey`,`typ`.`REF_VAL` AS `procedureDeviceRecordTypeCode`,`typ`.`REF_VAL_DESC` AS `procedureDeviceRecordTypeDesc`,`styp`.`REF_VAL` AS `procedureDeviceRecordSubtypeCode`,`styp`.`REF_VAL_DESC` AS `procedureDeviceRecordSubtypeDesc`,`stat`.`REF_VAL` AS `procedureDeviceRecordStatusCode`,`stat`.`REF_VAL_DESC` AS `procedureDeviceRecordStatusDesc`,`actyp`.`REF_VAL` AS `procedureDeviceActivityTypeCode`,`actyp`.`REF_VAL_DESC` AS `procedureDeviceActivityTypeDesc`,`actstyp`.`REF_VAL` AS `procedureDeviceActivitySubtypeCode`,`actstyp`.`REF_VAL_DESC` AS `procedureDeviceActivitySubtypeDesc`,`procdev`.`SOURCE_CREATE_USER_VAL` AS `procedureDeviceSourceCreateUserValue`,`procdev`.`SOURCE_CHG_USER_VAL` AS `procedureDeviceSourceChangeUserValue`,`procdev`.`SOURCE_CHG_PRCS_VAL` AS `procedureDeviceSourceChangeProcessValue`,`procdev`.`SOURCE_CHG_REASN_VAL` AS `procedureDeviceSourceChangeReasonValue`,`procdev`.`SOURCE_CREATE_TS` AS `procedureDeviceSourceCreateTimestamp`,`procdev`.`SOURCE_UPD_TS` AS `procedureDeviceSourceUpdateTimestamp`,`procdev`.`CREATE_TS` AS `procedureDeviceCreateTimestamp`,`procdev`.`CREATE_PRCS_VAL` AS `procedureDeviceCreateProcessValue`,`procdev`.`UPD_TS` AS `procedureDeviceUpdateTimestamp`,`procdev`.`UPD_PRCS_VAL` AS `procedureDeviceUpdateProcessValue`,`procdev`.`DEL_FLAG` AS `procedureDeviceDeleteFlag` from ((((((((`PROC_DEVICE_INSTANCE` `procdev` join `PROC` `proc` on((`proc`.`MEDL_EVNT_KEY` = `procdev`.`MEDL_EVNT_KEY`))) join `DEVICE_INSTANCE` `dev` on((`dev`.`DEVICE_INSTANCE_KEY` = `procdev`.`DEVICE_INSTANCE_KEY`))) join `SOURCE` `src` on((`src`.`SOURCE_KEY` = `procdev`.`SOURCE_KEY`))) join `REF_VAL` `typ` on((`typ`.`REF_VAL_RKEY` = `procdev`.`REC_TYP_RKEY`))) left join `REF_VAL` `styp` on((`styp`.`REF_VAL_RKEY` = `procdev`.`REC_SUBTYP_RKEY`))) join `REF_VAL` `stat` on((`stat`.`REF_VAL_RKEY` = `procdev`.`STAT_RKEY`))) join `REF_VAL` `actyp` on((`actyp`.`REF_VAL_RKEY` = `procdev`.`ACT_TYP_RKEY`))) left join `REF_VAL` `actstyp` on((`actstyp`.`REF_VAL_RKEY` = `procdev`.`ACT_SUBTYP_RKEY`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_PROC_HCP`
--

/*!50001 DROP VIEW IF EXISTS `V_PROC_HCP`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_PROC_HCP` AS select `prochcp`.`MEDL_EVNT_KEY` AS `procedureKey`,`src`.`SOURCE` AS `procedureHCPSourceName`,`prochcp`.`SOURCE_ID` AS `procedureHCPSourceID`,`hcp`.`HCP_KEY` AS `hcpKey`,`typ`.`REF_VAL` AS `procedureHCPRecordTypeCode`,`typ`.`REF_VAL_DESC` AS `procedureHCPRecordTypeDesc`,`styp`.`REF_VAL` AS `procedureHCPRecordSubtypeCode`,`styp`.`REF_VAL_DESC` AS `procedureHCPRecordSubtypeDesc`,`stat`.`REF_VAL` AS `procedureHCPRecordStatusCode`,`stat`.`REF_VAL_DESC` AS `procedureHCPRecordStatusDesc`,`prochcp`.`SOURCE_CREATE_USER_VAL` AS `procedureHCPSourceCreateUserValue`,`prochcp`.`SOURCE_CHG_USER_VAL` AS `procedureHCPSourceChangeUserValue`,`prochcp`.`SOURCE_CHG_PRCS_VAL` AS `procedureHCPSourceChangeProcessValue`,`prochcp`.`SOURCE_CHG_REASN_VAL` AS `procedureHCPSourceChangeReasonValue`,`prochcp`.`SOURCE_CREATE_TS` AS `procedureHCPSourceCreateTimestamp`,`prochcp`.`SOURCE_UPD_TS` AS `procedureHCPSourceUpdateTimestamp`,`prochcp`.`CREATE_TS` AS `procedureHCPCreateTimestamp`,`prochcp`.`CREATE_PRCS_VAL` AS `procedureHCPCreateProcessValue`,`prochcp`.`UPD_TS` AS `procedureHCPUpdateTimestamp`,`prochcp`.`UPD_PRCS_VAL` AS `procedureHCPUpdateProcessValue`,`prochcp`.`DEL_FLAG` AS `procedureHCPDeleteFlag` from ((((((`PROC_HCP` `prochcp` join `PROC` `proc` on((`proc`.`MEDL_EVNT_KEY` = `prochcp`.`MEDL_EVNT_KEY`))) join `HCP` `hcp` on((`hcp`.`HCP_KEY` = `prochcp`.`HCP_KEY`))) join `SOURCE` `src` on((`src`.`SOURCE_KEY` = `prochcp`.`SOURCE_KEY`))) join `REF_VAL` `typ` on((`typ`.`REF_VAL_RKEY` = `prochcp`.`REC_TYP_RKEY`))) left join `REF_VAL` `styp` on((`styp`.`REF_VAL_RKEY` = `prochcp`.`REC_SUBTYP_RKEY`))) join `REF_VAL` `stat` on((`stat`.`REF_VAL_RKEY` = `prochcp`.`STAT_RKEY`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_PROC_INDICATION`
--

/*!50001 DROP VIEW IF EXISTS `V_PROC_INDICATION`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_PROC_INDICATION` AS select `procind`.`MEDL_EVNT_KEY` AS `procedureKey`,`src`.`SOURCE` AS `procedureIndicationSourceName`,`procind`.`SOURCE_ID` AS `procedureIndicationSourceID`,`ind`.`REF_VAL` AS `procedureIndicationCode`,`ind`.`REF_VAL_DESC` AS `procedureIndicationDesc`,`procind`.`PRIORITY_VAL` AS `procedureIndicationPriorityValue`,`procind`.`SOURCE_CREATE_USER_VAL` AS `procedureIndicationSourceCreateUserValue`,`procind`.`SOURCE_CHG_USER_VAL` AS `procedureIndicationSourceChangeUserValue`,`procind`.`SOURCE_CHG_PRCS_VAL` AS `procedureIndicationSourceChangeProcessValue`,`procind`.`SOURCE_CHG_REASN_VAL` AS `procedureIndicationSourceChangeReasonValue`,`procind`.`SOURCE_CREATE_TS` AS `procedureIndicationSourceCreateTimestamp`,`procind`.`SOURCE_UPD_TS` AS `procedureIndicationSourceUpdateTimestamp`,`procind`.`CREATE_TS` AS `procedureIndicationCreateTimestamp`,`procind`.`CREATE_PRCS_VAL` AS `procedureIndicationCreateProcessValue`,`procind`.`UPD_TS` AS `procedureIndicationUpdateTimestamp`,`procind`.`UPD_PRCS_VAL` AS `procedureIndicationUpdateProcessValue`,`procind`.`DEL_FLAG` AS `procedureIndicationDeleteFlag` from ((((`PROC_INDICATION` `procind` join `PROC` `proc` on((`proc`.`MEDL_EVNT_KEY` = `procind`.`MEDL_EVNT_KEY`))) join `REF_VAL` `ind` on((`ind`.`REF_VAL_RKEY` = `procind`.`INDICATION_RKEY`))) join `SOURCE` `src` on((`src`.`SOURCE_KEY` = `procind`.`SOURCE_KEY`))) join `REF_VAL` `stat` on((`stat`.`REF_VAL_RKEY` = `procind`.`STAT_RKEY`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_PROD`
--

/*!50001 DROP VIEW IF EXISTS `V_PROD`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_PROD` AS select `matl`.`MATL_KEY` AS `productKey`,`src`.`SOURCE` AS `productSourceName`,`matl`.`SOURCE_ID` AS `productSourceID`,`typ`.`REF_VAL` AS `productRecordTypeCode`,`typ`.`REF_VAL_DESC` AS `productRecordTypeDesc`,`styp`.`REF_VAL` AS `productRecordSubtypeCode`,`styp`.`REF_VAL_DESC` AS `productRecordSubtypeDesc`,`stat`.`REF_VAL` AS `productRecordStatusCode`,`stat`.`REF_VAL_DESC` AS `productRecordStatusDesc`,`matl`.`MATL_NUM` AS `productMaterialNum`,`matl`.`MATL_DISPL_NUM` AS `productDisplayNum`,`matl`.`MATL_SHORT_NM` AS `productShortName`,`matl`.`MATL_LONG_NM` AS `productLongName`,`matl`.`MATL_DESC` AS `productDesc`,`matl`.`MATL_BRAND_TXT` AS `productBrandName`,`cfn`.`MATL_NUM` AS `productCFN`,`cfn`.`MATL_DESC` AS `productCFNDesc`,`mpg`.`MATL_NUM` AS `productMPG`,`mpg`.`MATL_DESC` AS `productMPGDesc`,`prodtyp`.`MATL_NUM` AS `productTypeCode`,`prodtyp`.`MATL_DESC` AS `productTypeDesc`,`prodset`.`MATL_NUM` AS `productSetCode`,`prodset`.`MATL_DESC` AS `productSetDesc`,`mfg`.`ORG_KEY` AS `manufacturerOrgKey`,`mfg`.`ORG_SHORT_NM` AS `productManufacturerCode`,`mfg`.`ORG_LONG_NM` AS `productManufacturerName`,`matldiv`.`SOURCE_ID` AS `productDivisionCode`,`matldiv`.`ORG_SHORT_NM` AS `productDivisionName`,`ph1`.`MATL_NUM` AS `productHierarchyLevel1Code`,`ph1`.`MATL_DESC` AS `productHierarchyLevel1Desc`,`ph2`.`MATL_NUM` AS `productHierarchyLevel2Code`,`ph2`.`MATL_DESC` AS `productHierarchyLevel2Desc`,`ph3`.`MATL_NUM` AS `productHierarchyLevel3Code`,`ph1`.`MATL_DESC` AS `productHierarchyLevel3Desc`,`ph4`.`MATL_NUM` AS `productHierarchyLevel4Code`,`ph4`.`MATL_DESC` AS `productHierarchyLevel4Desc`,`ph5`.`MATL_NUM` AS `productHierarchyLevel5Code`,`ph5`.`MATL_DESC` AS `productHierarchyLevel5Desc`,`ph6`.`MATL_NUM` AS `productHierarchyLevel6Code`,`ph6`.`MATL_DESC` AS `productHierarchyLevel6Desc`,`lotser`.`REF_VAL` AS `productLotSerialCode`,`lotser`.`REF_VAL_DESC` AS `productLotSerialDesc`,`lang`.`REF_VAL` AS `productLanguageCode`,`lang`.`REF_VAL_DESC` AS `productLanguageDesc`,`uom`.`REF_VAL` AS `productUnitOfMeasureCode`,`uom`.`REF_VAL_DESC` AS `productUnitOfMeasureDesc`,`trkind`.`REF_VAL` AS `productTrackingIndicator`,`trkmeth`.`REF_VAL` AS `productTrackingMethodCode`,`trkmeth`.`REF_VAL_DESC` AS `productTrackingMethodDesc`,`trkpurp`.`REF_VAL` AS `productTrackingPurposeCode`,`trkpurp`.`REF_VAL_DESC` AS `productTrackingPurposeDesc`,`matl`.`SOURCE_CREATE_USER_VAL` AS `productSourceCreateUserValue`,`matl`.`SOURCE_CHG_USER_VAL` AS `productSourceChangeUserValue`,`matl`.`SOURCE_CHG_PRCS_VAL` AS `productSourceChangeProcessValue`,`matl`.`SOURCE_CHG_REASN_VAL` AS `productSourceChangeReasonValue`,`matl`.`SOURCE_CREATE_TS` AS `productSourceCreateTimestamp`,`matl`.`SOURCE_UPD_TS` AS `productSourceUpdateTimestamp`,`matl`.`CREATE_TS` AS `productCreateTimestamp`,`matl`.`CREATE_PRCS_VAL` AS `productCreateProcessValue`,`matl`.`UPD_TS` AS `productUpdateTimestamp`,`matl`.`UPD_PRCS_VAL` AS `productUpdateProcessValue`,`matl`.`DEL_FLAG` AS `productDeleteFlag` from (((((((((((((((((((((((((((`MATL` `matl` join `SOURCE` `src` on((`src`.`SOURCE_KEY` = `matl`.`SOURCE_KEY`))) join `REF_VAL` `typ` on((`typ`.`REF_VAL_RKEY` = `matl`.`REC_TYP_RKEY`))) left join `REF_VAL` `styp` on((`styp`.`REF_VAL_RKEY` = `matl`.`REC_SUBTYP_RKEY`))) join `REF_VAL` `stat` on((`stat`.`REF_VAL_RKEY` = `matl`.`STAT_RKEY`))) left join `REF_VAL` `lotser` on((`lotser`.`REF_VAL_RKEY` = `matl`.`LOT_SERIAL_CD_RKEY`))) join `REF_VAL` `lang` on((`lang`.`REF_VAL_RKEY` = `matl`.`LANG_RKEY`))) left join `REF_VAL` `uom` on((`uom`.`REF_VAL_RKEY` = `matl`.`UOM_RKEY`))) join `REF_VAL` `trkind` on((`trkind`.`REF_VAL_RKEY` = `matl`.`TRACK_IND_RKEY`))) left join `REF_VAL` `trkmeth` on((`trkmeth`.`REF_VAL_RKEY` = `matl`.`TRACK_METHOD_RKEY`))) left join `REF_VAL` `trkpurp` on((`trkpurp`.`REF_VAL_RKEY` = `matl`.`TRACK_PURP_RKEY`))) left join `V_MATL_CFN` `cfn` on((`matl`.`MATL_KEY` = `cfn`.`MATL_KEY`))) left join `V_MATL_MPG` `mpg` on((`matl`.`MATL_KEY` = `mpg`.`MATL_KEY`))) left join `V_MATL_PROD_TYP` `prodtyp` on((`matl`.`MATL_KEY` = `prodtyp`.`MATL_KEY`))) left join `V_MATL_PROD_SET` `prodset` on((`prodtyp`.`REL_MATL_KEY` = `prodset`.`MATL_KEY`))) left join `V_MATL_PH1` `ph1` on((`matl`.`MATL_KEY` = `ph1`.`MATL_KEY`))) left join `V_MATL_PH2` `ph2` on((`matl`.`MATL_KEY` = `ph2`.`MATL_KEY`))) left join `V_MATL_PH3` `ph3` on((`matl`.`MATL_KEY` = `ph3`.`MATL_KEY`))) left join `V_MATL_PH4` `ph4` on((`matl`.`MATL_KEY` = `ph4`.`MATL_KEY`))) left join `V_MATL_PH5` `ph5` on((`matl`.`MATL_KEY` = `ph5`.`MATL_KEY`))) left join `V_MATL_PH6` `ph6` on((`matl`.`MATL_KEY` = `ph6`.`MATL_KEY`))) left join `MATL_ORG` `morg` on((`matl`.`MATL_KEY` = `morg`.`MATL_KEY`))) join `REF_VAL` `rvmo` on((`morg`.`REC_TYP_RKEY` = `rvmo`.`REF_VAL_RKEY`))) join `ORG` `mfg` on(((`morg`.`ORG_KEY` = `mfg`.`ORG_KEY`) and (`rvmo`.`REF_VAL` = 'MANU')))) left join `MATL_ORG` `morg2` on((`matl`.`MATL_KEY` = `morg2`.`MATL_KEY`))) join `REF_VAL` `rvmo2` on((`morg2`.`REC_TYP_RKEY` = `rvmo2`.`REF_VAL_RKEY`))) left join `REF_VAL` `rvmo3` on((`morg2`.`REC_SUBTYP_RKEY` = `rvmo3`.`REF_VAL_RKEY`))) join `ORG` `matldiv` on(((`morg2`.`ORG_KEY` = `matldiv`.`ORG_KEY`) and (`rvmo2`.`REF_VAL` = 'GEN') and (`rvmo3`.`REF_VAL` = 'CP_DIV')))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_PROD_UOM`
--

/*!50001 DROP VIEW IF EXISTS `V_PROD_UOM`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_PROD_UOM` AS select `muom`.`MATL_KEY` AS `productKey`,`src`.`SOURCE` AS `productUnitOfMeasureSourceName`,`muom`.`SOURCE_ID` AS `productUnitOfMeasureSourceID`,`typ`.`REF_VAL` AS `productUnitOfMeasureRecordTypeCode`,`typ`.`REF_VAL_DESC` AS `productUnitOfMeasureRecordTypeDesc`,`styp`.`REF_VAL` AS `productUnitOfMeasureRecordSubtypeCode`,`styp`.`REF_VAL_DESC` AS `productUnitOfMeasureRecordSubtypeDesc`,`stat`.`REF_VAL` AS `productUnitOfMeasureRecordStatusCode`,`stat`.`REF_VAL_DESC` AS `productUnitOfMeasureRecordStatusDesc`,`muom`.`GTIN_VAL` AS `productGTINValue`,`uom`.`REF_VAL` AS `productUnitOfMeasureCode`,`uom`.`REF_VAL_DESC` AS `productUnitOfMeasureDesc`,`muom`.`SOURCE_CREATE_USER_VAL` AS `productUnitOfMeasureSourceCreateUserValue`,`muom`.`SOURCE_CHG_USER_VAL` AS `productUnitOfMeasureSourceChangeUserValue`,`muom`.`SOURCE_CHG_PRCS_VAL` AS `productUnitOfMeasureSourceChangeProcessValue`,`muom`.`SOURCE_CHG_REASN_VAL` AS `productUnitOfMeasureSourceChangeReasonValue`,`muom`.`SOURCE_CREATE_TS` AS `productUnitOfMeasureSourceCreateTimestamp`,`muom`.`SOURCE_UPD_TS` AS `productUnitOfMeasureSourceUpdateTimestamp`,`muom`.`CREATE_TS` AS `productUnitOfMeasureCreateTimestamp`,`muom`.`CREATE_PRCS_VAL` AS `productUnitOfMeasureCreateProcessValue`,`muom`.`UPD_TS` AS `productUnitOfMeasureUpdateTimestamp`,`muom`.`UPD_PRCS_VAL` AS `productUnitOfMeasureUpdateProcessValue`,`muom`.`DEL_FLAG` AS `productUnitOfMeasureDeleteFlag` from ((((((`MATL_UOM` `muom` join `MATL` `matl` on((`matl`.`MATL_KEY` = `muom`.`MATL_KEY`))) join `SOURCE` `src` on((`src`.`SOURCE_KEY` = `muom`.`SOURCE_KEY`))) join `REF_VAL` `typ` on((`typ`.`REF_VAL_RKEY` = `muom`.`REC_TYP_RKEY`))) left join `REF_VAL` `styp` on((`styp`.`REF_VAL_RKEY` = `muom`.`REC_SUBTYP_RKEY`))) join `REF_VAL` `stat` on((`stat`.`REF_VAL_RKEY` = `muom`.`STAT_RKEY`))) join `REF_VAL` `uom` on((`uom`.`REF_VAL_RKEY` = `muom`.`UOM_RKEY`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_REF_VAL_MAPPINGS`
--

/*!50001 DROP VIEW IF EXISTS `V_REF_VAL_MAPPINGS`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_REF_VAL_MAPPINGS` AS select `cs`.`SOURCE` AS `CHILD_SOURCE`,`child_rv`.`REF_VAL` AS `REF_VAL`,`child_rv`.`REF_VAL_DESC` AS `REF_VAL_DESC`,`rvrt`.`REF_VAL_RLSHP_TYP_NM` AS `REF_VAL_RLSHP_TYP_NM`,`ps`.`SOURCE` AS `PARENT_SOURCE`,`parent_rv`.`REF_VAL` AS `MAPPED_REF_VAL`,`parent_rv`.`REF_VAL_DESC` AS `MAPPED_REF_VAL_DESC` from (((((`REF_VAL` `child_rv` join `SOURCE` `cs` on((`child_rv`.`SOURCE_KEY` = `cs`.`SOURCE_KEY`))) left join `REF_VAL_RLSHP` `rvr` on((`rvr`.`REF_VAL_RKEY` = `child_rv`.`REF_VAL_RKEY`))) join `REF_VAL_RLSHP_TYP` `rvrt` on((`rvr`.`REF_VAL_RLSHP_TYP_KEY` = `rvrt`.`REF_VAL_RLSHP_TYP_KEY`))) left join `REF_VAL` `parent_rv` on((`rvr`.`REL_REF_VAL_RKEY` = `parent_rv`.`REF_VAL_RKEY`))) join `SOURCE` `ps` on((`parent_rv`.`SOURCE_KEY` = `ps`.`SOURCE_KEY`))) where (`rvrt`.`REF_VAL_RLSHP_TYP_NM` = 'is mapped to') */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `V_REF_VAL_SETS`
--

/*!50001 DROP VIEW IF EXISTS `V_REF_VAL_SETS`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`super_user_1`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `V_REF_VAL_SETS` AS select `child_rv`.`REF_VAL` AS `REF_VAL`,`child_rv`.`REF_VAL_DESC` AS `REF_VAL_DESC`,`rvrt`.`REF_VAL_RLSHP_TYP_NM` AS `REF_VAL_RLSHP_TYP_NM`,`s`.`SOURCE` AS `SOURCE`,`parent_rv`.`REF_VAL` AS `REF_SET_VAL`,`parent_rv`.`REF_VAL_DESC` AS `REF_SET_DESC`,hex(`child_rv`.`REF_VAL_RKEY`) AS `HEX_REF_VAL_RKEY`,hex(`s`.`SOURCE_KEY`) AS `HEX_SOURCE_KEY` from (((((`REF_VAL` `child_rv` join `SOURCE` `s` on((`child_rv`.`SOURCE_KEY` = `s`.`SOURCE_KEY`))) left join `REF_VAL_RLSHP` `rvr` on((`rvr`.`REF_VAL_RKEY` = `child_rv`.`REF_VAL_RKEY`))) left join `SOURCE` `s2` on((`rvr`.`SOURCE_KEY` = `s2`.`SOURCE_KEY`))) left join `REF_VAL_RLSHP_TYP` `rvrt` on((`rvr`.`REF_VAL_RLSHP_TYP_KEY` = `rvrt`.`REF_VAL_RLSHP_TYP_KEY`))) left join `REF_VAL` `parent_rv` on((`rvr`.`REL_REF_VAL_RKEY` = `parent_rv`.`REF_VAL_RKEY`))) where (`rvrt`.`REF_VAL_RLSHP_TYP_NM` = 'is of code set') */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2020-11-12 11:28:56
